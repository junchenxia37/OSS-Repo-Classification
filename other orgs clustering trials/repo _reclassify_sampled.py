# -*- coding: utf-8 -*-
"""repo.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iUtNPUt2TCxb7i6POTBdZZjaR55DTNaw
"""

!pip3 install -q openai

from openai import OpenAI

import pandas as pd
import os
import random

# Initialize an empty list to store the information feed
information_feed = []
organizations = []

for filename in filter(lambda filename: filename.endswith('.csv'), os.listdir('/Users/Lenovo/Desktop/org info csv 2')):
    organizations.append([filename.removesuffix('.csv'), 0])
    al = pd.read_csv(filename)
    for index, row in al.iterrows():
        organizations[-1][1] += 1
        feed = str(row["name"]) + " " + (str(row["description"]) if pd.notnull(row["description"]) else " ")# + (str(row["readme"]) if pd.notnull(row["readme"]) else " ")
        information_feed.append(feed)

weights = []
for org in organizations:
    nrepo = org[1]
    for i in range(nrepo):
        weights.append(1/nrepo)

# weights = sum([[1/nrepo]*nrepo for nrepo in map(lambda pair: pair[1], organizations)])
information_feed = random.choices(information_feed, weights, k=500)

print(len(information_feed))

client = OpenAI(api_key='xxxxxx')

instruction = '''Based on the content provided, group all repositories into some clusters and provide a short definition of each cluster. Note that each cluster should contain more than 1 repository. In addition, the topics of repositories in the cluster should be as similar as possible.The repositories are primarily software development repositories.'''

messages = [
      {"role": "system", "content": instruction},
  ]


messages = [
      {"role": "system", "content": instruction},
  ]

prompt = ''

for i, desc in enumerate(information_feed):
  prompt = prompt + f'{desc}\n'

messages.append({"role": "user", 'content': prompt})
completion = client.chat.completions.create(
  model="gpt-4",
  messages=messages,
  seed = 3407
)

import pickle

with open('completion', 'wb') as f:
  pickle.dump(completion, f)

print(completion.choices[0].message.content)