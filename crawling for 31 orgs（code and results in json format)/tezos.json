[{"name": "bips", "description": "Bitcoin Improvement Proposals", "language": "Python", "license": null, "readme": null, "release_dates": []}, {"name": "Flex", "description": "The minimalist Pelican theme.", "language": "CSS", "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "readme": "# Flex [![Build Status](https://travis-ci.org/alexandrevicenzi/Flex.svg?branch=master)](https://travis-ci.org/alexandrevicenzi/Flex) [![Dependency Status](https://david-dm.org/alexandrevicenzi/Flex.svg)](https://david-dm.org/alexandrevicenzi/Flex) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/alexandre-vicenzi/flex?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\nThe minimalist [Pelican](http://blog.getpelican.com/) theme.\n\n## Note\n\nDON'T send any questions, issues or anything related to Flex to my personal email. They will be IGNORED by now. Your question maybe also is someone else's question. They SHOULD be public, so others can know how to fix configuration problems.\n\n## Features\n\n- Mobile First\n- Responsive\n- Semantic\n- SEO Best Practices\n- Open Graph\n- Rich Snippets (JSON-LD)\n- Related Posts (via [plugin](https://github.com/getpelican/pelican-plugins/tree/master/related_posts) or AddThis)\n- Minute read (via [plugin](https://github.com/getpelican/pelican-plugins/tree/master/post_stats)) (new in 2.0)\n- [Multiple Code Highlight Styles](https://github.com/alexandrevicenzi/Flex/wiki/Code-Highlight)\n- [Translation Support](https://github.com/alexandrevicenzi/Flex/wiki/Translations) (new in 2.0)\n\n## Integrations\n\n- [AddThis](http://www.addthis.com/) Share Buttons and Related Posts\n- [Disqus](https://disqus.com/)\n- [duoshuo](http://duoshuo.com/) (new in 2.2)\n- [Gauges Analytics](http://get.gaug.es/)\n- [Google AdSense](https://www.google.com.br/adsense/start/) (new in 2.1)\n- [Google Analytics](https://www.google.com/analytics/web/)\n- [Google Tag Manager](https://www.google.com/tagmanager/)\n- [Piwik Analytics](http://piwik.org/)\n- [StatusCake](https://www.statuscake.com/)\n\n## Plugins Support\n\n- [Github Corners](https://github.com/tholman/github-corners) (new in 2.2)\n- [I18N Sub-sites](https://github.com/getpelican/pelican-plugins/tree/master/i18n_subsites) (new in 2.0)\n- [Minute read](https://github.com/getpelican/pelican-plugins/tree/master/post_stats)) (new in 2.0)\n- [Related Posts](https://github.com/getpelican/pelican-plugins/tree/master/related_posts)\n- [Representative image](https://github.com/getpelican/pelican-plugins/tree/master/representative_image) (new in 2.2)\n- [Neighbors](https://github.com/getpelican/pelican-plugins/tree/master/neighbors) (new in 2.2)\n\n## Install\n\nThe recommend way to install is over [pelican-themes](https://github.com/getpelican/pelican-themes).\n\nThe `master` branch is the development branch. If you're happy with fresh new things and maybe sometimes (~most of time~) broken things you can clone the `master`, but I would recommend to you to clone a tag branch.\n\n## Documentation\n\n[Go to Wiki](https://github.com/alexandrevicenzi/Flex/wiki)\n\n## Contributing\n\nAlways open an issue before sending a PR. Talk about the problem/feature that you want to fix. If it's really a good thing you can submit your PR. If you send an PR without talking about before what it is, you may work for nothing.\n\nAs always, if you want something that only make sense to you, just fork Flex and start a new theme.\n\n## Donate\n\nAre you using this theme? Support bug fixes and new features.\n\n**PayPal** - [Click Here](http://bit.ly/flex-paypal)\n\n**BTC** - `1GgoDLWS1HoCkq1HgtpFHzbi5DnDceLGfd`\n\n![BTC](https://github.com/alexandrevicenzi/Flex/blob/master/btc.png)\n\n**DOGE** - `DLXtxaMmyoe4Z8uBcnjTCheAZRsAeWSgyp`\n\n## Live example\n\nYou can see how this theme looks like [here](https://blog.alexandrevicenzi.com/flex-pelican-theme.html).\n\n![Screenshot](https://github.com/alexandrevicenzi/Flex/blob/master/screenshot.png)\n\n## Translate\n\nTranslate this theme to new languages at [Transifex](https://www.transifex.com/alexandrevicenzi/flex-pelican/).\n\n![Translations](https://github.com/alexandrevicenzi/Flex/blob/master/translation_chart.png)\n\nRead more about [Translation Support](https://github.com/alexandrevicenzi/Flex/wiki/Translations).\n\n## License\n\nMIT\n", "release_dates": []}, {"name": "fundraiser-tools", "description": "Tolls for checking keys created in the Tezos fundraiser", "language": "HTML", "license": null, "readme": "# fundraiser-tools\nTools for checking keys created in the Tezos fundraiser\n", "release_dates": []}, {"name": "irmin", "description": "Irmin is a distributed database that follows the same design principles as Git", "language": "OCaml", "license": {"key": "isc", "name": "ISC License", "spdx_id": "ISC", "url": "https://api.github.com/licenses/isc", "node_id": "MDc6TGljZW5zZTEw"}, "readme": "## Irmin -- A distributed database that follows the same design principles as Git\n\nIrmin is a library for persistent stores with built-in snapshot,\nbranching and reverting mechanisms. It is designed to use a large\nvariety of backends. Irmin is written in pure OCaml and does not\ndepend on external C stubs; it aims to run everywhere, from Linux,\nto browsers and Xen unikernels.\n\n[![Build Status](https://travis-ci.org/mirage/irmin.svg)](https://travis-ci.org/mirage/irmin)\n[![docs](https://img.shields.io/badge/doc-online-blue.svg)](https://mirage.github.io/irmin/)\n\n### Description\n\nIrmin is a library to version-control application data. It has the following\nfeatures:\n\n- **on-disk format** various formats are supported, including the Git format:\n  Irmin on-disk repositories can be inspected and modified using the classic\n  Git command-line tools.\n\n- **wire format** various formats are supported, including the Git protocol\n  (only in client mode) or a simple JSON-based REST API (client and server).\n\n- **dynamic behaviour** Irmin allows the users to define custom merge functions,\n  to use in-memory transactions (to keep track of reads as well as writes) and\n  to define event-driven workflows using a notification mechanism.\n\nThese abstractions allow developers to create applications with concurrent\nbehaviors which are both efficient and safe.\n\n### Bindings to other languages\n\n- **Go** [irmin-go](https://github.com/magnuss/irmin-go)\n- **JavaScript** [irmin-js](https://github.com/talex5/irmin-js)\n\n### Backends\n\nIrmin ships with various backends. It provides the following OCamlfind pacakges:\n\n- `irmin.mem` is an in-memory backend.\n- `irmin.git` uses the Git format to persist data on disk.\n- `irmin.fs` uses [bin_prot](https://github.com/janestreet/bin_prot) to persist\n  data on disk.\n- `irmin.http` uses JSON over HTTP to speak with an Irmin server.\n\nOther external backends are available as external OPAM packages\n(use `opam install <pkg>` to install):\n\n- [irmin-chunk](https://github.com/mirage/irmin-chunk) stores raw contents into\n  a well-balanced rope where leafs are chunks of all the same size.\n- [irmin-indexdb](https://github.com/talex5/irmin-indexeddb) is a backend\n  for a web browser's IndexedDB store.\n\n### Datastructures\n\n- [merge-queues](https://github.com/mirage/merge-queues) is an implementation\n  of mergeable queues.\n- [merge-ropes](https://github.com/mirage/merge-ropes) is an implementation\n  of mergeable ropes.\n- [diff-datatypes](https://github.com/gprano/diff-datatypes) is a collection\n  of automatic merge functions based on edit scripts. It is fairly generic but\n  contains specific implementation for mergeable trees, stacks and queues.\n- [irmin-datatypes](https://github.com/kayceesrk/irmin-datatypes) is a\n  collection of mergeable datatypes, including LWW registers, queues and sets.\n\n### Use-Cases\n\nHere a list of Irmin users:\n\n- [Cuekeeper](https://github.com/talex5/cuekeeper) a\n  version-controlled TODO list in the browser.\n- [imaplet](https://github.com/gregtatcam/imaplet-lwt), a version-controlled\n  IMAP server and client.\n- [jitsu](https://github.com/mirage/jitsu), a DNS server that automatically\n  starts unikernels on demand. The database is persisted with Irmin.\n- [Irmin+Xenstore](https://github.com/djs55/ocaml-xenstore/tree/irminsule), the\n  Xenstore deamon rewritten to use Irmin to persist its data.\n- [irmin-arp](https://github.com/yomimono/irmin-arp), a distributed ARP cache.\n- [dog](https://github.com/samoht/dog), a synchronisation tool.\n- [irminFS](https://github.com/dsheets/irminfs), a prototype version-controlled\n  file-system using Fuse.\n\n### Further Reading\n\n- [What a Distributed, Version-Controlled ARP Cache Gets\nYou](http://www.somerandomidiot.com/blog/2015/04/24/what-a-distributed-version-controlled-ARP-cache-gets-you/).\nBlog post describing how Irmin can be used with Mirage to store the\nnetwork stack's ARP cache, which allows the history to be viewed using\nthe git tools.\n\n- [CueKeeper: Gitting Things Done in the\nBrowser](http://roscidus.com/blog/blog/2015/04/28/cuekeeper-gitting-things-done-in-the-browser/).\nA GTD-based todo list running client-side in the browser, using Irmin\ncompiled to JavaScript to provide history, revert and synchronisation\nbetween tabs. The data is stored using an IndexedDB Irmin backend.\n\n- [Using Irmin to add fault-tolerance to the Xenstore\ndatabase.](https://mirage.io/blog/introducing-irmin-in-xenstore)\nPorting the Xen hypervisor toolstack to support Git persistence via\nIrmin.\n\n- [Introducing Irmin: Git-like distributed, branchable\nstorage.](https://mirage.io/blog/introducing-irmin) This is the first\npost that describes Irmin, the new Git-like storage layer for Mirage\nOS 2.0.\n\n### Getting Started\n\n#### Install\n\nIrmin is packaged with [opam](https://opam.ocaml.org):\n\n```\nopam install irmin-unix # install all the optional depencies\n```\n\n#### Usage\n\nIrmin comes with a command-line tool called `irmin`. See `irmin\n --help` for further reading. Use either `irmin <command> --help` or\n `irmin help <command>` for more information on a specific command.\n\nTo get the full capabilites of Irmin, use the [API](https://mirage.github.io/irmin):\n\n```ocaml\nopen Lwt\nopen Irmin_unix\nmodule Store =\n  Irmin_git.FS (Irmin.Contents.String)(Irmin.Ref.String)(Irmin.Hash.SHA1)\n\nlet config = Irmin_git.config ~root:\"/tmp/irmin/test\" ~bare:true ()\nlet prog =\n  Store.Repo.create config >>= Store.master task >>= fun t ->\n  Store.update (t \"Updating foo/bar\")  [\"foo\"; \"bar\"] \"hi!\" >>= fun () ->\n  Store.read_exn (t \"Reading foo/bar\") [\"foo\"; \"bar\"] >>= fun x ->\n  Printf.printf \"Read: %s\\n%!\" x;\n  Lwt.return_unit\nlet () = Lwt_main.run prog\n```\n\nTo compile the example above, save it to a file called\n`example.ml`. Install irmin and git with opam (`opam install irmin-unix`) and\nrun\n\n```ocaml\n$ ocamlfind ocamlopt example.ml -o example -package irmin.unix,lwt.unix -linkpkg\n$ ./example\nRead: hi!\n```\n\nThe `examples` directory contains more examples. To build them, run\n\n```ocaml\n$ ./configure --enable-examples\n$ make\n```\n\n#### Tutorial\n\nTutorials are available on the\n[wiki](https://github.com/mirage/irmin/wiki/).\n\n### Issues\n\nTo report any issues please use the [bugtracker on\nGithub](https://github.com/mirage/irmin/issues).\n\n### Conditions\n\nCopyright (c) 2013-2015 Thomas Gazagnaire <thomas@gazagnaire.org>\n\nPermission to use, copy, modify, and distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n### Acknowledgements\n\nDevelopment of Irmin was supported in part by the EU FP7 User-Centric Networking\nproject, Grant No. 611001.\n", "release_dates": []}, {"name": "opam-repository", "description": "Clone of the public opam repository from which merge requests can be created to publish Tezos-related packages, such as Octez releases.", "language": "Shell", "license": {"key": "cc0-1.0", "name": "Creative Commons Zero v1.0 Universal", "spdx_id": "CC0-1.0", "url": "https://api.github.com/licenses/cc0-1.0", "node_id": "MDc6TGljZW5zZTY="}, "readme": "This repository contains OCaml package and compiler metadata and is\nused by the default installation of [opam](https://opam.ocaml.org/).\n\nThe state of the package ecosystem can be explored using opam-health-check<sup>[[1]]</sup>: http://check.ci.ocaml.org/\n\n# CI troubleshooting\n\n* If you have an issue or a feature request for opam-CI (used for all PRs), please open a ticket at https://github.com/ocurrent/opam-repo-ci/issues\n* If you think there is an issue in the CI infrastructure, please open a ticket at https://github.com/ocaml/infrastructure/issues\n* If you have an issue or a feature request for opam-health-check, please open a ticket at https://github.com/ocurrent/opam-health-check/issues\n\n## How to Contribute\n\nContributions are welcome !\n\nThe [CONTRIBUTING.md](CONTRIBUTING.md) document has general guidelines\non how to contribute.\n\nIf you would like to add a new package consult\n[these instructions](https://opam.ocaml.org/doc/Packaging.html#Publishing).\n\n## License\n\nAll the metadata contained in this repository are licensed under the\n[CC0 1.0 Universal](http://creativecommons.org/publicdomain/zero/1.0/)\nlicense.\n\nMoreover, as the collection of the metadata in this repository is\ntechnically a \"Database\" -- which is subject to a \"sui generis\" right\nin Europe -- we would like to stress that even the *collection* of\nthe metadata contained in opam-repository is licensed under CC0 and\nthus the simple act of cloning opam-repository is perfectly legal.\n\n[1]: https://github.com/ocurrent/opam-health-check\n", "release_dates": []}, {"name": "optimal_stack", "description": "Compiler for stack manipulation in Michelson", "language": "OCaml", "license": null, "readme": "# optimal_stack\n\nI don't think the heap implementation is mine, but I don't remember\nwhere it's from. Let me know if you find it so I can put the right license.\n\n\n\n\nCompiler for stack manipulation in Michelson\n\nA lot of operations in Michelson are stack manipulation operations that \ndecompose structures on the stack and recompose them. This is a compiler\nthat calculates the optimal sequence of stack operations to achieve\na given result using A\\*.\n\nThis could be used as a light compilation pass for a JUMBLE macro\nthat would work like this:\n\nJUMBLE (a,b):c:(d,(e,f)) => (a,f):(c,d)\n\nWould turn a stack of the form on the left into a stack of the form\non the right. a,b,c,d,e,f are symbolic variables.\n\nCurrently, this compiler is quite slow because it attempts to find\nthe *optimal* solution. Here are ways in which it could be made practical\n\n1. Instead of searching for an optimal solution among the graph\nof all stack manipulations, start from a known admissible solution\nand refine it using a set of rewriting rules.\n\n2. Speed up the seach by\n - introducing more theorems about minimal costs in order to improve the A\\* heuristic\n - adding pseudo-instructions with known costs in order to help guide the search\n\n", "release_dates": []}, {"name": "tezos", "description": "Mirror of the release branches for Tezos, a self-amending cryptographic ledger", "language": null, "license": null, "readme": "\nThis mirror has been deprecated.\nA new mirror has been setup here: https://github.com/tezos/tezos-mirror\n", "release_dates": []}, {"name": "tezos-explorer", "description": "A block explorer for Tezos", "language": "Makefile", "license": null, "readme": "A chain explorer for tezos.\n\nFor now, it solely consists of a work in progress SQL schema for\nPostgreSQL.\n\n# Test instructions\n\nHere are basic instructions to init a PostgreSQL database and import\nthe schema:\n\n\n```\n$ make init\n$ make\n```", "release_dates": []}, {"name": "tezos-mirror", "description": "Github test mirror of the Octez software. Please do not submit pull-requests here!", "language": "OCaml", "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "readme": "# Tezos Octez implementation\n\n## Introduction\n\nTezos is a blockchain that offers both  _consensus_ and _meta-consensus_, by which we mean that Tezos comes to consensus both about the state of its ledger, and  _also_ about how the\nprotocol and the nodes should adapt and upgrade.\nFor more information about the project, see https://tezos.com.\n\n## Getting started\n\nInstructions to\n[install](https://tezos.gitlab.io/introduction/howtoget.html), [start\nusing](https://tezos.gitlab.io/introduction/howtouse.html), and\n[taking part in the\nconsensus](https://tezos.gitlab.io/introduction/howtorun.html) are\navailable at https://tezos.gitlab.io/.\n\n## The Tezos software\n\nThis repository hosts **Octez**, an implementation of the Tezos blockchain.\nOctez provides a node, a client, a baker, an accuser, and other tools, distributed with the Tezos economic protocols of Mainnet for convenience.\n\nIn more detail, this git repository contains:\n- the source code, in directory src/\n- tests (mainly system tests) in an OCaml system testing framework for Tezos called Tezt, under tezt/\n- the developer documentation of the Tezos software, under docs/\n- a few third-party libraries, adapted for Tezos, under vendors/\n\nThe Tezos software may run either on the nodes of\nthe main Tezos network (mainnet) or on [various Tezos test\nnetworks](https://tezos.gitlab.io/introduction/test_networks.html).\n\nThe documentation for developers, including developers of the Tezos software\nand developer of Tezos applications and tools, is available\nonline at https://tezos.gitlab.io/. This documentation is always in\nsync with the master branch which may however be slightly\ndesynchronized with the code running on the live networks.\n\nThe source code of Octez is placed under the [MIT Open Source\nLicense](https://opensource.org/licenses/MIT).\n\n## Contributing\n\n### Development workflow\n\nAll development of the Tezos code happens on\nGitLab at https://gitlab.com/tezos/tezos. Merge requests\n(https://gitlab.com/tezos/tezos/-/merge_requests) should usually\ntarget the `master` branch; see [the contribution\ninstructions](https://tezos.gitlab.io/developer/contributing.html).\n\nThe issue tracker at https://gitlab.com/tezos/tezos/issues can be used\nto report bugs and to request new simple features. The [Tezos Agora\nforum](https://forum.tezosagora.org/) is another great place to\ndiscuss the future of Tezos with the community at large.\n\n#### Continuous Integration\n\nRunning CI pipelines in your forks using GitLab's shared runners\nmay fail, for instance because tests may take too long to run.\nThe CI of `tezos/tezos` (i.e. https://gitlab.com/tezos/tezos)\nuses custom runners that do not have this issue.\nIf you create a merge request targeting `tezos/tezos`, pipelines\nfor your branch will run using those custom runners.\nTo trigger those pipelines you need to be a developer in the\n`tezos/tezos` project. Otherwise, reviewers can do that for you.\n\n### Development of the Tezos protocol\n\nThe core of the Tezos software that implements the economic ruleset is\ncalled the *protocol*. Unlike the rest of the source code, updates to the\nprotocol must be further adopted through the [Tezos\non-chain voting\nprocedure](https://tezos.gitlab.io/whitedoc/voting.html). Protocol\ncontributors are encouraged to synchronize their contributions to\nminimize the number of protocol proposals that the stakeholders have\nto study and to maximize the throughput of the voting procedure.\n\n## Community\n\nLinks to community websites are gathered at <https://tezos.gitlab.io/introduction/tezos.html#the-community>.\n", "release_dates": []}, {"name": "tezos-papers", "description": "Original position paper and white paper for Tezos", "language": "TeX", "license": null, "readme": "These are the sources of the original Tezos paper by L.M. Goodman with very minor edits and typo fixes.\nThey are being made available in order to facilitate translation of the papers.\n\nA word of caution, though the project is substantially similar to the protocol described in the paper,\nsome implementation details have changed. At this point, the protocol is defined by its reference\nimplementation in OCaml.\n", "release_dates": []}, {"name": "tezoscoq", "description": "working with coq and tezos", "language": "Coq", "license": null, "readme": null, "release_dates": []}, {"name": "zarith-benchmark", "description": "Benchmarking tool for Zarith (libGMP) to calibrate gas costs in Michelson", "language": "OCaml", "license": null, "readme": null, "release_dates": []}]