[{"name": "aiken-lucid-yaci-dev-kit-starter-kit", "description": "A template showing how to develop on Cardano using Yaci-Dev-Kit, Lucid and Aiken.", "language": "TypeScript", "license": null, "readme": "# aiken-lucid-yaci-dev-kit-starter-kit\n\nA template demonstrating a simple \"hello world\" contract that locks ADA asset and unlocks it with a \"secret passcode\".\n\n# Aiken Presentation\n- [https://slides.com/ktorz/aiken](https://slides.com/ktorz/aiken)\n\n# Technologies\n- Aiken (on-chain)\n- Lucid (off-chain)\n- Yaci-Dev-Kit (local Cardano dev node)\n\n# Tutorial\nTo get started, follow instructions from here:\n[https://docs.google.com/document/d/1PoAqQu7NweEz8_WCQFKb44tkufjEStUpkGTj3G17eqw](https://docs.google.com/document/d/1PoAqQu7NweEz8_WCQFKb44tkufjEStUpkGTj3G17eqw)\n", "release_dates": []}, {"name": "ambassadors-guild", "description": "The Ambassadors Guild aims to support the Community and the Foundation as a communicative and coordinating body, acting as an independent and supportive extension of the Foundation. ", "language": null, "license": null, "readme": "# ambassadors-guild\n\nThe Ambassadors Guild aims to support the Community and the Foundation as a communicative and coordinating body, acting as an independent and supportive extension of the Foundation.\n\nhttps://ambassadors-guild.io\n", "release_dates": []}, {"name": "blockperf", "description": null, "language": "Python", "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "readme": "[![Nix](https://github.com/cardano-foundation/blockperf/actions/workflows/nix.yml/badge.svg)](https://github.com/cardano-foundation/blockperf/actions/workflows/nix.yml)\n\n# Cardano blockperf\n\nCardano blockperf constantly reads the cardano-node logfiles and measures block\npropagation times in the network as seen from that node. The data created will\nbe sent to an MQTT Broker for collection and further analysis. The Broker\ncurrently runs on AWS' IoT Core Platform and is operated by the Cardano Foundation.\nAggregated data sets of all single nodes' data points are published here on a daily basis: <https://data.blockperf.cardanofoundation.org/>\nA visualized version will be publicly available soon.\n\nIf you want to contribute your nodes' propagation times, please get in touch with\nthe Cardano Foundation's OPS & Infrastructure team to receive your blockperf client certificate.\nMost valuable are nodes located in geographically remote locations or outside hotspots.\n\n## Configuration of cardano-node\n\nFor blockperf to be able to work you need to change the following\nin the cardano-node configuration.\n\n* Make the node log to a json file\n\n```json\n\"defaultScribes\": [\n    [\n      \"FileSK\",\n      \"/opt/cardano/cnode/logs/node.json\"\n    ]\n]\n\n\"setupScribes\": [\n    {\n    \"scFormat\": \"ScJson\",\n    \"scKind\": \"FileSK\",\n    \"scName\": \"/opt/cardano/cnode/logs/node.json\"\n    }\n]\n```\n\n* Enable tracers\n\nThe default configuration files from <https://book.world.dev.cardano.org/environments.html> have some tracers enabled. You need to enable the following:\n\n```json\n\"TraceChainSyncClient\": true,\n\"TraceBlockFetchClient\": true,\n```\n\n## Installing blockperf\n\nTo install blockperf you need to clone it from the github repository. I recommend\nyou use a virtualenv. The topic of virtual environments in python can be daunting\nif you are new to it. The way i would reccomend is the most simple way of creating\nvirtual environments by using the builtin venv module (examples see below)\n<https://docs.python.org/3/library/venv.html>. This creates lightweight python\nenvironments with their own installation path so you dont need to install things\nin your system python environmnet. However, the way you install blockperf is\nup to you, its just a python package after all.\n\n```bash\n# Create the folder you want blockperf to live in\n# cd into it and clone the repo\nmkdir -p /opt/blockperf\ncd /opt/blockperf\ngit clone git@github.com:cardano-foundation/blockperf.git .\n\n# Create a venv and activate it.\npython3 -m venv .venv\nsource .venv/bin/activate\n\n# Install blockperf via pip\npip install .\n\n# Test it by issuing the command, it should print some help ...\nblockperf --help\n```\n\n> **Note**\n> You must activate the virtual environment everytime you want to work with\n> blockperf. See docs if you are new to virtual environments:\n> <https://docs.python.org/3/tutorial/venv.html>\n\n**Test your installation**\n\n```bash\n# Remember to activate the virtual environment if not in the same shell as above\n# source .venv/bin/activate\nblockperf run\n```\n\n## Configuration of blockperf\n\nTo configure blockperf configure the following environment variables\n\n```bash\n# Path to you cardano-node's config\nBLOCKPERF_NODE_CONFIG=\"/opt/cardano/cnode/files/config.json\"\n# Path to your cardano-node's logfile\nBLOCKPERF_NODE_LOGFILE=\"/opt/cardano/cnode/logs/node.json\"\n# The public ip address your node is reachable at\nBLOCKPERF_RELAY_PUBLIC_IP=\"x.x.x.x\"\n# your client identifier, will be given to you with the certificates\nBLOCKPERF_NAME=\"XX\"\n# path to your client certificate file\nBLOCKPERF_CLIENT_CERT=\"XXX\"\n# path to your client key file\nBLOCKPERF_CLIENT_KEY=\"XXX\"\n# Comma separated list of ip addresses that you do not want to share\n# You will most likely want to add your block producing node's ip address here\nBLOCKPERF_MASKED_ADDRESSES=\"x.x.x.x,x.x.x.x\"\n# path to amazons ca file in pem format, find it here: https://www.amazontrust.com/repository/AmazonRootCA1.pem\nBLOCKPERF_AMAZON_CA=\"XXX\"\n```\n\nYou could put all of the above in a file `/etc/default/blockperf` and then\nhave your shell load that with\n\n```bash\nset -a\nsource /etc/default/blockperf\n```\n\n**Systemd service**\n\nA simple example of blockperf as service unit. Remember to set the\nexecutable to blockperf within the virtual environment you have installed it in!\n\n```ini\n[Unit]\nDescription=Blockperf.py\n\n[Service]\nType=simple\nRestart=always\nRestartSec=20\nUser=ubuntu\nEnvironmentFile=/etc/default/blockperf\nExecStart=/opt/cardano/cnode/blockperf/.venv/bin/blockperf run\nKillSignal=SIGINT\nSyslogIdentifier=blockperf\nTimeoutStopSec=5\n```\n\n## Development\n\n* Create venv and activate if you have not yet already\n\n```bash\npython3 -m venv .venv\n```\n\n* Install development dependencies\n\n```bash\npip install -r dev_requirements.txt\n```\n\n* Run tests\n\n```bash\npytest\n```\n\n* run mypy\n\n```bash\n# prior to running mypy you need to install thes types from 3rd party libraries\npip install types-paho-mqtt\npip install types-psutil\n\n# Then run mypy\nmypy src\n```\n", "release_dates": []}, {"name": "cardano-backer", "description": "KERI Ledger Backer based on Cardano", "language": "Python", "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "readme": "# KERI Registrar Backer on Cardano\nA KERI witness that anchors key events on Cardano blockchain.\n\n## Feaures\n* Cardano Address is derived from the same Ed25519 seed (private key) used to derive the prefix of the backer\n* Anchoring KELs from multiple prefixes\n* Queue events during a period of time to allow several block confirmations as a safety meassure\n* Optional funding address to fund the backer address\n\n## Previous and related work\n*  [keri-roots](https://github.com/roots-id/keri-roots)\n* original `keripy` [PR](https://github.com/WebOfTrust/keripy/pull/418)\n\n## Installation\n```\npip install -e .\n```\nCheck installation and available commands:\n```\n$ backer --help\nusage: backer [-h] command ...\n\noptions:\n  -h, --help  show this help message and exit\n\nsubcommands:\n\n  command\n    info      Display registrar backer information\n    query     Query KEL on ledger for a given prefix\n    start     Runs KERI backer controller\n```\n\n## Start script example\n```\n./tests/start_backer.sh\n```\nCheck variables and environmental variables that you can pass to configure the backer.\n\n## Environment variables\n### `BLOCKFROST_API_KEY`\n\nAPI KEY from [Blockfrost](https://blockfrost.io). It's the only `REQUIRED` variable and it's needed to interact with the Cardano blockchain. Block Frost provide a free tier service with limits. Additionally, you can select Cardano mainnet or a testnet.\n\nBe aware that the Backer Cardano address needs to be funded (transfer ADA or tADA to it). If you are using the testnet, you can fund it at [Testnets faucet](https://docs.cardano.org/cardano-testnet/tools/faucet).\n\n### `FUNDING_ADDRESS_CBORHEX`\n This is an `OPTIONAL` variable to provide the Private Key of funding address as CBOR Hex. Must be an Enterprice address (no Staking part) as PaymentSigningKeyShelley_ed25519. Note that storing private keys in an environmental variable is highly insecure !\n\n### `BACKER_CONFIG_DIR`\nThis environmental variable is used by `start_backer.sh` script to specify the directory to place the configuration files.\n\n### `BACKER_STORE_DIR`\nThis environmental variable is used by `start_backer.sh` script to specify the directory to create the database and keystore.\n\n### `BACKER_URL`\nThis environmental variable is used by `start_backer.sh` script to specify the URL of the backer needed to resolve `OOBI` and to receive queries from the agents.\n\n### `BACKER_PORT`\nThis environmental variable is used by `start_backer.sh` script to specify the PORT of the backer needed to resolve `OOBI` and to receive queries from the agents.\n\n### `BACKER_SALT`\nThis environmental variable is used by `start_backer.sh` script that passes it to the `kli init` as a `SALT` parameter. It's a qualified base64 salt for creating key pairs, that means that you can regenerate a backer with same AID and Cardano address.\n\n\n## Docker\n```\ndocker build -f ./Dockerfile .  -t cardano-backer   // use --platform=linux/amd64 if needed\ndocker run -i -t -p 5666:5666 -e BLOCKFROST_API_KEY={API KEY} cardano-backer\n```\n\n", "release_dates": []}, {"name": "cardano-connect-with-wallet", "description": "This repository aims to provide useful hooks and React components as well as a framework-independent core library", "language": "TypeScript", "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "readme": "# Cardano connect with wallet\n\n<p align=\"left\">\n<img alt=\"Tests\" src=\"https://img.shields.io/github/actions/workflow/status/cardano-foundation/cardano-connect-with-wallet/test.yml?label=Tests&style=for-the-badge\" />\n<img alt=\"Release\" src=\"https://img.shields.io/github/actions/workflow/status/cardano-foundation/cardano-connect-with-wallet/release.yml?label=Release&style=for-the-badge\" />\n<a href=\"https://conventionalcommits.org\"><img alt=\"conventionalcommits\" src=\"https://img.shields.io/badge/Conventional%20Commits-1.0.0-%23FE5196?logo=conventionalcommits&style=for-the-badge\" /></a>\n<a href=\"https://discord.gg/4WVNHgQ7bP\"><img alt=\"Discord\" src=\"https://img.shields.io/discord/1022471509173882950?style=for-the-badge\"></a>\n</p>\n\nThis repository aims to provide useful JavaScript and TypeScript functions to simplify the dApp developement. Those framework-independent helpers are located in the [core module](./core/).\n\nPlease take a look into the [react module](./react/) if you are looking for React components and hooks to connect browser wallets, fetch addresses and provide signing ([CIP 8](https://cips.cardano.org/cip/CIP-0008), [CIP 30](https://cips.cardano.org/cip/CIP-0030)).\n\n<img src=\"https://user-images.githubusercontent.com/1525818/192223749-205be194-7707-4726-9ef1-72d0c2c7f903.gif\" width=\"600\" />\n\n## \ud83d\ude80 Getting Started\n\n### React\n\n```zsh\nnpm i @cardano-foundation/cardano-connect-with-wallet\n```\n\nFor more detailed information and usage examples, please refer to the [storybook playground](https://cardano-foundation.github.io/cardano-connect-with-wallet/react-storybook).\n\nA basic description is also available in the [react module](./react/).\n\n### Core\n\n```zsh\nnpm i @cardano-foundation/cardano-connect-with-wallet-core\n```\n\nImport examples and a description of the `Wallet` module are available in the [core module](./core/).\n\n## \ud83d\udcaa Contributing\n\nPlease have a look at our [contributing infos](CONTRIBUTING.md) to become familiar with our guidelines. There is also a short description for our development setup as we use [Storybook](https://storybook.js.org/) for testing, playing around and for supporting the development process.\n", "release_dates": ["2023-11-22T08:04:59Z", "2023-11-22T07:51:18Z", "2023-09-20T09:45:16Z", "2023-08-15T13:35:41Z", "2023-08-14T20:49:18Z", "2023-08-10T18:23:32Z", "2023-08-10T17:18:57Z", "2023-08-09T21:08:14Z", "2023-08-07T21:45:17Z", "2023-08-06T18:03:10Z", "2023-08-04T19:24:33Z", "2023-08-02T21:21:21Z", "2023-07-29T18:12:32Z", "2023-07-16T22:21:46Z", "2023-07-16T18:46:16Z", "2023-07-14T18:19:56Z", "2023-07-13T21:16:13Z", "2023-07-11T20:00:30Z", "2023-07-08T11:34:38Z", "2023-07-08T06:27:38Z", "2023-07-05T10:05:27Z", "2023-05-11T18:48:57Z", "2023-04-23T07:46:08Z", "2023-04-21T21:37:10Z", "2023-04-20T13:48:07Z", "2023-04-04T20:52:53Z", "2023-04-03T19:49:51Z", "2023-04-03T09:07:45Z", "2023-03-17T10:32:07Z", "2023-03-17T09:30:00Z"]}, {"name": "cardano-explorer-app", "description": "Cardano Explorer App", "language": "TypeScript", "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "readme": "Cardano Explorer App\n====================\n[![Tests](https://github.com/input-output-hk/cardano-explorer-app/workflows/Tests/badge.svg)](https://github.com/input-output-hk/cardano-explorer-app/actions?query=workflow%3ATests)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)\n\nA React app with GraphQL client interfacing with [Cardano GraphQL](https://github.com/input-output-hk/cardano-graphql).\n\n### Environment Variables\nSee [environment](source/environment.ts) for defaults.\n- `CARDANO_ERA`\n- `CARDANO_NETWORK`\n- `GRAPHQL_API_PROTOCOL`\n- `GRAPHQL_API_HOST`\n- `GRAPHQL_API_PORT`\n- `GRAPHQL_API_PATH`\n- `POLLING_INTERVAL`\n- `GA_TRACKING_ID`\n- `DEBUG`\n\n## Build\nThis project uses an offline package cache to enable reproducible builds.\n\n### yarn\n```console\nyarn --offline && yarn static:build\n```\n\n### nix\n``` console\nnix-build -A cardano-explorer-app\n```\n## Deploy\nThe static bundle can be deployed using a standard web server. A simple [Node.js program](deploy/index.js) \nis available for deploying the build to an AWS S3 bucket.\n\n```console\nAWS_ACCESS_KEY_ID=your_access_key_id \\\nAWS_SECRET_ACCESS_KEY=your_secret_access_key node \\\n./deploy/example_deployment.js\n```\n\n## Development\nThe environment is configured to access a remote managed deployment of the API, \nhowever you can run a local stack using Docker and use a `.env` to work offline. \nSee [.env.example](.env.example)\n\n### `yarn dev`\n- Starts the development version of the app by default at http://localhost:4000\n- Generates graphql typings from the referenced schema in [`@cardano-graphql/client-ts`](https://github.com/input-output-hk/cardano-graphql/tree/master/packages/client-ts) \nand documents within the codebase.\n- Any changes to graphql documents will trigger the TypeScript generator.\n\n###  Storybook\n\nAll visual components should be developed in Storybook first.\n\n### `yarn storybook`\n\n### Continuous Deployment\nThe `master` and `develop` branches are continuously deployed, with PRs creating merge previews to assist with review:\n#### Mainnet\n[![Netlify Status](https://api.netlify.com/api/v1/badges/09492acb-61fd-4745-8b0e-60c8886f60d1/deploy-status)](https://cardano-explorer-mainnet.netlify.app)\n#### Testnet\n[![Netlify Status](https://api.netlify.com/api/v1/badges/16628b5d-b1f2-429b-a707-bbdec0564fe9/deploy-status)](https://cardano-explorer-testnet.netlify.app)\n", "release_dates": ["2021-07-27T15:29:51Z", "2021-04-06T09:14:56Z", "2021-02-26T13:39:54Z", "2021-01-20T00:25:42Z", "2020-12-16T00:53:27Z", "2020-09-30T12:15:49Z", "2020-09-18T08:20:20Z", "2020-08-06T19:00:48Z", "2020-07-29T18:40:03Z", "2020-07-08T16:29:45Z", "2020-06-17T04:36:26Z", "2020-05-14T05:56:52Z", "2020-05-07T14:13:11Z"]}, {"name": "cardano-graphql", "description": "GraphQL API for Cardano", "language": "Nix", "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "readme": "<p align=\"center\">\n  <big><strong>Cardano GraphQL</strong></big>\n</p>\n\n<p align=\"center\">\n  <img width=\"200\" src=\".github/images/cardano-logo.png\"/>\n</p>\n\n[![CI][img_src_CI]][workflow_CI]\n\n<hr/>\n\n## Overview\n\nCross-platform, _typed_, and **queryable** API for Cardano. The project contains multiple [packages] for composing \nGraphQL services to meet specific application demands, and a [docker compose stack] serving the included \n[cardano-graphql-server Dockerfile], the extended [hasura Dockerfile], [cardano-node-ogmios]. The [schema] is defined in\nnative `.graphql`, and used to generate a [TypeScript package for client-side static typing]. A mutation is available to \nsubmit a signed and serialized transaction to the local node.\n \n[Apollo Server] exposes the NodeJS execution engine over a HTTP endpoint, and includes support for open source metrics\nvia Prometheus, and implementing operation filtering to deny unexpected queries. Should you wish to have more control\nover the server, or stitch the schema with an existing service, consider importing the executable schema from the \n`@cardano-graphql/api-*` packages only.\n\n**GraphQL** is a query language and execution environment with server and client implementations across many programming\nlanguages. The language can be serialized for network transmission, schema implementations hashed for assurance, and is\nsuited for describing most domains.\n \n**TypeScript** (and JS) has the largest pool of production-ready libraries, developers, and interoperability in the\nGraphQL and web ecosystem in general. TypeScript definitions for the schema, generated by [GraphQL Code Generator], are\n[available on npm].\n\n**[Ogmios]** is a protocol translation service written in Haskell running on top of cardano-node. It offers a JSON\ninterface through WebSockets and enables applications to speak Ouroboros' client mini-protocols via remote procedure\ncalls.\n\n## Getting Started\nCheck the [releases] for the latest version.\n``` console\ngit clone \\\n  --single-branch \\\n  --branch 8.0.0 \\\n  --recurse-submodules \\\n  https://github.com/input-output-hk/cardano-graphql.git \\\n  && cd cardano-graphql\n```\n\n### Up\nChoose **one** of the following:\n\n#### A) Build and Run via Docker Compose\nBoot the [docker compose stack] using a convention for container and volume scoping based on the network, as well as\noptionally hitting the remote cache to speed up the build. The containers are detached, so you can terminate the log\nconsole session freely. See [Docker Compose docs] to tailor for your use-case\n \n<details open>\n  <summary><i>mainnet</i></summary>\n\nGet the most recent weekly snapshot link [here](https://update-cardano-mainnet.iohk.io/cardano-db-sync/index.html#12/), and set it as `RESTORE_SNAPSHOT` below, or omit if you wish to sync from genesis.\n``` console\nDOCKER_BUILDKIT=1 \\\nCOMPOSE_DOCKER_CLI_BUILD=1 \\\nRESTORE_SNAPSHOT=https://update-cardano-mainnet.iohk.io/cardano-db-sync/13/db-sync-snapshot-schema-13-block-8291499-x86_64.tgz \\\ndocker compose up -d --build &&\\\ndocker compose logs -f\n```\n</details>\n\n<details>\n  <summary><i>preprod</i></summary>\n\n``` console\nDOCKER_BUILDKIT=1 \\\nCOMPOSE_DOCKER_CLI_BUILD=1 \\\nNETWORK=preprod \\\nAPI_PORT=3101 \\\nHASURA_PORT=8091 \\\nOGMIOS_PORT=1338 \\\nPOSTGRES_PORT=5433 \\\nMETADATA_SERVER_URI=\"https://metadata.cardano-testnet.iohkdev.io\" \\\ndocker compose -p preprod up -d --build &&\\\ndocker compose -p preprod logs -f\n```\n\n</details>\n\n<details>\n  <summary><i>preview</i></summary>\n\n``` console\nDOCKER_BUILDKIT=1 \\\nCOMPOSE_DOCKER_CLI_BUILD=1 \\\nNETWORK=preview \\\nAPI_PORT=3102 \\\nHASURA_PORT=8092 \\\nOGMIOS_PORT=1339 \\\nPOSTGRES_PORT=5434 \\\nMETADATA_SERVER_URI=\"https://metadata.cardano-testnet.iohkdev.io\" \\\ndocker compose -p preview up -d --build &&\\\ndocker compose -p preview logs -f\n```\n\n</details>\n\n#### B) Pull and Run via Docker Compose\nPull images from Docker Hub and run using a convention for container and volume scoping based on the network. The\ncontainers are detached, so you can terminate the log console session freely. See [Docker Compose docs] to tailor for\nyour use-case.\n\n<details open>\n  <summary><i>mainnet</i></summary>\n\nGet the most recent weekly snapshot link [here](https://update-cardano-mainnet.iohk.io/cardano-db-sync/index.html#11/), and set it as `RESTORE_SNAPSHOT` below, or omit if you wish to sync from genesis.\n``` console\nexport NETWORK=mainnet &&\\\ndocker pull inputoutput/cardano-graphql-server:8.0.0-${NETWORK} &&\\\ndocker pull inputoutput/cardano-graphql-background:8.0.0-${NETWORK} &&\\\ndocker pull inputoutput/cardano-graphql-hasura:8.0.0 &&\\\ndocker pull cardanosolutions/cardano-node-ogmios:v5.5.8_1.35.5-${NETWORK} &&\\\nRESTORE_SNAPSHOT=https://update-cardano-mainnet.iohk.io/cardano-db-sync/13/db-sync-snapshot-schema-13-block-8291499-x86_64.tgz \\\ndocker compose up -d &&\\\ndocker compose logs -f\n```\n</details>\n\n<details>\n  <summary><i>preprod</i></summary>\n\n``` console\nexport NETWORK=preprod &&\\\ndocker pull inputoutput/cardano-graphql-server:8.0.0-${NETWORK} &&\\\ndocker pull inputoutput/cardano-graphql-background:8.0.0-${NETWORK} &&\\\ndocker pull inputoutput/cardano-graphql-hasura:8.0.0 &&\\\ndocker pull cardanosolutions/cardano-node-ogmios:v5.5.8_1.35.5-${NETWORK} &&\\\nAPI_PORT=3101 \\\nHASURA_PORT=8091 \\\nOGMIOS_PORT=1338 \\\nPOSTGRES_PORT=5433 \\\ndocker compose -p ${NETWORK} up -d &&\\\ndocker compose -p ${NETWORK} logs -f\n```\n\n</details>\n\n<details>\n  <summary><i>preview</i></summary>\n\n``` console\nexport NETWORK=preview &&\\\ndocker pull inputoutput/cardano-graphql-server:8.0.0-${NETWORK} &&\\\ndocker pull inputoutput/cardano-graphql-background:8.0.0-${NETWORK} &&\\\ndocker pull inputoutput/cardano-graphql-hasura:8.0.0 &&\\\ndocker pull cardanosolutions/cardano-node-ogmios:v5.5.8_1.35.5-${NETWORK} &&\\\nAPI_PORT=3102 \\\nHASURA_PORT=8092 \\\nOGMIOS_PORT=1339 \\\nPOSTGRES_PORT=5434 \\\ndocker compose -p ${NETWORK} up -d &&\\\ndocker compose -p ${NETWORK} logs -f\n```\n\n</details>\n\n### Down\nThe following commands will not remove volumes, however should you wish to do so, append `-v`\n\n<details open>\n  <summary><i>mainnet</i></summary>\n\n``` console\ndocker compose down\n```\n</details>\n\n<details>\n  <summary><i>preprod</i></summary>\n\n``` console\ndocker compose -p preprod down\n```\n\n</details>\n\n<details>\n  <summary><i>preview</i></summary>\n\n``` console\ndocker compose -p preview down\n```\n\n</details>\n\n### Check Cardano DB sync progress\nUse the GraphQL Playground in the browser at http://localhost:3100/graphql:\n``` graphql \n{ cardanoDbMeta { initialized syncPercentage }}\n```\nor via command line:\n``` console\ncurl \\\n  -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"query\": \"{ cardanoDbMeta { initialized syncPercentage }}\"}' \\\n  http://localhost:3100/graphql\n```\n:information_source: _Wait for `initialized` to be `true` to ensure the epoch dataset is complete. After the first sync\nyou may need to restart the services using `docker compose restart cardano-graphql` if the GraphQL server isn't\nrunning._\n\n### Query the full dataset\n```graphql\n{ cardano { tip { number slotNo epoch { number } } } }\n```\n``` console\ncurl \\\n  -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"query\": \"{ cardano { tip { number slotNo epoch { number } } } }\"}' http://localhost:3100/graphql\n```\n### :tada:\n``` json\n{ \"data\": { \"cardano\": { \"tip\": { \"number\": 4391749, \"slotNo\": 4393973, \"epoch\": { \"number\": 203 } } } } }\n```\n\nFor more information, have a look at the [Wiki :book:].\n\n## How to install (Linux / Docker)\n\n### Docker\n\nSee [Using Docker].\n\n### From Source \n\nSee [Building].\n\n## Documentation\n\n| Link                                                                                               | Audience                                                     |\n| ---                                                                                                | ---                                                          |\n| [API Documentation]                                                                                | Users of the Cardano GraphQL API                             |\n| [Wiki :book:]                                                                                      | Anyone interested in the project and our development process |\n| [Example Queries - Cardano DB Hasura]        | Users of the Cardano DB Hasura API                             |\n\n<hr/>\n\n<p align=\"center\">\n  <a href=\"https://github.com/input-output-hk/cardano-graphql/blob/master/LICENSE\"><img src=\"https://img.shields.io/github/license/input-output-hk/cardano-graphql.svg?style=for-the-badge\" /></a>\n</p>\n\n[img_src_CI]: https://github.com/input-output-hk/cardano-graphql/workflows/CI/badge.svg\n[workflow_CI]: https://github.com/input-output-hk/cardano-graphql/actions?query=workflow%3ACI\n[packages]: ./packages\n[docker compose stack]: ./docker-compose.yml\n[Docker Compose docs]: https://docs.docker.com/compose/\n[cardano-graphql-server Dockerfile]: ./Dockerfile\n[hasura Dockerfile]: ./packages/api-cardano-db-hasura/hasura/Dockerfile\n[cardano-node-ogmios]: https://ogmios.dev/getting-started/docker/\n[schema]: ./packages/api-cardano-db-hasura/schema.graphql\n[TypeScript package for client-side static typing]: ./packages/client-ts/README.md\n[Apollo Server]: https://www.apollographql.com/docs/apollo-server/\n[GraphQL Code Generator]: https://graphql-code-generator.com\n[available on npm]: https://www.npmjs.com/package/cardano-graphql-ts\n[Ogmios]: https://ogmios.dev/\n[releases]: https://github.com/input-output-hk/cardano-graphql/releases\n[Wiki :book:]: https://github.com/input-output-hk/cardano-graphql/wiki\n[Using Docker]: https://github.com/input-output-hk/cardano-graphql/wiki/Docker\n[Building]: https://github.com/input-output-hk/cardano-graphql/wiki/Building\n[API Documentation]: https://input-output-hk.github.io/cardano-graphql\n[Example Queries - Cardano DB Hasura]: ./packages/api-cardano-db-hasura/src/example_queries", "release_dates": ["2023-02-07T07:43:00Z", "2022-11-08T11:50:31Z", "2022-09-20T09:27:01Z", "2022-08-23T06:16:32Z", "2022-02-07T17:11:43Z", "2021-12-13T13:50:49Z", "2021-10-06T12:27:07Z", "2021-08-28T15:46:40Z", "2021-08-15T08:42:20Z", "2021-08-12T16:08:26Z", "2021-07-26T15:21:27Z", "2021-03-29T14:13:05Z", "2021-02-02T11:23:06Z", "2021-01-13T16:14:38Z", "2020-12-11T21:20:12Z", "2020-11-28T11:51:39Z", "2020-11-10T13:32:04Z", "2020-10-23T14:00:04Z", "2020-09-24T15:32:20Z", "2020-09-21T12:19:03Z", "2020-09-17T14:44:30Z", "2020-07-29T09:38:52Z", "2020-07-26T18:32:49Z", "2020-07-07T21:25:13Z", "2020-07-07T14:39:45Z", "2020-07-06T09:04:15Z", "2020-06-17T03:57:42Z", "2020-05-25T07:58:40Z", "2020-05-14T02:32:34Z", "2020-04-30T08:29:15Z"]}, {"name": "cardano-org-header", "description": null, "language": "JavaScript", "license": null, "readme": "# cardano-org-header", "release_dates": []}, {"name": "cardano-rosetta", "description": "An implementation of Rosetta for Cardano ", "language": "TypeScript", "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "readme": "# Cardano Rosetta\n[![CI][img_src_CI]][workflow_CI] [![Nightly][img_src_Nightly]][workflow_Nightly]\n\nA multi-platform implementation of [Rosetta] for [Cardano], targeting the version defined in the [OpenApi \nschema]. Skip to [run](#run) if wishing to use a pre-built image from the [Docker Hub repository]. \n\n\n## Build\nBuild [from anywhere], _optionally_ specifying a [network] name other than `mainnet` as a \nbuild argument, and accessing cached build layers to reduce the initialization time. You can also \nbuild with local source by replacing the GitHub link with `.`\n\n### Supported Architectures\n- `linux/amd64`\n- `linux/arm64`\n\n<details open>\n  <summary>mainnet</summary>\n\n```console\nDOCKER_BUILDKIT=1 \\\ndocker build \\\n  --build-arg BUILDKIT_INLINE_CACHE=1 \\\n  --cache-from=cardanofoundation/cardano-rosetta:master \\\n  -t cardanofoundation/cardano-rosetta:2.2.0 \\\n  .\n```\n\n</details>\n\n<details>\n  <summary>preprod</summary>\n\n```console\nDOCKER_BUILDKIT=1 \\\ndocker build \\\n  --build-arg BUILDKIT_INLINE_CACHE=1 \\\n  --build-arg NETWORK=preprod \\\n  --cache-from=cardanofoundation/cardano-rosetta:master \\\n  -t cardanofoundation/cardano-rosetta:2.2.0-preprod \\\n  .\n```\n\n</details>\n\n<details>\n  <summary>preview</summary>\n\n```console\nDOCKER_BUILDKIT=1 \\\ndocker build \\\n  --build-arg BUILDKIT_INLINE_CACHE=1 \\\n  --build-arg NETWORK=preview \\\n  --cache-from=cardanofoundation/cardano-rosetta:master \\\n  -t cardanofoundation/cardano-rosetta:2.2.0-preview \\\n  .\n```\n\n</details>\n\n## Run\nRun the locally or pre-built images and mount a single volume into the [standard storage \nlocation], map the server port to the host, and allocate a suitably-sized `/dev/shm`. See the \ncomplete [Docker run reference] for full control.\n\n<details open>\n  <summary>mainnet</summary>\n\n```console\ndocker run \\\n  --name cardano-rosetta \\\n  -p 8080:8080 \\\n  -v cardano-rosetta:/data \\\n  --shm-size=2g \\\n  cardanofoundation/cardano-rosetta:2.2.0\n```\n\n</details>\n\n<details>\n  <summary>preprod</summary>\n\n```console\ndocker run \\\n  --name cardano-rosetta-preprod \\\n  -p 8081:8080 \\\n  -v cardano-rosetta-preprod:/data \\\n  --shm-size=2g \\\n  cardanofoundation/cardano-rosetta:2.2.0-preprod\n```\n\n</details>\n\n<details>\n  <summary>preview</summary>\n\n```console\ndocker run \\\n  --name cardano-rosetta-preview \\\n  -p 8081:8080 \\\n  -v cardano-rosetta-preview:/data \\\n  --shm-size=2g \\\n  cardanofoundation/cardano-rosetta:2.2.0-preview\n```\n\n</details>\n\n:information_source: _A trusted DB snapshot can be used to speed up the initial sync, however\nthe internal instance of `cardano-node` must be synced past the snapshot point for it to be\napplied. This can be achieved by observing logs emitted from `cardano-node` indicating it's \nclose to the network tip, before then following the instructions in the [Upgrading section](#upgrading)._\n\n### Configuration\n\nSet ENVs for optional runtime configuration\n```console\n-e MODE=offline\n```\n\n#### `MODE`\nSee Rosetta docs for information on [modes]\n- `online` - default\n- `offline`\n\n#### `DEFAULT_RELATIVE_TTL`\nSpecify the TTL without needing to access an online method. Default: `1000`\n\n#### `LOGGER_MIN_SEVERITY`\n- `trace`\n- `debug`\n- `info` - default\n- `warn`\n- `error`\n- `fatal`\n\n#### `PAGE_SIZE`\nDefault: `25`\n\n### Upgrading\nAs per the release notes, you **_may_** be required to refresh the state managed by \n`cardano-db-sync`. This can be achieved without requiring a network re-sync using one of the two \nfollowing approached:\n\n#### 1. Apply a Trusted `cardano-db-sync` Snapshot\nRun the build command with the addition of an argument providing a version and network-specific \nlink, sourced from the `cardano-db-sync` [release notes](https://github.com/input-output-hk/cardano-db-sync/releases).\nFor example:\n\n##### Build\n<details open>\n  <summary>mainnet</summary>\n\n```console\nDOCKER_BUILDKIT=1 \\\ndocker build \\\n  --build-arg BUILDKIT_INLINE_CACHE=1 \\\n  --build-arg SNAPSHOT_URL=https://update-cardano-mainnet.iohk.io/cardano-db-sync/13/db-sync-snapshot-schema-13-block-7960123-x86_64.tgz \\\n  --cache-from=cardanofoundation/cardano-rosetta:master \\\n  -t cardanofoundation/cardano-rosetta:2.2.0-apply-snapshot \\\n  https://github.com/cardanofoundation/cardano-rosetta.git#2.2.0\n```\n\n</details>\n\n##### Run\n\n<details open>\n  <summary>mainnet</summary>\n\n```console\ndocker run \\\n  --name cardano-rosetta \\\n  -p 8080:8080 \\\n  -v cardano-rosetta:/data \\\n  --shm-size=2g \\\n  cardanofoundation/cardano-rosetta:2.2.0-apply-snapshot\n```\n\n</details>\n\n:information_source: _Build a new image as per the [standard build instructions] if you need to \nrecreate the container, otherwise the data will be dropped and restored again._\n\n:information_source: _The snapshot will only be applied if `cardano-node` is synced past the \nsnapshot point, since the benefit of using it would be eliminated given `cardano-db-sync` rolls back\nto genesis under these conditions. For best results, ensure the node is close to the network tip\nprior to upgrading._ \n\n#### 2. Re-sync From Genesis\nA _trustless_ approach to rebuild the DB, by syncing from genesis at the cost of an extended sync \nduration:\n```console\ndocker stop cardano-rosetta && \\\ndocker rm cardano-rosetta && \\\ndocker run --rm -v cardano-rosetta:/data ubuntu rm -rf /data/postgresql /data/db-sync\n```\n... then start a container as per usual. Sync progress will be logged by the new container. \n\n## Documentation\n\n| Link                               | Audience                                                     |\n| ---                                | ---                                                          |\n| [Construction API Documentation]   | Users of the Cardano Rosetta Construction API                |\n| [Data API Documentation]           | Users of the Cardano Rosetta Data API                        |\n| [Cardano Rosetta Docs]             | Cardano Rosetta specific documentation                       |\n| [Developer]                        | Core or external developers of cardano-rosetta-server        |\n| [Maintainer]                       | Solution maintainer                                          |\n| [QA]                               | Quality Assurance Engineers                                  |\n\n<hr/>\n\n<p align=\"center\">\n  <a href=\"https://github.com/cardano-foundation/cardano-rosetta/blob/master/LICENSE.md\"><img src=\"https://img.shields.io/github/license/cardano-foundation/cardano-rosetta.svg?style=for-the-badge\" /></a>\n</p>\n\n[img_src_CI]: https://github.com/cardano-foundation/cardano-rosetta/workflows/CI/badge.svg\n[workflow_CI]: https://github.com/cardano-foundation/cardano-rosetta/actions?query=workflow%3ACI\n[img_src_Nightly]: https://github.com/cardano-foundation/cardano-rosetta/workflows/Nightly/badge.svg\n[workflow_Nightly]: https://github.com/cardano-foundation/cardano-rosetta/actions?query=workflow%3ANightly\n[Rosetta]: https://www.rosetta-api.org/docs/welcome.html\n[Cardano]: https://cardano.org/\n[OpenApi schema]: cardano-rosetta-server/src/server/openApi.json#L4\n[Docker Hub repository]: https://hub.docker.com/r/inputoutput/cardano-rosetta/tags?page=1&ordering=last_updated\n[from anywhere]: https://www.rosetta-api.org/docs/node_deployment.html#build-anywhere\n[network]: config/network\n[standard storage location]: https://www.rosetta-api.org/docs/standard_storage_location.html\n[Docker run reference]: https://docs.docker.com/engine/reference/run/\n[modes]: https://www.rosetta-api.org/docs/node_deployment.html#multiple-modes\n[docs]: cardano-rosetta-server/README.md\n[standard build instructions]: #build\n[Construction API Documentation]: https://www.rosetta-api.org/docs/construction_api_introduction.html\n[Data API Documentation]: https://www.rosetta-api.org/docs/data_api_introduction.html\n[Cardano Rosetta Docs]: ./docs\n[Developer]: cardano-rosetta-server/README.md\n[Maintainer]: docs/MAINTAINER.md\n[QA]: docs/QA.md\n", "release_dates": ["2024-03-01T07:44:50Z", "2024-02-14T13:49:40Z", "2023-01-30T14:50:09Z", "2023-01-17T13:50:30Z", "2022-12-19T09:51:02Z", "2022-12-14T17:39:14Z", "2022-11-29T09:56:19Z", "2022-11-14T10:14:31Z", "2022-09-01T06:05:04Z", "2022-08-19T02:45:44Z", "2022-08-16T13:17:09Z", "2022-06-27T12:19:30Z", "2022-02-09T16:30:40Z", "2021-12-21T12:20:25Z", "2021-10-07T08:59:15Z", "2021-08-30T09:04:22Z", "2021-08-17T08:19:27Z", "2021-08-12T16:02:10Z", "2021-07-28T07:58:09Z", "2021-03-17T19:25:26Z", "2021-02-01T21:21:45Z", "2020-12-16T10:16:28Z", "2020-09-10T20:28:57Z", "2020-09-04T01:22:59Z", "2020-09-01T17:35:02Z", "2020-08-25T18:55:09Z", "2020-07-31T13:22:14Z"]}, {"name": "cardano-store-poc-hoodies", "description": "Proof-of-concept (POC) hoodie project for https://store.cardano.org/. Open-sourced for full transparency and community collaboration.", "language": "Python", "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "readme": "# cf-merchstore-api\n\nProof-of-concept (POC) hoodie project for https://store.cardano.org/. Open-sourced for full transparency and community collaboration.\n\n## Getting started\n\n### Prerequisites\n\n- Python ^3.11\n- Poetry ^1.5.1\n\n### Installation\n\n```zsh\ngit clone https://github.com/cardano-foundation/cardano-store-poc-hoodies.git\ncd cardano-store-poc-hoodies\npoetry install\n```\n\n### Usage\n\n```zsh\npoetry run python api.py\n```\n\n## Hardware\n\nAn NFC reader/writer is required to write information on the chips. [This reader/writer](https://www.shopnfc.com/en/nfc-readers-writers/212-utrust-3700-f-nfc-writer.html) works well with the used NTAG 424 DNA chips. The chips can be [ordered here](https://www.nfc-tag-shop.de/NFC-Sticker-PET-25-mm-NTAG424-DNA-416-Byte-weiss/68984).\n\n## Software\n\n### TagXplorer\n\n[TagXplorer](https://www.nxp.com/products/no-longer-manufactured/tagxplorer-pc-based-nfc-tag-reader-writer-tool:TAGXPLORER) can be used to read/write the chips.\n\n- [Download](https://www.nxp.com/downloads/en/apps/SW4883.zip) TagXplorer.\n- Extract the zip to, for example, `~/Software/sw488312/`.\n- Try to execute it by double-clicking or by running `java -jar ~/Software/sw488312/TagXplorer-v1.2.jar` in a terminal.\n- If it does not work, make sure your Java environment has been set up correctly.\n- In case you see the error `java.lang.NoClassDefFoundError: javafx/application/Application`, please [download JavaFX](https://gluonhq.com/products/javafx/).\n- Extract it to, for example, `~/Software/javafx-sdk-21.0.1/` and add the following lines to your .zshrc / .bashrc file:\n\n```zsh\nexport JAVAFX_PATH=\"~/Software/javafx-sdk-21.0.1/lib\"\nexport PATH=$PATH:JAVAFX_PAT\n```\n\n- Run TagXplorer using  `java --module-path $JAVAFX_PATH --add-modules javafx.controls --add-modules javafx.fxml -jar ~/Software/sw488312/TagXplorer-v1.2.jar`.\n\n### Decryption and Verification\n\nThis repository includes files from the MIT project [smd-backend](https://github.com/nfc-developer/sdm-backend) by nfc-developer, which are used for decryption and verification.\n\n## Known Issues\n\nFor a new chip, the default keys are set to `0000000000000000`. The smd-backend code works fine only with this standard key and seems to have issues if the key is changed.\n\nSee:\n-  [CAN NOT VALIDATE NON ZERO KEY SIGNED MESSAGES #39](https://github.com/nfc-developer/sdm-backend/issues/39)\n-  [Server does not work with tagXplorer custom key ? #34](https://github.com/nfc-developer/sdm-backend/issues/34)\n\nThese issues require running the verification part of this project based on [an old smd-backend version from 2022](https://github.com/icedevml/sdm-backend/tree/a89a8381a7b680abff721f006085ec4d15f8c543). \nFurthermore, a special process for key generation/derivation must be followed.\n\n## Instructions\n\n### Get the UID of the NFC chip\n\n- Connect the reader to your PC and open the TagXplorer\n- Click on \"Connect Reader\"\n- Put an NFC chip on the reader\n- Click \"Connect Tag\" in the left side menu\n- Go to NTAG Operations and click on \"Get version\"\n- The `UID` should be now displayed on the right side in the list below\n\n### Generate the keys, url and offets\n\n`python prepare_flashing.py <UID>`zsh\n\n### Write the mirroring data to the NFC chip\n\n- Open the TagXplorer\n- Click on \"Connect Reader\"\n- Put an NFC chip on the reader\n- Click \"Connect Tag\" in the left side menu\n- Go to \"NTAG Operations\" and click on \"Mirroring Features\"\n- Select \"https\" as protocol and AES as authentication mode\n- Check \"Add Tag UID\", \"Add Iteration Counter\" and \"Encrypted File Data\"\n- Copy the url from the `prepare_flashing` script output to the URI data  e.g. `store.cardano.org/pages/nfc/HOODIE<HOODIE_ID>?picc_data=00000000000000000000000000000000&enc=<PAYMENT_KEY>0000000000000000000000000000000000000000000000000000000000000000&cmac=0000000000000000`\n- Click on \"Write To Tag\"\n\n### Encrypt the file data\n\n- Go to \"NTAG 424 DNA Tag Temper\"\n- Click on \"Security Manegement\"\n- Click the button \"Authenticate First\"\n- Now click in the left side menu on the button \"Get / Change File Settings\"\n- Change the communication type to \"Enciphered\"\n- Check \"SMD and Mirroring\"\n- In the \"SMD Access Rights\" section, Change the keys to 1, 2 and 1 in the 3 dropdown fields\n- Now you can also check \"SMD Read Counter\", \"SMD Encrypted File Mirroring\" and \"UID (for mirroring)\"\n- SMD Encrypted File Length is 128\n- Change to offsets to the output of the `prepare_flashing` script\n- Click on \"Change File Settings\"\n\n### Change the keys\n\n- Click on \"Security Manegement\"\n- Click the button \"Authenticate First\"\n- Click on \"Change Keys\"\n- Key 00 should be selected by default\n- Change the key to the output of the `prepare_flashing` script\n- Change the key version to \"01\"\n- Click on \"Change Key\"\n- Go back to the first panel\n- Change the authentication key 00 to the new one\n- Click on \"Authenticate First\"\n- Repeat the steps for key 01 and 02\n- Key 00 will remain the same as it is used for authentication\n\n### Verify the NFC chip\n- Click on the very left side menu on \"NDEF Operations\"\n- Click on \"Read NDEF\"\n- Copy the url and paste it into your browser\n- The browser should display the hoodie page with the correct hoodie id and a green verified checkmark\n", "release_dates": []}, {"name": "cardano-token-registry", "description": null, "language": "Nix", "license": null, "readme": "# CIP26 Off-Chain Metadata Registry (mainnet)\nThis is the CIP26 off-chain metadata registry for **mainnet**. If you intend to register any metadata for on-chain assets that exist on the publicly available testnets only (e.g. preview and preprod environments) please use the [metadata-registry from IOHK](https://github.com/input-output-hk/metadata-registry-testnet).\n\n##  Background\nThis repository provides a means to register off-chain token metadata that can map to on-chain identifiers (typically hashes representing asset IDs, output locking scripts, or token forging policies).\n\nA [server](#server) exposes the functionality of a key-value store, allowing users and applications to query registry entries through a RESTful API.\n\nWhile this registry is limited in scope to handle native tokens only, it will also serve to facilitate a discussion and introduce a standard for a metadata distribution system that is currently put forward as a [draft CIP](https://github.com/michaelpj/CIPs/blob/cip-metadata-server/cip-metadata-server.md).\n\nUse of this registry is subject to the [Registry Terms of Use](Registry_Terms_of_Use.md).           \nUse of the public API is subject to the [API Terms of Use](API_Terms_of_Use.md).\n\n## Process\n\n#### New registration\n\nNew submissions to this registry will take the form of a GitHub Pull Request with the addition of one JSON file to the [mappings/](mappings) folder. Submissions will be subject to automated checking for well-formedness and human vetting before being merged to the registry.\n\n\n#### Updating existing entries\n\nModification of entries in this registry require a GitHub Pull Request with the modification of one JSON file in the [mappings/](mappings) folder.  Submissions will be subject to automated checking for well-formedness and human vetting before being merged to the registry. \n\n\n## Semantic content of registry entries\n\nEach entry contains the following information:\n\n**Name**             | **Required/Optional**|**Description**\n---              | ---       | ---\n`subject`        | Required  | The base16-encoded policyId + base16-encoded assetName\n`name`           | Required  | A human-readable name for the subject, suitable for use in an interface\n`description`    | Required  | A human-readable description for the subject, suitable for use in an interface\n`policy`         | Optional  | The base16-encoded CBOR representation of the monetary policy script, used to verify ownership. Optional in the case of Plutus scripts as verification is handled elsewhere.\n`ticker`         | Optional  | A human-readable ticker name for the subject, suitable for use in an interface\n`url`            | Optional  | A HTTPS URL (web page relating to the token)\n`logo`           | Optional  | A PNG image file as a byte string\n`decimals`       | Optional  | how many decimals to the token\n\nThe policy field is optional in order to support Plutus Smart-Contracts which are not linked to a set of signing keys by default. It is used in priority if present. Otherwise, signature verification is performed using user-provided trusted keys.\n\nFor a comprehensive description of all fields and how to generate them, please see [offchain-metadata-tools](https://github.com/input-output-hk/offchain-metadata-tools).  \n\n## Submission well-formedness rules\n\n1. Submissions to the registry must consist of a single commit, directly off the **master** branch of the **cardano-token-registry** repository.\n\n2. Submissions must add or modify a singular file in the [mappings/](mappings) folder. Multiple mappings should be split across multiple PRs.\n\n3. The file name must match the encoded `\"subject\"` key of the entry, all lowercase.\n\n4. The maximum file size of a single metadata entry is 370KB.\n\n\n##  Server\n\nUsers and applications can query this registry through an API at `https://tokens.cardano.org/metadata`.\n\nThe API documentation and source code for the server implementation is available with the [offchain-metadata-tools](https://github.com/input-output-hk/offchain-metadata-tools).        \n            \nUse of the `https://tokens.cardano.org/metadata` API is subject to the [API Terms of Use](API_Terms_of_Use.md).  \n\n   \n## Step-by-Step Guide\n\nSee [Wiki](https://github.com/cardano-foundation/cardano-token-registry/wiki).\n", "release_dates": []}, {"name": "cardano-verify-datasignature", "description": "A lightweight typescript library to verify a cip30 datasignature", "language": "TypeScript", "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "readme": "# Cardano Verify Datasignature\n\n<p align=\"left\">\n\n<img alt=\"Release\" src=\"https://github.com/cardano-foundation/cardano-verify-datasignature/actions/workflows/release.yml/badge.svg?branch=main\" />\n<img alt=\"semantic-release: angular\" src=\"https://img.shields.io/badge/semantic--release-angular-e10079?logo=semantic-release\" />\n<a href=\"https://discord.gg/4WVNHgQ7bP\"><img alt=\"Discord\" src=\"https://img.shields.io/discord/1022471509173882950\"></a>\n</p>\n\nA lightweight typescript library to verify a cip30 datasignature.\n\n## \ud83d\ude80 Getting Started\n\n```zsh\nnpm i @cardano-foundation/cardano-verify-datasignature\n```\n\n## \ud83e\uddd0 Verification\n\nYou need a key and a signature from a [cip30 datasignature](https://cips.cardano.org/cips/cip30/#apisigndataaddraddresspayloadbytespromisedatasignature).\n\n### How to get a cip30 datasignature?\n\nThere are multiple ways to create a cip30 data signature:\n\n1. Make sure you have a cip30 compatible wallet installed (Nami, NuFi, Typhon Wallet, Flint, Gerowallet, Yoroi, ...).\n\n2. Option A: Open your browser console and copy&paste this function:\n\n```js\nconst signMessage = async (message, walletname) => {\n  const api = await window.cardano[walletname].enable();\n  const hexAddresses = await api.getRewardAddresses();\n  const hexAddress = hexAddresses[0];\n  let hexMessage = '';\n\n  for (var i = 0, l = message.length; i < l; i++) {\n    hexMessage += message.charCodeAt(i).toString(16);\n  }\n\n  try {\n    const { signature, key } = await api.signData(hexAddress, hexMessage);\n    console.log(signature, key);\n  } catch (error) {\n    console.warn(error);\n  }\n};\n```\n\nUsage example:\n\n```js\nsignMessage('Hello World', 'yoroi').then((dataSignature) =>\n  console.log(dataSignature)\n);\n```\n\n3. Option B: Use the [signMessage](https://github.com/cardano-foundation/cardano-connect-with-wallet/blob/main/src/hooks/useCardano.ts#L133) function of the [cardano-connect-with-wallet](https://github.com/cardano-foundation/cardano-connect-with-wallet) library to get a valid key and signature.\n\n4. Option C: If you want to use the cli to sign or verify data please checkout the [cardano-signer](https://github.com/gitmachtl/cardano-signer) by [gitmachtl](https://github.com/gitmachtl).\n\n### What does it mean \"to verify a signature\"?\n\nThis function uses the public key (COSE_KEY) and checks if its corresponding private key has been used to sign the payload (data/message) within the signature (COSE_Sign1).\n\nFurthermore an optional plain text message can be provided to check if both the plain text and the signed message are equal.\n\nAnother optional argument is a readable (bech32) address starting with (addr1/addr_test1/stake1/stake_test1) to test if this address belongs to the key that was used to sign the message.\n\n```ts\nconst verifyDataSignature = require('@cardano-foundation/cardano-verify-datasignature');\n\nconst key =\n  'a4010103272006215820b89526fd6bf4ba737c55ea90670d16a27f8de6cc1982349b3b676705a2f420c6';\nconst signature =\n  '84582aa201276761646472657373581de118987c1612069d4080a0eb247820cb987fea81bddeaafdd41f996281a166686173686564f458264175677573746120416461204b696e672c20436f756e74657373206f66204c6f76656c61636558401712458b19f606b322982f6290c78529a235b56c0f1cec4f24b12a8660b40cd37f4c5440a465754089c462ed4b0d613bffaee3d1833516569fda4852f42a4a0f';\nconst message = 'Augusta Ada King, Countess of Lovelace';\nconst address = 'stake1uyvfslqkzgrf6syq5r4jg7pqewv8l65phh024lw5r7vk9qgznhyty';\n\nconsole.log(verifyDataSignature(signature, key)); // true\nconsole.log(verifyDataSignature(signature, key, message)); // true\nconsole.log(verifyDataSignature(signature, key, message, address)); // true\nconsole.log(\n  verifyDataSignature(\n    signature,\n    key,\n    message,\n    'stake1_test1hweafkafrwf9ets85rs9gtk9qgzegwtg'\n  )\n); // false\nconsole.log(\n  verifyDataSignature(signature, key, 'Augusta Ada King, Countess of Lovelace!')\n); // false\n```\n", "release_dates": ["2022-12-21T08:23:03Z", "2022-12-20T16:01:00Z", "2022-12-20T15:40:34Z", "2022-12-19T17:47:35Z", "2022-12-18T23:39:52Z", "2022-12-18T08:31:07Z", "2022-12-13T15:15:59Z", "2022-12-13T14:54:41Z", "2022-12-12T21:54:59Z", "2022-12-12T20:01:11Z", "2022-12-12T17:40:54Z", "2022-12-12T16:40:27Z"]}, {"name": "cardano-wallet", "description": "HTTP server & command-line for managing UTxOs and HD wallets in Cardano.", "language": "Haskell", "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "readme": "<p align=\"center\">\n  <big><strong>Cardano Wallet</strong></big>\n</p>\n\n<p align=\"center\">\n  <img width=\"200\" src=\".github/images/cardano-logo.png\"/>\n</p>\n\n<p align=\"center\">\n    <a href=\"https://github.com/cardano-foundation/cardano-wallet/releases\">\n        <img src=\"https://img.shields.io/github/release-pre/cardano-foundation/cardano-wallet.svg?style=for-the-badge\"  />\n    </a>\n    <a href=\"https://buildkite.com/cardano-foundation/cardano-wallet\">\n        <img src=\"https://img.shields.io/buildkite/da223f1dbf24e8a64a27f50a49190ce7a9ee867d221c20d70a/master?label=BUILD&style=for-the-badge\"/>\n    </a>\n    <a href=\"https://github.com/cardano-foundation/cardano-wallet/actions/workflows/publish.yml\">\n        <img src=\"https://img.shields.io/github/actions/workflow/status/cardano-foundation/cardano-wallet/publish.yml?label=Docs&style=for-the-badge&branch=master\"  />\n    </a>\n    <a href=\"https://buildkite.com/cardano-foundation/cardano-wallet-nightly\">\n        <img src=\"https://img.shields.io/buildkite/94de95cfe78b09c547cb109b0a44e6cd489341ea9e2c224ead/master?label=BENCHMARKS&style=for-the-badge\"  />\n    </a>\n    <a href=\"https://github.com/cardano-foundation/cardano-wallet/actions/workflows/windows.yml\">\n        <img src=\"https://img.shields.io/github/actions/workflow/status/cardano-foundation/cardano-wallet/windows.yml?label=Windows unit tests&style=for-the-badge&branch=master\"  />\n    </a>\n    <a href=\"https://github.com/cardano-foundation/cardano-wallet/actions/workflows/e2e-docker.yml\">\n        <img src=\"https://img.shields.io/github/actions/workflow/status/cardano-foundation/cardano-wallet/e2e-docker.yml?label=E2E Docker&style=for-the-badge&branch=master\"  />\n    </a>\n    <a href=\"https://github.com/cardano-foundation/cardano-wallet/actions/workflows/e2e-linux.yml\">\n        <img src=\"https://img.shields.io/github/actions/workflow/status/cardano-foundation/cardano-wallet/e2e-linux.yml?label=E2E Linux&style=for-the-badge&branch=master\"  />\n    </a>\n    <a href=\"https://github.com/cardano-foundation/cardano-wallet/actions/workflows/e2e-macos.yml\">\n        <img src=\"https://img.shields.io/github/actions/workflow/status/cardano-foundation/cardano-wallet/e2e-macos.yml?label=E2E MacOs&style=for-the-badge&branch=master\"  />\n    </a>\n    <a href=\"https://github.com/cardano-foundation/cardano-wallet/actions/workflows/e2e-windows.yml\">\n        <img src=\"https://img.shields.io/github/actions/workflow/status/cardano-foundation/cardano-wallet/e2e-windows.yml?label=E2E Windows&style=for-the-badge&branch=master\" />\n    </a>\n    <a href=\"https://github.com/cardano-foundation/cardano-wallet/actions/workflows/docker_linux.yml\">\n        <img src=\"https://img.shields.io/github/actions/workflow/status/cardano-foundation/cardano-wallet/docker_linux.yml?label=Docker-compose Linux&style=for-the-badge&branch=master\"  />\n    </a>\n</p>\n\n\n<hr/>\n\n## Overview\n\nCardano Wallet is software that helps you manage your Ada. You can use it to send and receive payments on the [Cardano blockchain](https://www.cardano.org).\n\nThis project provides an HTTP Application Programming Interface (API)\nand command-line interface (CLI) for working with your wallet.\n\nIt can be used as a component of a frontend such as\n[Daedalus](https://daedaluswallet.io), which provides a friendly user\ninterface for wallets. Most users who would like to use Cardano should\nstart with Daedalus.\n\n## Quickstart\n\nThe `cardano-wallet` executable is an HTTP server that manages your wallet(s).\nHere is one way to start both node and wallet using Docker and running the nightly version of the wallet.\n\n```bash\n\nTHE FOLLOWING EXPOSES THE WALLET PORT. DO NOT USE IT WITH mainnet !\n\nPrerequisties:\n    - 100GB of disk space\n    - 13GB of RAM\n\nCopy this script to a file, e.g. `start.sh` and make it executable with `chmod +x start.sh`\n\n```bash\n#! /bin/bash\n\nset -euo pipefail\n\n# set the network, mainnet or preprod or sanchonet\nexport NETWORK=preprod\n\n# set a directory for the node-db\nexport NODE_DB=`pwd`/node-db\n# set a directory for the wallet-db\nexport WALLET_DB=`pwd`/wallet-db\n\n# set the node tag and wallet tag to compatible versions\nexport NODE_TAG=8.7.3\nexport WALLET_TAG=rc-latest # 2023.12.18\n\n# set a port for the wallet server\nexport WALLET_PORT=8090\n\n\nif [ \"$(ls -A \"${NODE_DB}\")\" ]\nthen\n    echo \"Node state is present, not downloading the snapshot.\"\nelse\n    if [ $NETWORK == \"mainnet\" ]\n    then\n        # download the node-db snapshot, or wait for the node to sync for a long time\n        curl -o - https://downloads.csnapshots.io/mainnet/$(curl -s https://downloads.csnapshots.io/mainnet/mainnet-db-snapshot.json| jq -r .[].file_name ) | lz4 -c -d - | tar -x -C $NODE_DB\n        mv $NODE_DB/db/* $NODE_DB/\n        rm -rf $NODE_DB/db\n    elif [ $NETWORK == \"preprod\" ]\n    then\n        curl -o - https://downloads.csnapshots.io/testnet/$(curl -s https://downloads.csnapshots.io/testnet/testnet-db-snapshot.json| jq -r .[].file_name ) | lz4 -c -d - | tar -x -C $NODE_DB\n        mv $NODE_DB/db/* $NODE_DB/\n        rm -rf $NODE_DB/db\n    elif [ $NETWORK == \"sanchonet\" ]\n    then echo \"no cache for sancho\";\n    else\n        echo \"NETWORK must be mainnet or preprod or sanchonet\"\n        exit 1\n    fi\nfi\n\n# start the services\ndocker-compose up\n```\n\n\n\nFantastic! server is up-and-running, waiting for HTTP requests on `localhost:8090`\n\n```\ncurl http://localhost:8090/v2/network/information\n```\n\nor to be accessed via CLI, e.g.:\n\n```\ndocker run --network host --rm cardanofoundation/cardano-wallet network information\n```\n\nIcarus UI will be available at\n\n```\nhttp://localhost:4444\n```\n\nTo stop the services, press `Ctrl+C`.\n\n\nSee also [Docker](https://cardano-foundation.github.io/cardano-wallet/user-guide/installation/use-docker.html) for more information about using docker.\n\nNixOS users can also use the [NixOS service](https://cardano-foundation.github.io/cardano-wallet/user-guide/installation/use-nixos.html).\n\n## Obtaining `cardano-wallet`\n\n### Executables (Linux / Windows / Mac OS)\n\nWe provide executables as part of our [releases](https://github.com/cardano-foundation/cardano-wallet/releases). Please also see the installation instructions highlighted in the release notes.\n\n### Building from source\n\nSee [Building](https://cardano-foundation.github.io/cardano-wallet/contributor/what/building.html)\n\n### Testing\n\nSee [Testing](https://cardano-foundation.github.io/cardano-wallet/contributor/how/testing.html)\n\n## History\n\nThe `cardano-wallet` repository was introduced during the [Shelley phase](https://roadmap.cardano.org/) of the Cardano blockchain.\nPreviously, during the Byron phase, the wallet was part of the [cardano-sl](https://github.com/input-output-hk/cardano-sl) repository. (This is useful to know \u2014 sometimes the ghosts of the past come back to haunt us in the form of obscure bugs.)\n\n## Documentation\n\n| Link                                                                                             | Audience                                                     |\n| ------------------------------------------------------------------------------------------------ | ------------------------------------------------------------ |\n| [Documentation](https://cardano-foundation.github.io/cardano-wallet/)                            |                                                              |\n| \u2022 [User Manual](https://cardano-foundation.github.io/cardano-wallet/user)                        | Users of Cardano Wallet                                      |\n| &nbsp;&nbsp;\u2937 [CLI Manual](https://cardano-foundation.github.io/cardano-wallet/user/cli)         | Users of the Cardano Wallet API                              |\n| &nbsp;&nbsp;\u2937 [API Documentation](https://cardano-foundation.github.io/cardano-wallet/api/edge)  | Users of the Cardano Wallet API                              |\n| \u2022 [Design Documents](https://cardano-foundation.github.io/cardano-wallet/design)                 | Anyone interested in wallet design and specifications        |\n| &nbsp;&nbsp;\u2937 [Specifications](https://cardano-foundation.github.io/cardano-wallet/design/specs) | Anyone interested in wallet design and specifications        |\n| \u2022 [Contributor Manual](https://cardano-foundation.github.io/cardano-wallet/contributor)          | Anyone interested in the project and our development process |\n| [Adrestia Documentation](https://input-output-hk.github.io/adrestia/)                            | Anyone interested in the project and our development process |\n\n<hr/>\n\n<p align=\"center\">\n  <a href=\"https://github.com/cardano-foundation/cardano-wallet/blob/master/LICENSE\"><img src=\"https://img.shields.io/github/license/cardano-foundation/cardano-wallet.svg?style=for-the-badge\" /></a>\n</p>\n", "release_dates": ["2023-12-20T12:31:13Z", "2023-07-21T10:31:15Z", "2023-04-17T09:09:14Z", "2022-12-15T13:20:05Z", "2022-10-06T15:20:03Z", "2022-08-18T15:05:28Z", "2022-07-01T16:19:41Z", "2022-05-27T12:23:28Z", "2022-04-28T15:06:24Z", "2022-01-20T11:49:16Z", "2021-12-16T16:21:20Z", "2021-11-16T09:02:28Z", "2021-09-29T14:54:28Z", "2021-09-09T10:57:50Z", "2021-08-27T11:39:55Z", "2021-08-11T16:02:13Z", "2021-08-03T08:41:13Z", "2021-06-11T15:40:22Z", "2021-05-27T13:10:06Z", "2021-04-30T12:48:37Z", "2021-04-08T18:42:44Z", "2021-03-05T10:14:21Z", "2021-02-16T09:34:59Z", "2021-02-12T12:21:10Z", "2021-01-29T12:22:05Z", "2021-01-12T13:42:55Z", "2021-01-05T09:21:25Z", "2020-12-09T11:22:10Z", "2020-11-27T14:59:25Z", "2020-11-18T09:42:38Z"]}, {"name": "cardano-wallet-client", "description": null, "language": "Haskell", "license": null, "readme": "# cardano-wallet-client\n\nCardano Wallet client library code-generated from the OpenAPI spec\n\n### Howto\n\n#### Re-generate code from an OpenAPI spec\n\n1. Update the OpenAPI yaml file `./cardano_wallet_specification.yaml`\n\n2. ```sh\n   just generate build test\n   ```\n", "release_dates": []}, {"name": "cf-adahandle-resolver", "description": "This project aims to provide a scoped indexer for retrieving ADA Handle information from the Cardano blockchain  and exposing it via REST using Yaci Store", "language": "Java", "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "readme": "# ADA Handle Resolver\n\n<p align=\"left\">\n<img alt=\"Tests\" src=\"https://github.com/cardano-foundation/cf-adahandle-resolver/actions/workflows/tests.yaml/badge.svg?branch=main\" />\n<img alt=\"Coverage\" src=\"https://github.com/cardano-foundation/cf-adahandle-resolver/blob/gh-pages/badges/jacoco.svg?raw=true\" />\n<img alt=\"Release\" src=\"https://github.com/cardano-foundation/cf-adahandle-resolver/actions/workflows/release.yaml/badge.svg?branch=main\" />\n<img alt=\"Publish\" src=\"https://github.com/cardano-foundation/cf-adahandle-resolver/actions/workflows/publish.yaml/badge.svg?branch=main\" />\n<a href=\"https://conventionalcommits.org\"><img alt=\"conventionalcommits\" src=\"https://img.shields.io/badge/Conventional%20Commits-1.0.0-%23FE5196?logo=conventionalcommits\" /></a>\n<a href=\"https://discord.gg/4WVNHgQ7bP\"><img alt=\"Discord\" src=\"https://img.shields.io/discord/1022471509173882950\"></a>\n</p>\n\nThis project aims to provide a scoped indexer for retrieving ADA Handle information from the Cardano blockchain and exposing it via REST using [Yaci Store](https://github.com/bloxbean/yaci-store).\n\n## Why ADA Handle resolver?\nOne may ask why Ada Handle resolve if there is already: https://github.com/koralabs/handles-public-api\n\nAda Handler resolver by CF differentiates itself with a number of following traits:\n- it demostrates usage of Yaci-Store modular indexer\n- is written in Java, thus easier extendable and to easier to reason about by Java Developers\n- doesn't have any dependencies to other components, e.g. Ogmios, blockfrost, etc\n- handles db has very small on disk footprint\n- supports embedded DBs such as H2 for easier deployment\n \n## \ud83d\ude80 Getting Started\n\n### \ud83d\udc33 Docker\n\n```zsh\ndocker run -p 9095:9095 cardanofoundation/adahandle-resolver:latest\n```\n\n### \ud83e\udeb6 Maven \n\n#### Prerequisites\n\nJava 17\n\n#### Build & Run\n\n```\ngit clone https://github.com/cardano-foundation/cf-adahandle-resolver.git\ncd cf-adahandle-resolver\n./mvnw clean package\njava -jar target/cf-adahandle-resolver-0.0.1-SNAPSHOT.jar\n```\n\n## \ud83e\uddea Test Reports\n\nTo ensure the stability and reliability of this project, unit tests have been implemented. By clicking on the link below, you can access the detailed test report.\n\n\ud83d\udcca [Coverage Report](https://cardano-foundation.github.io/cf-adahandle-resolver/coverage-report/)\n\n\n## \ud83e\udd16 API Endpoints\n\n| Endpoint                                                         | Description                                             |\n|------------------------------------------------------------------|---------------------------------------------------------|\n| http://localhost:9095/swagger-ui.html                            | **Swagger UI** for the API endpoints                    |\n| http://localhost:9095/api/v1/ada-handles/by-stake-address        | [GET]s the ADA Handle held by a given stake address     |\n| http://localhost:9095/api/v1/ada-handles/by-payment-address      | [GET]s the ADA Handle held by a given payment address   |\n| http://localhost:9095/api/v1/addresses/by-ada-handle/{adaHandle} | [GET]s the stake and payment addresses behind a provided ADA Handle   |\n| http://localhost:9095/api/v1/ada-handles/by-payment-address      | [GET]s the payment address behind a provided ADA Handle |\n\n## \ud83d\udc7b Disable Indexer\n\nIf you intend to scale this service, running multiple instances of the API is advisable. \nHowever, you may not want a crawl job on every instance. To disable the indexer (yaci-store), \nutilize the `disable-indexer` profile as an environment variable.\n\n```zsh\nSPRING_ACTIVE_PROFILES=disable-indexer java -jar target/cf-adahandle-resolver-0.0.1-SNAPSHOT.jar\n```\n\n## \ud83c\udf31 Environment Variables\n\nPossible profiles: `mainnet`, `preprod`, `preview`, `local-node`, `h2`, `disable-indexer`\n\n| Name                   | Description                                                    | Default Value                      |\n|------------------------|----------------------------------------------------------------|------------------------------------|\n| SPRING_ACTIVE_PROFILES | The active profile of the application                          | mainnet,h2                         |\n| PORT                   | The port on which the server will listen for incoming requests | 9095                               |\n| DB_URL                 | The URL of the database                                        | jdbc:h2:mem:mydb                   |\n| DB_USERNAME            | The username of the database user                              | sa                                 |\n| DB_PASSWORD            | The password of the database user                              | password                           |\n| REMOTE_NODE_URL        | The URL of the remote node                                     | relays-new.cardano-mainnet.iohk.io |\n| REMOTE_NODE_PORT       | The port of the remote node                                    | 3001                               |\n| LOCAL_NODE_SOCKET_PATH | The path of the local node socket                              | `<No default value>`               |\n| LOCAL_NODE_HOST        | The host of the local node                                     | `<No default value>`               |\n| LOCAL_NODE_PORT        | The port of the local node                                     | `<No default value>`               |\n", "release_dates": ["2024-01-09T17:21:13Z", "2023-12-04T12:27:48Z", "2023-11-30T10:20:53Z", "2023-11-28T13:25:51Z", "2023-10-17T08:54:40Z", "2023-08-23T21:19:56Z", "2023-08-23T14:48:01Z", "2023-08-22T21:57:13Z", "2023-08-22T20:52:04Z", "2023-08-22T18:26:22Z"]}, {"name": "cf-cardano-ballot", "description": "Cardano Ballot is a user-friendly, hybrid on- and off-chain voting system developed by the Cardano Foundation. Cardano Ballot leverages a set of backend services combined with frontend applications to facilitate voting within the Cardano Ecosystem.", "language": "Java", "license": {"key": "mpl-2.0", "name": "Mozilla Public License 2.0", "spdx_id": "MPL-2.0", "url": "https://api.github.com/licenses/mpl-2.0", "node_id": "MDc6TGljZW5zZTE0"}, "readme": "<div align=\"center\">\n  <img src=\"https://github.com/cardano-foundation/cf-cardano-ballot/blob/main/ui/summit-2023/public/static/Cardano_Ballot_black.png?raw=true#gh-light-mode-only\" alt=\"Cardano Foundation | Cardano Ballot\" height=\"150\" />\n  <img src=\"https://github.com/cardano-foundation/cf-cardano-ballot/blob/main/ui/summit-2023/public/static/Cardano_Ballot_white.png?raw=true#gh-dark-mode-only\" alt=\"Cardano Foundation | Cardano Ballot\" height=\"150\" />\n  <hr />\n    <h1 align=\"center\" style=\"border-bottom: none\">Cardano Foundation | Cardano Ballot</h1>\n\n[![License: MPL 2.0](https://img.shields.io/badge/License-MPL%202.0-brightgreen.svg)](https://opensource.org/licenses/MPL-2.0)\n[![Conventional Commits](https://img.shields.io/badge/Conventional%20Commits-1.0.0-%23FE5196?logo=conventionalcommits&logoColor=white)](https://conventionalcommits.org)\n![GitHub release (with filter)](https://img.shields.io/github/v/release/cardano-foundation/cf-cardano-ballot)\n![Discord](https://img.shields.io/discord/1022471509173882950)\n\n[![Build and Publish Docker images](https://github.com/cardano-foundation/cf-cardano-ballot/actions/workflows/publish.yaml/badge.svg)](https://github.com/cardano-foundation/cf-cardano-ballot/actions/workflows/publish.yaml)\n[![Voting-Verification-App-Build](https://github.com/cardano-foundation/cf-cardano-ballot/actions/workflows/voting-verification-app-build.yml/badge.svg)](https://github.com/cardano-foundation/cf-cardano-ballot/actions/workflows/voting-verification-app-build.yml)\n[![User-Verification-App-Build](https://github.com/cardano-foundation/cf-cardano-ballot/actions/workflows/user-verification-app-build.yml/badge.svg)](https://github.com/cardano-foundation/cf-cardano-ballot/actions/workflows/user-verification-app-build.yml)\n[![UI-App-Build](https://github.com/cardano-foundation/cf-cardano-ballot/actions/workflows/ui-cypress-tests.yaml/badge.svg)](https://github.com/cardano-foundation/cf-cardano-ballot/actions/workflows/ui-cypress-tests.yaml)\n\n  <hr/>\n</div>\n\n# Overview\n  Cardano Ballot is a user-friendly, hybrid on- and off-chain voting system developed by the Cardano Foundation.  Cardano Ballot leverages a set of backend services combined with frontend applications to facilitate voting within the Cardano Ecosystem.\n  \n  Most recently, stake-based voting was introduced into Cardano Ballot inorder to support IOG with CIP-1694 Pre-ratification polling events.  Currently, Cardano Ballot supports user-based (1 x user, 1 x vote) and stake-based (weighted) voting events.  The modularised backend services make the process of organising, deploying, and auditing a Cardano Ballot event more decentralized and user-friendly.\n\n  In 2023, Hydra and Aiken Smart Contracts were also introduced into Cardano Ballot.  The first implementation of this was a final Hydra tally of all votes submitted for the Cardano Summit Awards 2023.\n\n\n# Features\n\n| **Event Types**    | |   **Backend Service Modules**  | | **Cardano Standards, Libraries and Components** |           \n|----------------|---------------|---------------|---------------|---------------|\n|  User-based | |  Admin | | [CIP-45](https://github.com/cardano-foundation/CIPs/pull/395) - Decentralized WebRTC d'App Wallet Communication  | \n|  Stake-based | | Voting App |  | [CIP-93](https://cips.cardano.org/cips/cip93/) - Authenticated Web3 HTTP Requests  | \n| | | Ledger Follower | | [CIP-30](https://cips.cardano.org/cips/cip30/) - Cardano dApp-Wallet Web Bridge | \n| | | Vote Commitment | | [CIP-08](https://cips.cardano.org/cips/cip8/) - Message Signing |\n| | | Vote Verification | |  Cardano Foundation - [cardano-connect-with-wallet](https://github.com/cardano-foundation/cardano-connect-with-wallet) |  \n| | | User Verification | |  [Bloxbean Projects](https://github.com/bloxbean)  | \n| | | Hydra Tally | |  [Aiken](https://aiken-lang.org/) - A Modern Smart Contract Platform for Cardano  | \n| | | | | [Hydra](https://hydra.family/head-protocol/) - Head Protocol|\n\n\n\n\n# Getting Started\n\n## Requirements\n- Node.js 18.x LTS\n- Java 17 LTS\n- Postgres DB 14.x or H2 file db (local development / community running)\n- Docker\n\n\n## Repository Structure\n- [backend-services](backend-services) - Contains various backend services:\n  - [hydra-tally-app](backend-services/user-verification-service) - A CLI application which contains logic to connect to the Hydra network. Application demonstrates usage of smart contracts (Aiken) to perform counting (tally) of the votes and providing results.\n  - [user-verification-service](backend-services/user-verification-service) - A Spring Boot application that verifies user wallets using their phone number (via SMS OTP one time password) or Discord account.\n  - [vote-commitment-app](backend-services/vote-commitment-app) - Service that reads active events from ledger-follower-service and individual votes \nfrom database constructs merkle tree and at periodic, configurable intervals sends it to the Cardano blockchain.\n  - [voting-admin-app](backend-services/voting-admin-app) - Application to be used by the organisers to create events and proposals.\n  - [voting-app](backend-services/voting-app) - Voting Application that allows users to submit votes, receive vote receipts, and access leaderboard data.\n  - [voting-ledger-follower-app](backend-services/voting-ledger-follower-app) - Ledger Follower Application that is listening to the Cardano blockchain to fetch information about event data and user stake amounts in case of stake-based voting.\n  - [voting-verification-app](backend-services/voting-verification-app) - Application to be used by the community / voters to independently verify and check vote proofs.\n\n- [ui](ui) - Contains React applications for Cardano Ballopt event user interfaces:\n  - [cip-1694](ui/cip-1694) - Frontend application for the CIP-1694 pre-ratification polling event.\n  - [summit-2023](ui/summit-2023) - Frontend application for the Cardano Summit 2023 Awards voting.\n  - [verification-app](ui/verification-app) - A generic frontend application for the verification / validation of the vote proof within a certain Cardano Ballot Event.\n\n## Creating a Cardano Ballot Event\n### Voting Admin App\nBy default all backend apps are working with Cardano Pre-Production network.\n\n```shell\ncd cf-cardano-ballot/backend-services/voting-admin-app\n./gradlew bootRun\n```\n\nInstructions on how to create a new voting event can be found [here](./backend-services/voting-admin-app/EVENT_REGISTRATION.md).\n\n## Running the Backend Services\n### Ledger Follower\nBy default all backend apps are working with Cardano Pre-Production network.\n\n```shell\ncd cf-cardano-ballot/backend-services/voting-ledger-follower-app\n./gradlew bootRun\n```\nThis will launch main voting-ledger-follower-app on port: 9090 by default.\nFor a detailed description and interactive interface of the API, visit the Swagger UI documentation here:\n[http://localhost:9090/swagger-ui/index.html](http://localhost:9090/swagger-ui/index.html)\n\n### Voting App\n```shell\ncd cf-cardano-ballot/backend-services/voting-app\n./gradlew bootRun\n```\n\nThis will launch main voting-app on port: 9091 by default.\nFor a detailed description and interactive interface of the API, visit the Swagger UI documentation here:\n[http://localhost:9091/swagger-ui/index.html](http://localhost:9091/swagger-ui/index.html)\n\n### Voting Verification\n```shell\ncd cf-cardano-ballot/backend-services/voting-verification-app\n./gradlew bootRun\n```\n\nThis will launch voting-verification-app on port: 9092 by default.\nFor a detailed description and interactive interface of the API, visit the Swagger UI documentation here:\n[http://localhost:9092/swagger-ui/index.html](http://localhost:9092/swagger-ui/index.html)\n\nInstructions on how to run the `Vote Verification` app can be found [here](./backend-services/voting-verification-app/README.md).\n\n### Voting Commitment App\n```bash\ncd cf-cardano-ballot/backend-services/vote-commitment-app\ncp .env.template .env\n# Update .env with required values (e.g. organiser's mnemonic)\n# Run the service locally via:\n./gradlew bootRun\n```\n\n### User Verification App\n```bash\nexport AWS_SNS_ACCESS_KEY_ID=...\nexport AWS_SNS_SECRET_ACCESS_KEY=...\ncd cf-cardano-ballot/backend-services/user-verification-service\n./gradlew bootRun\n```\n\nThis will launch user-verification-app on port: 9093 by default.\n[http://localhost:9093/swagger-ui/index.html](http://localhost:9093/swagger-ui/index.html)\n\n**Note: user-verification-service is only needed for Cardano Summit 2023.**\n\n**Note: binding PORT can be changed via SERVER_PORT env variable.**\n\ne.g.\n```\nSERVER_PORT=8888 ./gradlew bootRun\n```\n\nUse `setupProxy.js` to proxy services urls. \n\n## Running the Frontend (User Interface)\nCopy the [`.env.example`](ui/summit-2023/.env.example) file and rename it as `.env`. \n\nThen run:\n\n```shell\ncd cf-cardano-ballot/ui/summit-2023\ncp .env.example .env\nnpm i\nnpm run start\n```\n\n## Backend -> Frontend Types Generation\nAll backend apps will generate TypeScript types for the frontend by using the following command:\n\nAs an example:\n```shell\ncd cf-cardano-ballot/backend-services/voting-app\n./gradlew buildAndCopyTypescriptTypes -Pui_project_name=summit-2023\n```\nThis will generate TypeScript types in the ui/summit-2023/build/typescript-generator/voting-app-types.ts\n\n\nFor your own project you will need to replace summit-2023 with your respective project ui directory name.\n\n# Contributing\n\nAll contributions are welcome! Please feel free to open a new thread on the issue tracker or submit a new pull request.\n\nPlease read [Contributing](CONTRIBUTING.md) first. Thank you for contributing.\n\n## Additional Docs\n- [Code of Conduct](CODE_OF_CONDUCT.md)\n- [Security](SECURITY.md)\n- [Changelog](CHANGELOG.md)\n", "release_dates": ["2023-10-27T15:38:56Z", "2023-10-24T09:29:45Z", "2023-10-20T14:49:37Z", "2023-10-20T11:36:34Z", "2023-10-20T08:44:08Z", "2023-10-19T14:10:02Z", "2023-10-11T10:33:10Z", "2023-10-10T14:28:10Z", "2023-10-09T12:44:14Z", "2023-10-05T12:38:36Z", "2023-10-05T09:32:43Z", "2023-10-02T09:17:27Z", "2023-09-29T22:22:28Z", "2023-09-29T12:55:54Z", "2023-09-28T14:08:09Z", "2023-09-28T11:57:16Z", "2023-09-28T10:11:46Z", "2023-09-28T08:22:41Z", "2023-09-27T12:48:55Z", "2023-09-27T11:15:35Z", "2023-09-26T15:44:22Z", "2023-09-26T15:26:59Z", "2023-09-26T11:18:03Z", "2023-09-26T11:01:06Z", "2023-09-26T10:40:51Z", "2023-09-25T14:50:13Z", "2023-09-25T13:43:02Z", "2023-09-25T13:01:49Z", "2023-09-22T11:56:31Z", "2023-09-22T08:15:52Z"]}, {"name": "cf-cardano-conversions-java", "description": "Cardano Conversions is a library that exposes a various deterministic conversions that can be done in Cardano, e.g. utc time to absolute slot, utc time to epoch no, epoch no to absolute slot, etc", "language": "Java", "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "readme": "# Cardano Conversions Utility\n\n[![Build](https://github.com/cardano-foundation/cf-cardano-conversions-java/actions/workflows/tests.yaml/badge.svg)](https://github.com/cardano-foundation/cf-cardano-conversions-java/actions/workflows/tests.yaml)\n[![License](https://img.shields.io:/github/license/cardano-foundation/cf-cardano-conversions-java?label=license)](https://github.com/cardano-foundation/cf-cardano-conversions-java/blob/master/LICENSE)\n![Discord](https://img.shields.io/discord/1022471509173882950)\n\n## Motivation\n\nIn Cardano, as a developer, it is common to find in various projects that there is a need to convert between various metrics, eg. start epoch to utc time, or slot number to epoch number or yet another metric.\n\nThis library aims to provide a common place for such conversions.\n\n## Requirements\n- JDK (>= 17)\n- maven (>= 3)\n\n## Local Cloning && Building\n```shell\ngit clone https://github.com/cardano-foundation/cf-cardano-conversions-java\n\ncd cf-cardano-conversions-java\n./mvnw clean install\n```\n\n## Maven / Gradle\nMaven:\n```xml\n<dependency>\n    <groupId>org.cardanofoundation</groupId>\n    <artifactId>cf-cardano-conversions-java</artifactId>\n    <version>1.1.0</version>\n</dependency>\n```\nGradle:\n```\nimplementation(\"org.cardanofoundation:cf-cardano-conversions-java:1.1.0\")\n```\n\n## Example usages:\n```java\nvar converters = ClasspathConversionsFactory.createConverters(NetworkType.MAINNET);\n\nvar epochStartTime = converters.epoch().beginningOfEpochToUTCTime(445);\nvar utcTime = converters.slot().slotToTime(109090938L);\nvar epochNo = converters.time().utcTimeToEpochNo(LocalDateTime.of(2023, 11, 22, 9, 48, 58));\nvar lastAlonzoAbsoluteSlot = converters.epoch().endingOfEpochToAbsoluteSlot(364);\nvar firstRealAbsoluteSlotBabbage = converters.era().firstRealSlot(EraType.Babbage);\nvar firstRealTimeBabbage = converters.era().firstRealEraTime(EraType.Babbage);\n\nSystem.out.println(epochStartTime); // LocalDateTime.of(2023, 10, 27, 21, 44, 51)\nSystem.out.println(utcTime); // LocalDateTime.of(2023, 11, 22, 12, 47, 9)\nSystem.out.println(epochNo); // 450\nSystem.out.println(lastAlonzoAbsoluteSlot); // 72316799L\nSystem.out.println(firstRealAbsoluteSlotBabbage); // 72316896L\nSystem.out.println(firstRealTimeBabbage); // LocalDateTime.of(2022, 9, 22, 21, 46, 27)\n```\n\n## Additional Docs\n- [CODE_OF_CONDUCT.md](CODE_OF_CONDUCT.md)\n- [SECURITY.md](SECURITY.md)\n- [CONTRIBUTING.md](CONTRIBUTING.md)\n- [CHANGELOG.md](CHANGELOG.md)\n", "release_dates": ["2024-02-20T08:12:32Z", "2023-11-27T11:17:25Z"]}, {"name": "cf-cip-frontend", "description": "The Cardano CIP Frontend", "language": "JavaScript", "license": null, "readme": "[![Netlify Status](https://api.netlify.com/api/v1/badges/2b9ce0de-90e0-4bf5-be3e-954b3c0d02b0/deploy-status)](https://app.netlify.com/sites/staging-cip-cardanofoundation/deploys)\n\n## Cardano CIP Frontend\nWe wanted to build a CIP Frontend as open and inclusive as Cardano. A repository that is in the hands of the Cardano community and can be constantly evolved by it.\n\nFor this to be successful, the repository relies on your contributions, and the fact that you are reading this text probably means that you have something to contribute.\n\n## Clone the repo\n```console\ngit clone https://github.com/cardano-foundation/cf-cip-frontend.git\n```\n\n## Navigate into the folder\n```console\ncd cf-cip-frontend\n```\n\n## Install all dependencies\n```console\nnpm install\n```\n\n## Github Access Token\nIn order to run the project and fetch data from CIP repository, you will need to get Github personal access token.\n\nTo obtain it, go to your account settings, navigate to `Developer settings` select `Personal access tokens` click `Generate token` configure the required settings\n\nNow create an `.env.local` file and copy the example from `.env.example`\n\nYour `.env.local` should look like this:\n\n```console\nGITHUB_TOKEN=YOUR_GITHUB_PERSONAL_ACCESS_TOKEN\n```\n\n## Production build\n\nCreate at least once a production build (as this pulls missing files)\n```console\nnpm run build\n```\n\n## Local development\n\nThis command starts a local development server and open up a browser window. Most changes are reflected live without having to restart the server.\n```console\nnpm run dev\n```\n", "release_dates": []}, {"name": "cf-cip1694-ballot-status", "description": "\ud83d\udcc8 Uptime monitor and status page for cardano-foundation, powered by @upptime", "language": "Markdown", "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "readme": "This repository contains the open-source uptime monitor and status page for [Cardano Foundation](https://cardanofoundation.org), powered by [Upptime](https://github.com/upptime/upptime).\n\n[![Uptime CI](https://github.com/cardano-foundation/cf-summit-evoting-status/workflows/Uptime%20CI/badge.svg)](https://github.com/cardano-foundation/cf-summit-evoting-status/actions?query=workflow%3A%22Uptime+CI%22)\n[![Response Time CI](https://github.com/cardano-foundation/cf-summit-evoting-status/workflows/Response%20Time%20CI/badge.svg)](https://github.com/cardano-foundation/cf-summit-evoting-status/actions?query=workflow%3A%22Response+Time+CI%22)\n[![Graphs CI](https://github.com/cardano-foundation/cf-summit-evoting-status/workflows/Graphs%20CI/badge.svg)](https://github.com/cardano-foundation/cf-summit-evoting-status/actions?query=workflow%3A%22Graphs+CI%22)\n[![Static Site CI](https://github.com/cardano-foundation/cf-summit-evoting-status/workflows/Static%20Site%20CI/badge.svg)](https://github.com/cardano-foundation/cf-summit-evoting-status/actions?query=workflow%3A%22Static+Site+CI%22)\n[![Summary CI](https://github.com/cardano-foundation/cf-summit-evoting-status/workflows/Summary%20CI/badge.svg)](https://github.com/cardano-foundation/cf-summit-evoting-status/actions?query=workflow%3A%22Summary+CI%22)\n\nWith [Upptime](https://upptime.js.org), you can get your own unlimited and free uptime monitor and status page, powered entirely by a GitHub repository. We use [Issues](https://github.com/cardano-foundation/cf-summit-evoting-status/issues) as incident reports, [Actions](https://github.com/cardano-foundation/cf-summit-evoting-status/actions) as uptime monitors, and [Pages](https://status.voting.summit.cardano.org) for the status page.\n\n# [\ud83d\udcc8 Live Status](https://status.voting.summit.cardano.org): <!--live status--> **\ud83d\udfe5 Complete outage**\n\n<!--start: status pages-->\n<!-- This summary is generated by Upptime (https://github.com/upptime/upptime) -->\n<!-- Do not edit this manually, your changes will be overwritten -->\n<!-- prettier-ignore -->\n| URL | Status | History | Response Time | Uptime |\n| --- | ------ | ------- | ------------- | ------ |\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/1694ballot.cardano.org.ico\" height=\"13\"> [1694ballot.cardano.org](https://1694ballot.cardano.org/) | \ud83d\udfe5 Down | [1694ballot-cardano-org.yml](https://github.com/cardano-foundation/cf-cip1694-ballot-status/commits/HEAD/history/1694ballot-cardano-org.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/1694ballot-cardano-org/response-time-week.png\" height=\"20\"> 0ms</summary><br><a href=\"https://status.1694ballot.cardano.org/history/1694ballot-cardano-org\"><img alt=\"Response time 379\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2F1694ballot-cardano-org%2Fresponse-time.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/1694ballot-cardano-org\"><img alt=\"24-hour response time 0\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2F1694ballot-cardano-org%2Fresponse-time-day.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/1694ballot-cardano-org\"><img alt=\"7-day response time 0\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2F1694ballot-cardano-org%2Fresponse-time-week.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/1694ballot-cardano-org\"><img alt=\"30-day response time 0\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2F1694ballot-cardano-org%2Fresponse-time-month.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/1694ballot-cardano-org\"><img alt=\"1-year response time 379\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2F1694ballot-cardano-org%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status.1694ballot.cardano.org/history/1694ballot-cardano-org\">0.00%</a></summary><a href=\"https://status.1694ballot.cardano.org/history/1694ballot-cardano-org\"><img alt=\"All-time uptime 68.84%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2F1694ballot-cardano-org%2Fuptime.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/1694ballot-cardano-org\"><img alt=\"24-hour uptime 0.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2F1694ballot-cardano-org%2Fuptime-day.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/1694ballot-cardano-org\"><img alt=\"7-day uptime 0.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2F1694ballot-cardano-org%2Fuptime-week.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/1694ballot-cardano-org\"><img alt=\"30-day uptime 4.67%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2F1694ballot-cardano-org%2Fuptime-month.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/1694ballot-cardano-org\"><img alt=\"1-year uptime 68.84%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2F1694ballot-cardano-org%2Fuptime-year.json\"></a></details>\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/follower-api.1694ballot.cardano.org.ico\" height=\"13\"> [event-api](https://follower-api.1694ballot.cardano.org/api/reference/event/CIP-1694_Pre_Ratification) | \ud83d\udfe5 Down | [event-api.yml](https://github.com/cardano-foundation/cf-cip1694-ballot-status/commits/HEAD/history/event-api.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/event-api/response-time-week.png\" height=\"20\"> 0ms</summary><br><a href=\"https://status.1694ballot.cardano.org/history/event-api\"><img alt=\"Response time 542\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fevent-api%2Fresponse-time.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/event-api\"><img alt=\"24-hour response time 0\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fevent-api%2Fresponse-time-day.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/event-api\"><img alt=\"7-day response time 0\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fevent-api%2Fresponse-time-week.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/event-api\"><img alt=\"30-day response time 0\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fevent-api%2Fresponse-time-month.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/event-api\"><img alt=\"1-year response time 542\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fevent-api%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status.1694ballot.cardano.org/history/event-api\">0.00%</a></summary><a href=\"https://status.1694ballot.cardano.org/history/event-api\"><img alt=\"All-time uptime 69.07%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fevent-api%2Fuptime.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/event-api\"><img alt=\"24-hour uptime 0.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fevent-api%2Fuptime-day.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/event-api\"><img alt=\"7-day uptime 0.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fevent-api%2Fuptime-week.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/event-api\"><img alt=\"30-day uptime 4.67%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fevent-api%2Fuptime-month.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/event-api\"><img alt=\"1-year uptime 69.07%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fevent-api%2Fuptime-year.json\"></a></details>\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/follower-api.1694ballot.cardano.org.ico\" height=\"13\"> [blockchain-follower-api](https://follower-api.1694ballot.cardano.org/api/blockchain/tip) | \ud83d\udfe5 Down | [blockchain-follower-api.yml](https://github.com/cardano-foundation/cf-cip1694-ballot-status/commits/HEAD/history/blockchain-follower-api.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/blockchain-follower-api/response-time-week.png\" height=\"20\"> 0ms</summary><br><a href=\"https://status.1694ballot.cardano.org/history/blockchain-follower-api\"><img alt=\"Response time 374\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fblockchain-follower-api%2Fresponse-time.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/blockchain-follower-api\"><img alt=\"24-hour response time 0\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fblockchain-follower-api%2Fresponse-time-day.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/blockchain-follower-api\"><img alt=\"7-day response time 0\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fblockchain-follower-api%2Fresponse-time-week.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/blockchain-follower-api\"><img alt=\"30-day response time 0\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fblockchain-follower-api%2Fresponse-time-month.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/blockchain-follower-api\"><img alt=\"1-year response time 374\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fblockchain-follower-api%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status.1694ballot.cardano.org/history/blockchain-follower-api\">0.00%</a></summary><a href=\"https://status.1694ballot.cardano.org/history/blockchain-follower-api\"><img alt=\"All-time uptime 69.44%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fblockchain-follower-api%2Fuptime.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/blockchain-follower-api\"><img alt=\"24-hour uptime 0.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fblockchain-follower-api%2Fuptime-day.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/blockchain-follower-api\"><img alt=\"7-day uptime 0.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fblockchain-follower-api%2Fuptime-week.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/blockchain-follower-api\"><img alt=\"30-day uptime 4.67%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fblockchain-follower-api%2Fuptime-month.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/blockchain-follower-api\"><img alt=\"1-year uptime 69.44%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fblockchain-follower-api%2Fuptime-year.json\"></a></details>\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/api.1694ballot.cardano.org.ico\" height=\"13\"> [login-api](http://api.1694ballot.cardano.org/api/auth/login) | \ud83d\udfe5 Down | [login-api.yml](https://github.com/cardano-foundation/cf-cip1694-ballot-status/commits/HEAD/history/login-api.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/login-api/response-time-week.png\" height=\"20\"> 0ms</summary><br><a href=\"https://status.1694ballot.cardano.org/history/login-api\"><img alt=\"Response time 481\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Flogin-api%2Fresponse-time.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/login-api\"><img alt=\"24-hour response time 0\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Flogin-api%2Fresponse-time-day.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/login-api\"><img alt=\"7-day response time 0\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Flogin-api%2Fresponse-time-week.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/login-api\"><img alt=\"30-day response time 0\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Flogin-api%2Fresponse-time-month.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/login-api\"><img alt=\"1-year response time 481\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Flogin-api%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status.1694ballot.cardano.org/history/login-api\">0.00%</a></summary><a href=\"https://status.1694ballot.cardano.org/history/login-api\"><img alt=\"All-time uptime 69.47%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Flogin-api%2Fuptime.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/login-api\"><img alt=\"24-hour uptime 0.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Flogin-api%2Fuptime-day.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/login-api\"><img alt=\"7-day uptime 0.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Flogin-api%2Fuptime-week.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/login-api\"><img alt=\"30-day uptime 4.67%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Flogin-api%2Fuptime-month.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/login-api\"><img alt=\"1-year uptime 69.47%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Flogin-api%2Fuptime-year.json\"></a></details>\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/api.1694ballot.cardano.org.ico\" height=\"13\"> [cast-vote-api](http://api.1694ballot.cardano.org/api/vote/cast) | \ud83d\udfe5 Down | [cast-vote-api.yml](https://github.com/cardano-foundation/cf-cip1694-ballot-status/commits/HEAD/history/cast-vote-api.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/cast-vote-api/response-time-week.png\" height=\"20\"> 0ms</summary><br><a href=\"https://status.1694ballot.cardano.org/history/cast-vote-api\"><img alt=\"Response time 320\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fcast-vote-api%2Fresponse-time.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/cast-vote-api\"><img alt=\"24-hour response time 0\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fcast-vote-api%2Fresponse-time-day.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/cast-vote-api\"><img alt=\"7-day response time 0\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fcast-vote-api%2Fresponse-time-week.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/cast-vote-api\"><img alt=\"30-day response time 0\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fcast-vote-api%2Fresponse-time-month.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/cast-vote-api\"><img alt=\"1-year response time 320\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fcast-vote-api%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status.1694ballot.cardano.org/history/cast-vote-api\">0.00%</a></summary><a href=\"https://status.1694ballot.cardano.org/history/cast-vote-api\"><img alt=\"All-time uptime 69.47%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fcast-vote-api%2Fuptime.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/cast-vote-api\"><img alt=\"24-hour uptime 0.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fcast-vote-api%2Fuptime-day.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/cast-vote-api\"><img alt=\"7-day uptime 0.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fcast-vote-api%2Fuptime-week.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/cast-vote-api\"><img alt=\"30-day uptime 4.67%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fcast-vote-api%2Fuptime-month.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/cast-vote-api\"><img alt=\"1-year uptime 69.47%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fcast-vote-api%2Fuptime-year.json\"></a></details>\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/api.1694ballot.cardano.org.ico\" height=\"13\"> [get-votes-api](http://api.1694ballot.cardano.org/api/vote/votes/CIP-1694_Pre_Ratification) | \ud83d\udfe5 Down | [get-votes-api.yml](https://github.com/cardano-foundation/cf-cip1694-ballot-status/commits/HEAD/history/get-votes-api.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/get-votes-api/response-time-week.png\" height=\"20\"> 0ms</summary><br><a href=\"https://status.1694ballot.cardano.org/history/get-votes-api\"><img alt=\"Response time 324\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fget-votes-api%2Fresponse-time.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/get-votes-api\"><img alt=\"24-hour response time 0\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fget-votes-api%2Fresponse-time-day.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/get-votes-api\"><img alt=\"7-day response time 0\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fget-votes-api%2Fresponse-time-week.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/get-votes-api\"><img alt=\"30-day response time 0\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fget-votes-api%2Fresponse-time-month.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/get-votes-api\"><img alt=\"1-year response time 324\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fget-votes-api%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status.1694ballot.cardano.org/history/get-votes-api\">0.00%</a></summary><a href=\"https://status.1694ballot.cardano.org/history/get-votes-api\"><img alt=\"All-time uptime 69.47%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fget-votes-api%2Fuptime.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/get-votes-api\"><img alt=\"24-hour uptime 0.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fget-votes-api%2Fuptime-day.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/get-votes-api\"><img alt=\"7-day uptime 0.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fget-votes-api%2Fuptime-week.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/get-votes-api\"><img alt=\"30-day uptime 4.67%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fget-votes-api%2Fuptime-month.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/get-votes-api\"><img alt=\"1-year uptime 69.47%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fget-votes-api%2Fuptime-year.json\"></a></details>\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/api.1694ballot.cardano.org.ico\" height=\"13\"> [get-vote-receipt-api](http://api.1694ballot.cardano.org/api/vote/receipt/CIP-1694_Pre_Ratification/CIP1694_APPROVAL) | \ud83d\udfe5 Down | [get-vote-receipt-api.yml](https://github.com/cardano-foundation/cf-cip1694-ballot-status/commits/HEAD/history/get-vote-receipt-api.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/get-vote-receipt-api/response-time-week.png\" height=\"20\"> 0ms</summary><br><a href=\"https://status.1694ballot.cardano.org/history/get-vote-receipt-api\"><img alt=\"Response time 281\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fget-vote-receipt-api%2Fresponse-time.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/get-vote-receipt-api\"><img alt=\"24-hour response time 0\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fget-vote-receipt-api%2Fresponse-time-day.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/get-vote-receipt-api\"><img alt=\"7-day response time 0\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fget-vote-receipt-api%2Fresponse-time-week.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/get-vote-receipt-api\"><img alt=\"30-day response time 0\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fget-vote-receipt-api%2Fresponse-time-month.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/get-vote-receipt-api\"><img alt=\"1-year response time 281\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fget-vote-receipt-api%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status.1694ballot.cardano.org/history/get-vote-receipt-api\">0.00%</a></summary><a href=\"https://status.1694ballot.cardano.org/history/get-vote-receipt-api\"><img alt=\"All-time uptime 69.47%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fget-vote-receipt-api%2Fuptime.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/get-vote-receipt-api\"><img alt=\"24-hour uptime 0.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fget-vote-receipt-api%2Fuptime-day.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/get-vote-receipt-api\"><img alt=\"7-day uptime 0.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fget-vote-receipt-api%2Fuptime-week.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/get-vote-receipt-api\"><img alt=\"30-day uptime 4.67%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fget-vote-receipt-api%2Fuptime-month.json\"></a><br><a href=\"https://status.1694ballot.cardano.org/history/get-vote-receipt-api\"><img alt=\"1-year uptime 69.47%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-cip1694-ballot-status%2FHEAD%2Fapi%2Fget-vote-receipt-api%2Fuptime-year.json\"></a></details>\n\n<!--end: status pages-->\n\n[**Visit our status website \u2192**](https://status.voting.summit.cardano.org)\n\n## \ud83d\udcc4 License\n\n- Powered by: [Upptime](https://github.com/upptime/upptime)\n- Code: [MIT](./LICENSE) \u00a9 [Cardano Foundation](https://cardanofoundation.org)\n- Data in the `./history` directory: [Open Database License](https://opendatacommons.org/licenses/odbl/1-0/)\n", "release_dates": []}, {"name": "cf-discord-wallet-verification-bot", "description": "This bot aims to provide a wallet and user association based on the user's discord account.", "language": "TypeScript", "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "readme": "# \ud83e\udd16 Discord Verification Bot \ud83e\udd1d\n\n<p align=\"left\">\n<img alt=\"Release\" src=\"https://github.com/cardano-foundation/cf-discord-wallet-verification-bot/actions/workflows/release.yaml/badge.svg?branch=main\" />\n<a href=\"https://conventionalcommits.org\"><img alt=\"conventionalcommits\" src=\"https://img.shields.io/badge/Conventional%20Commits-1.0.0-%23FE5196?logo=conventionalcommits\" /></a>\n<a href=\"https://opensource.org/licenses/MIT\"><img alt=\"License\" src=\"https://img.shields.io/badge/License-MIT-green.svg\" /></a>\n</p>\n\n\nThis bot aims to provide a wallet and user association based on the user's discord account.\n\n## \ud83e\uddbe Getting Started\n\n1. Add an empty .env file beside this README.md file\n2. [Create a discord app](https://discord.com/developers/docs/getting-started)\n3. Click on the menu entry `Bot` (under Settings) and press \"View Token\" to get a token and copy it into the .env file as `DISCORD_TOKEN=<token>`\n4. Enable \"MESSAGE CONTENT INTENT\" under `Previliged Gateway Intents` at the bottom of this page\n5. Goto the `OAuth2 > URL Generator` and activate the \"bot\" scope\n6. Within the bot perimssion section (below) check `Read Messages/View Channels`, `Send Messages`, `Embed Links`, `Read Message History` and `Use Embedded Activities`\n7. Copy the generated URL and open it in a new tab\n8. Select the server you want to add the bot to and press \"Authorize\"\n9. `OPTIONAL` Change the verification level to \"Highest\" in the server settings under \"Safety Setup\" to make sure a user can only link accounts to wallets that have a verified phone number on Discord `It prevents users from creating multiple accounts and linking them to different wallets`\n10. In the Discord user settings under \"Advanced\" enable \"Developer Mode\" (this is needed to get the server and channel id)\n11. Right click on the server and copy the server id and add it to the .env file as `GUILD_ID=<server id>`\n12. Create a new channel e.g. \"\ud83d\udd17wallet-verification\" which is only visible for verified users and \u2757 make sure only the bot can send messages in this channel by changing the channel permissions \u2757\n13. Right click on the channel and copy the channel id and add it to the .env file as `CHANNEL_ID=<channel id>`\n14. If you don't have it yet, create a new role e.g. \"Verified\" that a user gets after accepting the rules of your server\n15. Right click on the role and copy the role id and add it to the .env file as `VERIFIED_ROLE_ID=<role id>`\n16. The bot will send a message to a backend you would need to provide. Please make sure to implement the endpoints as described below in the \"Endpoints\" section\n17. Provide the backend within the .env file as `BACKEND_BASE_URL=<backend url>`\n18. Run `npm install` to install all dependencies\n19. Run `npm run build` to transpile the typescript code\n20. Run `npm run start` to start the bot\n\n### \ud83d\udc40 Endpoints\n\n- `GET` `{{ BACKEND_BASE_URL }}`/is-verified/<hashedDiscordId> - Checks if a user is verified and return `verified: true` or `verified: false`\n- `POST` `{{ BACKEND_BASE_URL }}`/start-verification - Starts the verification process and returns 200 if successful\nThis endpoint expects a body like this, which needs to be stored for instance in a database:\n```json\n{\n    \"discordIdHash\": \"<hashedDiscordId>\",\n    \"secret\": \"<randomSecret>\",\n}\n```\n- `POST` `{{ BACKEND_BASE_URL }}`/check-verification - This endpoint is called by the frontend to send signature along with the secret and hashed Discord id to the backend. The backend needs to check if the signature is valid and if the hashed Discord id and secret matches the one stored in the database.\n\n## \ud83c\udf31 Environment Variables\n\n### Required Variables\n\n| Variable | Description |\n| --- | --- |\n| DISCORD_TOKEN | The token of the discord bot |\n| GUILD_ID | The id of the discord server |\n| CHANNEL_ID | The id of the discord channel |\n| VERIFIED_ROLE_ID | The id of the verified role |\n| BACKEND_BASE_URL | The base url of the backend |\n| FRONTEND_URL | The url of the frontend. The bot will link the user to this url with secret and hashed Discord id as url parameters |\n\n### Optional Variables\n\n| Variable | Description | Default |\n| --- | --- | --- |\n| DISCORD_VERIFICATION_BOT_SALT | It's an extra prefix added to the discord id before hashing to increase the security |\n| BACKEND_BASIC_AUTH_ENABLED | Enables or disables basic auth | false |\n| BACKEND_BASIC_AUTH_USER | The username of the basic auth | |\n| BACKEND_BASIC_AUTH_PASSWORD | The password of the basic auth | |\n| BOT_MESSAGE_WELCOME | A message the bot sends alongside the verification button | Click the button below to verify your wallet |\n| BOT_BUTTON_LABEL | The label of the verification button | Start Wallet Verification |\n| BOT_MESSAGE_RULES_NOT_ACCEPTED | The message the bot sends in case the user does not have the `verified` role | Hi ${USERNAME}, you need to accept our terms and conditions by reacting with a \ud83d\ude80 emoji to the message within the verification channel. Click the button again once you have accepted the terms and conditions. |\n| BOT_MESSAGE_SUCCESS | A message the bot sends together with the frontend link to finish the verification process on your website | Thank you $${USERNAME}, please follow this link to finish the verification process on our website!` |\n| BOT_SUCCESS_BUTTON_LABEL | The label of the button the bot sends to finish the verification process in the frontend | Finish Wallet Verification |\n| BOT_MESSAGE_ALREADY_VERIFIED | A message the bot sends in case the user is already verified | Hi ${USERNAME}, you have already verified your wallet! |\n| BOT_ERROR_MESSAGE | A message the bot sends in case of an error | Hi ${USERNAME}, something went wrong. Please try again later! |\n\n## \ud83c\udfd7 Development\n\nWe use a mix of tsc -w and nodemon to watch for changes and restart the bot. Just run the following command to start the bot in development mode:\n\n```zsh\nnpm run dev\n```\n", "release_dates": ["2023-10-20T08:11:01Z"]}, {"name": "cf-explorer", "description": "The Cardano Explorer makes it easy for regulators, policymakers and regulated entities to navigate the Cardano blockchain without having to be Cardano experts. Publicly available and to be open sourced soon!", "language": "Shell", "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "readme": "# Cardano Foundation Explorer Deployment\n\nThis project contains manifests and scripts to bootstrap and deploy the Cardano Foundation Explorer project and all its\ndependencies.\n\n```mermaid\nflowchart LR\n    A[Explorer Frontend] --> B[Explorer API]\n    A --> C[Explorer Authentication\\n Service]\n    C --> D[Keycloak]\n    B --> E[(Postgres Database)]\n    F[Explorer Rewards Service] --> E\n    G[Koios] --> F\n    H[Explorer Scheduled\\n Services] --> E\n    E --> H\n    I[LedgerSync] --> E \n    cp{{Explorer Common\\nPackage}}\n\n    style A fill:#5C8DFF,stroke:#5C8DFF\n    style B fill:#5C8DFF,stroke:#5C8DFF\n    style C fill:#5C8DFF,stroke:#5C8DFF\n    style D fill:#1EC198,stroke:#1EC198\n    style E fill:#1EC198,stroke:#1EC198\n\n    style F fill:#5C8DFF,stroke:#5C8DFF\n    style G fill:#1EC198,stroke:#1EC198\n    style H fill:#5C8DFF,stroke:#5C8DFF\n    style I fill:#1EC198,stroke:#1EC198\n    style cp fill:#F6C667,stroke:#F6C667\n```\n\n### Tested Configuration\n\n| Repository                   | Version |\n|------------------------------|---------|\n| cf-ledger-crawler            | 0.5.0   |\n| cf-ledger-consumer           | 0.5.0   |\n| cf-ledger-consumer-schedules | 0.2.19  |\n| cf-explorer-api              | 0.5.0   |\n| cf-explorer-rewards-api      | 0.1.7   |\n| cf-explorer-authentication   | 0.1.15  |\n| cf-explorer-frontend         | 0.5.3   |\n\n## Continuous Deployment\n\n[ArgoCD](https://argo-cd.readthedocs.io/en/stable/) \u00eds the Continuous Deployment system of choice for deploying the applications\nthat compose the Explorer system and all its dependencies.\n\n## Bootstrap\n\nBootstrapping a cluster is the process of deploying artifacts for the very first time. ArgoCD itself needs to be deployed the first time\nand then, in turn ArgoCD will deploy all the components under its control in a [GitOps](https://about.gitlab.com/topics/gitops/) fashion.\n\nAn [Application](https://argo-cd.readthedocs.io/en/stable/core_concepts/) In ArgoCD is a:\n> A group of Kubernetes resources as defined by a manifest. This is a Custom Resource Definition (CRD).\n\nSome examples could be: \n1. Microservices and all their resources (workers, network resources, DNS definitions, scaling policies)\n2. Databases\n3. System / Administration services (metric server etc)\n\nIn order to bootstrap the cluster is used the technique of [App of Apps](https://argo-cd.readthedocs.io/en/stable/operator-manual/cluster-bootstrapping/).\n\nFor more info, check the [README.md](argocd-bootstrap/README.md)\n\n# Helm Repositories\n\nFull list of helm repositories to add\n\n```bash \nhelm repo add argo-cd https://argoproj.github.io/argo-helm\nhelm repo add sealed-secrets https://bitnami-labs.github.io/sealed-secrets\nhelm repo add bitnami https://charts.bitnami.com/bitnami\nhelm repo add traefik https://helm.traefik.io/traefik\nhelm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nhelm repo add elastic https://helm.elastic.co\n```\n\n## Embedded Services\n\n### Kibana\n\nKibana credentials are:\n\n* user: elastic\n* password: `kubectl get secret -n elastic-stack quickstart-es-elastic-user -o json | jq -r .data.elastic`\n", "release_dates": ["2024-02-14T09:39:04Z", "2023-12-12T08:16:59Z"]}, {"name": "cf-explorer-status", "description": "\ud83d\udcc8 Uptime monitor and status page for cardano-foundation, powered by @upptime", "language": "Markdown", "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "readme": "# [\ud83d\udcc8 Live Status](https://status.beta.explorer.cardano.org): <!--live status--> **\ud83d\udfe9 All systems operational**\n\nThis repository contains the open-source uptime monitor and status page for [Cardano Foundation](https://cardanofoundation.org), powered by [Upptime](https://github.com/upptime/upptime).\n\n[![Uptime CI](https://github.com/cardano-foundation/cf-explorer-status/workflows/Uptime%20CI/badge.svg)](https://github.com/cardano-foundation/cf-explorer-status/actions?query=workflow%3A%22Uptime+CI%22)\n[![Response Time CI](https://github.com/cardano-foundation/cf-explorer-status/workflows/Response%20Time%20CI/badge.svg)](https://github.com/cardano-foundation/cf-explorer-status/actions?query=workflow%3A%22Response+Time+CI%22)\n[![Graphs CI](https://github.com/cardano-foundation/cf-explorer-status/workflows/Graphs%20CI/badge.svg)](https://github.com/cardano-foundation/cf-explorer-status/actions?query=workflow%3A%22Graphs+CI%22)\n[![Static Site CI](https://github.com/cardano-foundation/cf-explorer-status/workflows/Static%20Site%20CI/badge.svg)](https://github.com/cardano-foundation/cf-explorer-status/actions?query=workflow%3A%22Static+Site+CI%22)\n[![Summary CI](https://github.com/cardano-foundation/cf-explorer-status/workflows/Summary%20CI/badge.svg)](https://github.com/cardano-foundation/cf-explorer-status/actions?query=workflow%3A%22Summary+CI%22)\n\nWith [Upptime](https://upptime.js.org), you can get your own unlimited and free uptime monitor and status page, powered entirely by a GitHub repository. We use [Issues](https://github.com/cardano-foundation/cf-explorer-status/issues) as incident reports, [Actions](https://github.com/cardano-foundation/cf-explorer-status/actions) as uptime monitors, and [Pages](https://status.beta.explorer.cardano.org) for the status page.\n\n<!--start: status pages-->\n<!-- This summary is generated by Upptime (https://github.com/upptime/upptime) -->\n<!-- Do not edit this manually, your changes will be overwritten -->\n<!-- prettier-ignore -->\n| URL | Status | History | Response Time | Uptime |\n| --- | ------ | ------- | ------------- | ------ |\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/beta.explorer.cardano.org.ico\" height=\"13\"> [beta.explorer.cardano.org (mainnet frontend)](https://beta.explorer.cardano.org/) | \ud83d\udfe9 Up | [beta-explorer-cardano-org-mainnet-frontend.yml](https://github.com/cardano-foundation/cf-explorer-status/commits/HEAD/history/beta-explorer-cardano-org-mainnet-frontend.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/beta-explorer-cardano-org-mainnet-frontend/response-time-week.png\" height=\"20\"> 179ms</summary><br><a href=\"https://status.beta.explorer.cardano.org/history/beta-explorer-cardano-org-mainnet-frontend\"><img alt=\"Response time 269\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fbeta-explorer-cardano-org-mainnet-frontend%2Fresponse-time.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/beta-explorer-cardano-org-mainnet-frontend\"><img alt=\"24-hour response time 218\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fbeta-explorer-cardano-org-mainnet-frontend%2Fresponse-time-day.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/beta-explorer-cardano-org-mainnet-frontend\"><img alt=\"7-day response time 179\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fbeta-explorer-cardano-org-mainnet-frontend%2Fresponse-time-week.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/beta-explorer-cardano-org-mainnet-frontend\"><img alt=\"30-day response time 248\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fbeta-explorer-cardano-org-mainnet-frontend%2Fresponse-time-month.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/beta-explorer-cardano-org-mainnet-frontend\"><img alt=\"1-year response time 269\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fbeta-explorer-cardano-org-mainnet-frontend%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status.beta.explorer.cardano.org/history/beta-explorer-cardano-org-mainnet-frontend\">100.00%</a></summary><a href=\"https://status.beta.explorer.cardano.org/history/beta-explorer-cardano-org-mainnet-frontend\"><img alt=\"All-time uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fbeta-explorer-cardano-org-mainnet-frontend%2Fuptime.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/beta-explorer-cardano-org-mainnet-frontend\"><img alt=\"24-hour uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fbeta-explorer-cardano-org-mainnet-frontend%2Fuptime-day.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/beta-explorer-cardano-org-mainnet-frontend\"><img alt=\"7-day uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fbeta-explorer-cardano-org-mainnet-frontend%2Fuptime-week.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/beta-explorer-cardano-org-mainnet-frontend\"><img alt=\"30-day uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fbeta-explorer-cardano-org-mainnet-frontend%2Fuptime-month.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/beta-explorer-cardano-org-mainnet-frontend\"><img alt=\"1-year uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fbeta-explorer-cardano-org-mainnet-frontend%2Fuptime-year.json\"></a></details>\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/preprod.beta.explorer.cardano.org.ico\" height=\"13\"> [preprod.beta.explorer.cardano.org (preprod frontend)](https://preprod.beta.explorer.cardano.org/) | \ud83d\udfe9 Up | [preprod-beta-explorer-cardano-org-preprod-frontend.yml](https://github.com/cardano-foundation/cf-explorer-status/commits/HEAD/history/preprod-beta-explorer-cardano-org-preprod-frontend.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/preprod-beta-explorer-cardano-org-preprod-frontend/response-time-week.png\" height=\"20\"> 144ms</summary><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-beta-explorer-cardano-org-preprod-frontend\"><img alt=\"Response time 240\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-beta-explorer-cardano-org-preprod-frontend%2Fresponse-time.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-beta-explorer-cardano-org-preprod-frontend\"><img alt=\"24-hour response time 219\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-beta-explorer-cardano-org-preprod-frontend%2Fresponse-time-day.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-beta-explorer-cardano-org-preprod-frontend\"><img alt=\"7-day response time 144\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-beta-explorer-cardano-org-preprod-frontend%2Fresponse-time-week.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-beta-explorer-cardano-org-preprod-frontend\"><img alt=\"30-day response time 211\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-beta-explorer-cardano-org-preprod-frontend%2Fresponse-time-month.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-beta-explorer-cardano-org-preprod-frontend\"><img alt=\"1-year response time 240\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-beta-explorer-cardano-org-preprod-frontend%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status.beta.explorer.cardano.org/history/preprod-beta-explorer-cardano-org-preprod-frontend\">0.00%</a></summary><a href=\"https://status.beta.explorer.cardano.org/history/preprod-beta-explorer-cardano-org-preprod-frontend\"><img alt=\"All-time uptime 68.06%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-beta-explorer-cardano-org-preprod-frontend%2Fuptime.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-beta-explorer-cardano-org-preprod-frontend\"><img alt=\"24-hour uptime 0.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-beta-explorer-cardano-org-preprod-frontend%2Fuptime-day.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-beta-explorer-cardano-org-preprod-frontend\"><img alt=\"7-day uptime 0.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-beta-explorer-cardano-org-preprod-frontend%2Fuptime-week.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-beta-explorer-cardano-org-preprod-frontend\"><img alt=\"30-day uptime 4.67%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-beta-explorer-cardano-org-preprod-frontend%2Fuptime-month.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-beta-explorer-cardano-org-preprod-frontend\"><img alt=\"1-year uptime 68.06%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-beta-explorer-cardano-org-preprod-frontend%2Fuptime-year.json\"></a></details>\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/preview.beta.explorer.cardano.org.ico\" height=\"13\"> [preview.beta.explorer.cardano.org (preview frontend)](https://preview.beta.explorer.cardano.org/) | \ud83d\udfe9 Up | [preview-beta-explorer-cardano-org-preview-frontend.yml](https://github.com/cardano-foundation/cf-explorer-status/commits/HEAD/history/preview-beta-explorer-cardano-org-preview-frontend.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/preview-beta-explorer-cardano-org-preview-frontend/response-time-week.png\" height=\"20\"> 281ms</summary><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-beta-explorer-cardano-org-preview-frontend\"><img alt=\"Response time 299\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-beta-explorer-cardano-org-preview-frontend%2Fresponse-time.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-beta-explorer-cardano-org-preview-frontend\"><img alt=\"24-hour response time 180\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-beta-explorer-cardano-org-preview-frontend%2Fresponse-time-day.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-beta-explorer-cardano-org-preview-frontend\"><img alt=\"7-day response time 281\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-beta-explorer-cardano-org-preview-frontend%2Fresponse-time-week.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-beta-explorer-cardano-org-preview-frontend\"><img alt=\"30-day response time 251\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-beta-explorer-cardano-org-preview-frontend%2Fresponse-time-month.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-beta-explorer-cardano-org-preview-frontend\"><img alt=\"1-year response time 299\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-beta-explorer-cardano-org-preview-frontend%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status.beta.explorer.cardano.org/history/preview-beta-explorer-cardano-org-preview-frontend\">100.00%</a></summary><a href=\"https://status.beta.explorer.cardano.org/history/preview-beta-explorer-cardano-org-preview-frontend\"><img alt=\"All-time uptime 98.37%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-beta-explorer-cardano-org-preview-frontend%2Fuptime.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-beta-explorer-cardano-org-preview-frontend\"><img alt=\"24-hour uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-beta-explorer-cardano-org-preview-frontend%2Fuptime-day.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-beta-explorer-cardano-org-preview-frontend\"><img alt=\"7-day uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-beta-explorer-cardano-org-preview-frontend%2Fuptime-week.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-beta-explorer-cardano-org-preview-frontend\"><img alt=\"30-day uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-beta-explorer-cardano-org-preview-frontend%2Fuptime-month.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-beta-explorer-cardano-org-preview-frontend\"><img alt=\"1-year uptime 98.37%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-beta-explorer-cardano-org-preview-frontend%2Fuptime-year.json\"></a></details>\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/api.beta.explorer.cardano.org.ico\" height=\"13\"> [mainnet - API](https://api.beta.explorer.cardano.org/api/v1/epochs) | \ud83d\udfe9 Up | [mainnet-api.yml](https://github.com/cardano-foundation/cf-explorer-status/commits/HEAD/history/mainnet-api.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/mainnet-api/response-time-week.png\" height=\"20\"> 312ms</summary><br><a href=\"https://status.beta.explorer.cardano.org/history/mainnet-api\"><img alt=\"Response time 325\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fmainnet-api%2Fresponse-time.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/mainnet-api\"><img alt=\"24-hour response time 261\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fmainnet-api%2Fresponse-time-day.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/mainnet-api\"><img alt=\"7-day response time 312\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fmainnet-api%2Fresponse-time-week.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/mainnet-api\"><img alt=\"30-day response time 316\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fmainnet-api%2Fresponse-time-month.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/mainnet-api\"><img alt=\"1-year response time 325\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fmainnet-api%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status.beta.explorer.cardano.org/history/mainnet-api\">44.37%</a></summary><a href=\"https://status.beta.explorer.cardano.org/history/mainnet-api\"><img alt=\"All-time uptime 97.56%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fmainnet-api%2Fuptime.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/mainnet-api\"><img alt=\"24-hour uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fmainnet-api%2Fuptime-day.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/mainnet-api\"><img alt=\"7-day uptime 44.37%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fmainnet-api%2Fuptime-week.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/mainnet-api\"><img alt=\"30-day uptime 83.87%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fmainnet-api%2Fuptime-month.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/mainnet-api\"><img alt=\"1-year uptime 97.56%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fmainnet-api%2Fuptime-year.json\"></a></details>\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/auth-api.pro.cf-explorer-mainnet.eu-west-1.beta.explorer.cardano.org.ico\" height=\"13\"> [mainnet - Auth API](https://auth-api.pro.cf-explorer-mainnet.eu-west-1.beta.explorer.cardano.org/api/v1/user/info) | \ud83d\udfe9 Up | [mainnet-auth-api.yml](https://github.com/cardano-foundation/cf-explorer-status/commits/HEAD/history/mainnet-auth-api.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/mainnet-auth-api/response-time-week.png\" height=\"20\"> 393ms</summary><br><a href=\"https://status.beta.explorer.cardano.org/history/mainnet-auth-api\"><img alt=\"Response time 519\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fmainnet-auth-api%2Fresponse-time.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/mainnet-auth-api\"><img alt=\"24-hour response time 511\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fmainnet-auth-api%2Fresponse-time-day.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/mainnet-auth-api\"><img alt=\"7-day response time 393\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fmainnet-auth-api%2Fresponse-time-week.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/mainnet-auth-api\"><img alt=\"30-day response time 490\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fmainnet-auth-api%2Fresponse-time-month.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/mainnet-auth-api\"><img alt=\"1-year response time 519\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fmainnet-auth-api%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status.beta.explorer.cardano.org/history/mainnet-auth-api\">100.00%</a></summary><a href=\"https://status.beta.explorer.cardano.org/history/mainnet-auth-api\"><img alt=\"All-time uptime 99.59%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fmainnet-auth-api%2Fuptime.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/mainnet-auth-api\"><img alt=\"24-hour uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fmainnet-auth-api%2Fuptime-day.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/mainnet-auth-api\"><img alt=\"7-day uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fmainnet-auth-api%2Fuptime-week.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/mainnet-auth-api\"><img alt=\"30-day uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fmainnet-auth-api%2Fuptime-month.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/mainnet-auth-api\"><img alt=\"1-year uptime 99.59%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fmainnet-auth-api%2Fuptime-year.json\"></a></details>\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/api.preprod.beta.explorer.cardano.org.ico\" height=\"13\"> [preprod - API](https://api.preprod.beta.explorer.cardano.org/api/v1/epochs) | \ud83d\udfe9 Up | [preprod-api.yml](https://github.com/cardano-foundation/cf-explorer-status/commits/HEAD/history/preprod-api.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/preprod-api/response-time-week.png\" height=\"20\"> 190ms</summary><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-api\"><img alt=\"Response time 334\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-api%2Fresponse-time.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-api\"><img alt=\"24-hour response time 277\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-api%2Fresponse-time-day.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-api\"><img alt=\"7-day response time 190\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-api%2Fresponse-time-week.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-api\"><img alt=\"30-day response time 294\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-api%2Fresponse-time-month.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-api\"><img alt=\"1-year response time 334\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-api%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status.beta.explorer.cardano.org/history/preprod-api\">100.00%</a></summary><a href=\"https://status.beta.explorer.cardano.org/history/preprod-api\"><img alt=\"All-time uptime 98.55%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-api%2Fuptime.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-api\"><img alt=\"24-hour uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-api%2Fuptime-day.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-api\"><img alt=\"7-day uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-api%2Fuptime-week.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-api\"><img alt=\"30-day uptime 99.99%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-api%2Fuptime-month.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-api\"><img alt=\"1-year uptime 98.55%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-api%2Fuptime-year.json\"></a></details>\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/auth-api.pro.cf-explorer-preprod.eu-west-1.beta.explorer.cardano.org.ico\" height=\"13\"> [preprod - Auth API](https://auth-api.pro.cf-explorer-preprod.eu-west-1.beta.explorer.cardano.org/api/v1/user/info) | \ud83d\udfe9 Up | [preprod-auth-api.yml](https://github.com/cardano-foundation/cf-explorer-status/commits/HEAD/history/preprod-auth-api.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/preprod-auth-api/response-time-week.png\" height=\"20\"> 410ms</summary><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-auth-api\"><img alt=\"Response time 503\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-auth-api%2Fresponse-time.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-auth-api\"><img alt=\"24-hour response time 338\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-auth-api%2Fresponse-time-day.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-auth-api\"><img alt=\"7-day response time 410\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-auth-api%2Fresponse-time-week.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-auth-api\"><img alt=\"30-day response time 457\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-auth-api%2Fresponse-time-month.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-auth-api\"><img alt=\"1-year response time 503\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-auth-api%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status.beta.explorer.cardano.org/history/preprod-auth-api\">100.00%</a></summary><a href=\"https://status.beta.explorer.cardano.org/history/preprod-auth-api\"><img alt=\"All-time uptime 99.96%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-auth-api%2Fuptime.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-auth-api\"><img alt=\"24-hour uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-auth-api%2Fuptime-day.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-auth-api\"><img alt=\"7-day uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-auth-api%2Fuptime-week.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-auth-api\"><img alt=\"30-day uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-auth-api%2Fuptime-month.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preprod-auth-api\"><img alt=\"1-year uptime 99.96%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreprod-auth-api%2Fuptime-year.json\"></a></details>\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/api.preview.beta.explorer.cardano.org.ico\" height=\"13\"> [preview - API](https://api.preview.beta.explorer.cardano.org/api/v1/epochs) | \ud83d\udfe9 Up | [preview-api.yml](https://github.com/cardano-foundation/cf-explorer-status/commits/HEAD/history/preview-api.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/preview-api/response-time-week.png\" height=\"20\"> 226ms</summary><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-api\"><img alt=\"Response time 397\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-api%2Fresponse-time.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-api\"><img alt=\"24-hour response time 71\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-api%2Fresponse-time-day.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-api\"><img alt=\"7-day response time 226\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-api%2Fresponse-time-week.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-api\"><img alt=\"30-day response time 300\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-api%2Fresponse-time-month.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-api\"><img alt=\"1-year response time 397\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-api%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status.beta.explorer.cardano.org/history/preview-api\">99.95%</a></summary><a href=\"https://status.beta.explorer.cardano.org/history/preview-api\"><img alt=\"All-time uptime 96.49%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-api%2Fuptime.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-api\"><img alt=\"24-hour uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-api%2Fuptime-day.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-api\"><img alt=\"7-day uptime 99.95%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-api%2Fuptime-week.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-api\"><img alt=\"30-day uptime 99.96%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-api%2Fuptime-month.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-api\"><img alt=\"1-year uptime 96.49%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-api%2Fuptime-year.json\"></a></details>\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/auth-api.pro.cf-explorer-preview.eu-west-1.beta.explorer.cardano.org.ico\" height=\"13\"> [preview - Auth API](https://auth-api.pro.cf-explorer-preview.eu-west-1.beta.explorer.cardano.org/api/v1/user/info) | \ud83d\udfe9 Up | [preview-auth-api.yml](https://github.com/cardano-foundation/cf-explorer-status/commits/HEAD/history/preview-auth-api.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/preview-auth-api/response-time-week.png\" height=\"20\"> 382ms</summary><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-auth-api\"><img alt=\"Response time 773\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-auth-api%2Fresponse-time.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-auth-api\"><img alt=\"24-hour response time 389\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-auth-api%2Fresponse-time-day.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-auth-api\"><img alt=\"7-day response time 382\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-auth-api%2Fresponse-time-week.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-auth-api\"><img alt=\"30-day response time 455\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-auth-api%2Fresponse-time-month.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-auth-api\"><img alt=\"1-year response time 773\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-auth-api%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status.beta.explorer.cardano.org/history/preview-auth-api\">100.00%</a></summary><a href=\"https://status.beta.explorer.cardano.org/history/preview-auth-api\"><img alt=\"All-time uptime 99.80%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-auth-api%2Fuptime.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-auth-api\"><img alt=\"24-hour uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-auth-api%2Fuptime-day.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-auth-api\"><img alt=\"7-day uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-auth-api%2Fuptime-week.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-auth-api\"><img alt=\"30-day uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-auth-api%2Fuptime-month.json\"></a><br><a href=\"https://status.beta.explorer.cardano.org/history/preview-auth-api\"><img alt=\"1-year uptime 99.80%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-explorer-status%2FHEAD%2Fapi%2Fpreview-auth-api%2Fuptime-year.json\"></a></details>\n\n<!--end: status pages-->\n\n## \ud83d\udcc4 License\n\n- Powered by: [Upptime](https://github.com/upptime/upptime)\n- Data in the `./history` directory: [Open Database License](https://opendatacommons.org/licenses/odbl/1-0/)\n", "release_dates": []}, {"name": "cf-flat-decoder-ts", "description": "This package aims to offer a simple and fast method for decoding flat binary-encoded data using TypeScript and plain JavaScript, suitable for both node.js and browser", "language": "TypeScript", "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "readme": "# Typescript Flat Decoder\n\n<p align=\"left\">\n<img alt=\"Tests\" src=\"https://github.com/cardano-foundation/cf-flat-decoder-ts/actions/workflows/test.yml/badge.svg?branch=main\" />\n<img alt=\"Coverage\" src=\"https://cardano-foundation.github.io/cf-flat-decoder-ts/coverage-report/coverage-jest%20coverage.svg\" />\n<img alt=\"Release\" src=\"https://github.com/cardano-foundation/cf-flat-decoder-ts/actions/workflows/release.yml/badge.svg?branch=main\" />\n<img alt=\"Publish\" src=\"https://github.com/cardano-foundation/cf-flat-decoder-ts/actions/workflows/publish.yml/badge.svg?branch=main\" />\n<img alt=\"Bundle\" src=\"https://github.com/cardano-foundation/cf-flat-decoder-ts/actions/workflows/bundle.yml/badge.svg?branch=main\" />\n<a href=\"https://conventionalcommits.org\"><img alt=\"conventionalcommits\" src=\"https://img.shields.io/badge/Conventional%20Commits-1.0.0-%23FE5196?logo=conventionalcommits\" /></a>\n<a href=\"https://discord.gg/4WVNHgQ7bP\"><img alt=\"Discord\" src=\"https://img.shields.io/discord/1022471509173882950\"></a>\n</p>\n\nThis project aims to provide a [flat binary](https://github.com/Quid2/flat) decoder. It is written in Typescript and can be used in both NodeJS and the browser.\n\n## Getting Started\n\n```\nnpm i @cardano-foundation/cf-flat-decoder-ts\n```\n\n## Usage\n\nYou can use the decoder in node backend but also in the browser. This example shows how to use it in a React app.\n\n```typescript\nimport { useState } from 'react';\nimport { decodeFlatUplc, Term } from '@cardano-foundation/cf-flat-decoder-ts';\n\nfunction App() {\n  const [deserializeContract, setDeserializeContract] = useState(\n    '59050c010000333323232323232323232323232323232323232323232323222232222533301a3375e0049801018000132323232533301e323001222222333301b232333322323232533302c3370e9000001080d8a99981619b87480100084c068c0b80044cc8cc0748c888c00800cc0c8004dd48009bae302e001004302f00230240013754004605260500020064a66605066e1ccc070014dd59815001240042602c6eb0c8c8c8c8c8c8c8c8c8c8c8c8c8c803d4ccc0d000452616303500653330333370e90000010991919299981b29981419b87001480004cdc3800a40702646493299981b0008a4c2c606e0082c6e34004dd7000981a8008a99981999b87480080084c926533303200114985858c0d8008c0ac004dd500098188009817803299981699b87480000084c8c8c8c8c8c8c9265333032001149858c0cc0194ccc0c4cdc3a400000426464646464646493299981b0008a4c2c606e0066eb4004c0d8004c0d000ccc8c0c4894ccc0d000440c04cc0c4c00cc0dc004c008c0d80048c94ccc0d0cdc39b8d001480e0400858dd70009bac001303300116303400230290013754002605e0022a66605a66e1d20020021324994ccc0b0004526161630300023025001375400260560026eb0004405c4894004c09cc0a4c0a0c09cc0a400401094cc060ccc07d281191800911191980e91999980e9191118010019bab303200137520066eacc0bcc0b8c0c0c0bcc0b8c0c00048cc07c94ccc0bccdc4a40046eb4c0cc0044c010dd718148008a5000114a0006466e212000330200010043232233300100b003002375c0046604a44a666050002201026604a60560026004605400200e6050604e002266603e9408c8cdc49bad302a3029001333026222533302a00110021330033370000490011816000a4000664604e44a666054002204c264a66605860080022660500026006605a00426006605a004605a00266444660060020044604e44a666054002294054ccc0accdd798168008018a5113002302c00100637586054002605400260500022940c8c8c8c8c88cccccc00401801401000c038008dd59812181198118029bac30230043758604400a6eb0c084014dd598100010a4c2c64603e6036002603c0026032603a0026038002603a6038603a002266666030444a666038002244a0022a66603a6004603e002264446004006603e002266006004603c00246466ebc00401cc8c078c07c004c8c078c07c004c074c070c078004c8dd6180e980f000980e180e800924c2c6eb8008888c00800c894004888cc044894ccc050004489400454ccc054cdd79807980b80080209802980b80089801180b000800918071129998088008a5015330043003301400113002301300123300f00100214a2446666660060100246ea40080048ccc01c88cdc01bad301500200148000dd58008a40004444666600a6600c0080040024644460040066008002244a0024601244a666018002244a0022666006601e002444600400626004601c002444a66601866ebc008c00c004488c00800c489400488c020894ccc02c004400c4cc010c038004c008c034004888c8c8c94ccc034cdc3a4004004200c2600a601e0026020004600a0026ea800555cea5eb815d0118029802800919180111980100100091801119801001000aab9f5734ae895d0918011baa0015573c9810100004c011e581c9cae3d41ae05882f5f357f0042d71842f1cc8a8e5230411ddb4daf17004c0122d87a9f581cca925263da4c59bf675f3cc485c894575cfe9b2b50ae5c3a360a62cdff0001'\n  );\n  const [uplc, setUplc] = useState('');\n\n  const handleGetUplc = () => {\n    const uplc = decodeFlatUplc(deserializeContract);\n    setUplc(uplc);\n    Term.indent = 5; //Reset indent\n  };\n\n  return (\n    <>\n      <h1>Flat decoder</h1>\n      <div>\n        <input\n          value={deserializeContract}\n          onChange={(e) => {\n            setDeserializeContract(e.target.value);\n          }}\n        />\n        <button onClick={handleGetUplc}>Get uplc</button>\n      </div>\n      <div\n        style={{ margin: '10px 0', padding: 10, whiteSpace: 'nowrap' }}\n        dangerouslySetInnerHTML={{ __html: uplc }}\n      ></div>\n    </>\n  );\n}\n\nexport default App;\n```\n", "release_dates": ["2024-01-29T10:18:19Z", "2024-01-11T19:41:38Z"]}, {"name": "cf-georgian-wine-resolver", "description": null, "language": "TypeScript", "license": null, "readme": "## Georgian Wine Verification How-To\nThis document describes the verification process for verifiable on-chain records created in the Bolnisi Georgian Wine pilot program.\nFor the pilot, bottles produced by 20 wineries in the Bolnisi region of Georgia will have QR codes attached that link to web pages hosted by our partner, [Scantrust](https://www.scantrust.com/).\nScantrust provide a track and trace solution with anti-counterfeit QR codes.\n\nUpon scanning a QR code, you will be presented with:\n- a series of Supply Chain Management data points,\n- a transaction ID (`Supply Chain Data Txid`) and batch information (`Supply Chain Data Batch Info`)\n\nThe transaction published on-chain serves verification information for bottles of wine produced in the Bolnisi region of Georgia - the metadata label is 1904.\nThe 1904 metadata label documentation describes some concepts such as key rotation - this is for future proofing reasons and not relevant to this pilot phase, so please consider this documentation as more accurate to the actual process and not the wider specification.\n\n**Note!** The rest of this document will describe how you can verify this yourself, but we have provided a sample TypeScript project to help - check it out [here](./verification-scripts/).\nThe README of this project will also step through an example which may make some of this document more clear!\n\n## Verification data\nData in our system is in general both signed and hashed, and this verification data is added to a transaction as metadata.\nThe data itself is stored off-chain in JSON format.\n\nBefore performing any operations on the data (or storing it!), the data must be canonicalized using the [JSON Canonicalization Scheme](https://www.rfc-editor.org/rfc/rfc8785) (JCS - RFC 8785).\nThis makes verification safer in case the JSON gets re-arranged by other applications as it is parsed.\n\n### Signing\nData is signed as a [JSON Web Signature](https://datatracker.ietf.org/doc/html/rfc7515) (JWS - RFC 7575). \nThe public key is embedded directly in the transaction metadata as a raw byte stream.\nMore details on how to verify the public key later.\n\n### Hashing\nBy default, we use blake2b-256 to hash data but actually other algorithms may be used as we represent all hashes on-chain as [Content Identifiers](https://github.com/multiformats/cid) (CID).\nThis is a self-describing hash used by [IPFS](https://ipfs.tech/) that removes the ambiguity of both the hash encoding and hash algorithm.\n\n### Off-chain data\nAs mentioned, the data itself is stored off-chain and may be resolved using the deployed resolver which accepts the CID/hash as input.\nThe current list of resolver APIs is available [here](./apis/OFFCHAIN) - simply replace `{cid}` with the intended CID (more details later!).\nThe resolver will return a pre-signed URL to the off-chain object store, and at this URL you will find all of the necessary data.\n\n#### Batching\nTo save on on-chain costs, data is batched periodically.\nThe entire batch is hashed to a single CID (always!), so every transaction will only contain a single CID.\nSince there may be multiple keys involved in signing a batch, each transaction will contain as many signatures as there are items in the batch and must be individually verified.\nThe \u201cbatch info\u201d on Scantrust is used to decide which item must be extracted from the batch to verify for that particular bottle of wine.\n\n## Supply Chain Management (SCM) data\nAs part of this project, we have collected supply chain information directly from the producers themselves.\nAll of the supply chain data points you see on Scantrust (i.e. Varietal Name, Fermentation Vessel) have also been converted into a verifiable record on-chain.\n\nEvery bottle belongs to a \u201clot\u201d of wine, so every bottle with the same lot number will have the same SCM data and SCM transaction ID.\nThe data here is considered proof of origin data.\n\n### Batching\nEach winery in our system has a unique identifier (hex-based, beginning at 1).\nSince a batch of SCM objects may be come from various wineries, we use the following format for off-chain data:\n```\n{\n \u201c4527\u201d: [{...}, {...}, {...}],\n \u201c913a\u201d: [{...}, {...}]\n}\n```\n\nEach winery ID maps to an array, and each item in the array is an object of SCM data for a singular lot.\nIn the above example, there are 2 wineries: winery 4527 has 3 lots in this batch, and winery 913a has 2.\n\nThe batch information follows the format of \u201c<wineryId>#<indexInArray>\u201d - e.g. \u201c4527#1\u201d - zero-indexed, of course.\n\n### Signing\nData is signed by Ed25519 key pairs belonging to each winery.\nSignatures are stored on-chain within the `d` field and the format matches the off-chain data.\n\nHere, each winery ID maps to an object containing the public key byte-stream `pk`, the JSON Web Signature (JCS) header - `h`, and an array of JCS detached-signatures - `s``.\nThe header in this case only contains the key type which is why it is commonly extracted from each signature to save on space.\n\n```\n{\n  \"1904\": {\n    \"t\": \"scm\",\n    \"st\": \"georgianWine\",\n    \"v\": \"1\",\n    \"cid\": \"X\",\n    \"d\": {\n      \"4527\": {\n        \"pk\": <pubKeyBytes>,\n        \"h\": <headerBytes>,\n        \"s\": [<sig1Bytes>, <sig2Bytes>, <sig3Bytes>]\n\t    },\n      \"913a\": {\n        \"pk\": <pubKeyBytes>,\n        \"h\": <headerBytes>,\n        \"s\": [<sig1Bytes>, <sig2Bytes>]\n      }\n    }\n  }\n}\n```\nThe batch information of `4527#1` maps to `<sig2Bytes>` here.\n\n## Verification process\nFirstly, you must retrieve the transaction ID from the bottle you have just scanned on Scantrust.\nUsing an explorer or chain indexer, read the metadata of the given transaction.\n\n### The Content Identifier\n1. Retrieve the CID from the transaction metadata (`cid` field).\n2. Retrieve the off-chain data by putting the CID from the transaction metadata into the resolver URL.\n3. Resolve the returned pre-signed URL and the JSON will be returned.\n4. Determine the hashing algorithm, codec and encoding from the CID.\n    1. By default this will be blake2b-256, raw and base58btc.\n5. Canonicalise the off-chain data using the JCS algorithm. (It should already be canonicalised from the API though!)\n6. Hash the entire off-chain JSON using the hashing algorithm.\n7. Calculate the CID using your favourite programming language with a CID package - we are using [this Java package](https://github.com/ipld/java-cid) in our backend.\n    1. Check out our [sample in TypeScript](./verification-scripts/).\n8. Verify that the CIDs match!\n\n### The signature\n1. Retrieve the batch info from Scantrust.\n2. Use the batch info to extract the correct JSON object from the off-chain data obtained in the previous section (post-canonicalisation).\n3. Use the batch info to extract the correct public key (`pk`), JWS header (`h`) and JWS detached signature (item in `s`, depends on the batch info) from the on-chain metadata.\n4. Use an API endpoint listed [here](./apis/PUBLIC_KEYS) to retrieve the relevant public key bytes.\n    1. You must extract the winery ID from the batch info (everything before the # symbol).\n5. Verify that the public key embedded in the transaction metadata is the same as the public key returned by the API.\n    1. If it\u2019s not, then the transaction is not valid!\n    2. **Hint:** Each of these values is a byte-stream in the metadata, but if you are viewing this on an explorer in your browser, it is probably represented in hex encoding.\n6. Convert the public key, JWS header and JWS detached signature to base64url encoding.\n    1. Base64url is the standard format for JSON Web Signatures so most libraries will expect this format, but the direct bytes may work.\n7. Verify the signature using a JWS or JOSE package in your language of choice - [example Java package](https://mvnrepository.com/artifact/com.nimbusds/nimbus-jose-jwt).\n    1. Once again... check out our [sample in TypeScript](./verification-scripts/).\n", "release_dates": []}, {"name": "cf-gsoc-ideas-page-2024", "description": "Our project ideas page for the GSoC'24", "language": null, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "readme": "# Google Summer of Code 2024 Ideas \ud83c\udf89\n\nThis page showcases project ideas that align seamlessly with our Roadmap and are an ideal fit for GSOC '24. We aim to offer valuable insights into the necessary skillset and prerequisites, along with expectations for learning throughout the project. In addition to providing a project name and a concise descriptive abstract, we've included an assessment of general difficulty (assuming you meet the requirements) and project size. You will find the project list below. The sections represent the project titles, and the subsections are structured as follows:\n\n| Subsection                            | Meaning                 | Values                                |\n|---------------------------------------|-------------------------|---------------------------------------|\n| Your Mission                          | Brief Overview             | `Free-form text` including `expected outcomes`                   |\n| Skills required                       | Things you already know | `List of skills and technologies`     |\n| You'll know those things after summer | Things you will learn   |  `List of skills and technologies`    |\n| Difficulty                            | Difficulty ranges from a significant workload but straightforward implementation (Easy) to a research-oriented task with an unpredictable outcome (Challenging) | `Easy, Intermediate or Hard` |\n| Size                                  | The size of the project, measured by the estimated hours required for completion | `90 hours, 175 hours or 350 hours` |\n| Possible Mentors                      | Your mentor will guide and support you through this project | `List of names` |\n\nFor example, some projects may involve research tasks resulting in a small but significant output, categorized as both `Hard` in Difficulty and `350 hours` in Size. On the other hand, there might be projects with a well-defined vision, but requires a lot of time for implementation and testing, falling also into `350 hours` Size category but with an `Easy` difficulty level. In essence, Difficulty reflects the time spent for thinking, while Size corresponds to the overall time estimate for project completion.\n\n## \ud83d\udc49 Untyped Plutus Core Viewer, AKA Understandable Decompiled Smart Contracts\n\n### \ud83d\udea3 Your Mission\n\nUPLC (Untyped Plutus Core) is executed on-chain and serves as the foundational layer for Cardano smart contracts. High-level languages like Aiken or Helios compile to UPLC. While it's possible to decode the binary (flat) encoded UPLC contract into its text representation, the resulting tree structure is not particularly readable. The objective of this project is to discover a more user-friendly representation of the decoded structure. We welcome rule-based or machine learning solutions that not only transform the binary form into text but also render it in a readable format, making it accessible for e.g. TypeScript developers to comprehend the actual functionality of a contract. \n\n#### \ud83d\udce6 Expected Outcomes\n\nWe would like you to implement the viewer within a standalone React (Vite.js) app and also export the viewer component itself as a reusable component to npm. This allows other applications within the Cardano ecosystem to utilize its features.\n\n<img src=\"https://github.com/cardano-foundation/cf-gsoc-ideas-page-2024/assets/1525818/37084b72-2340-4a58-82e6-da34870fed37\" height=\"360\">\n\n**Source: https://aiken-lang.org/uplc**\n\n### \ud83c\udfc4 Skills required\n\nTypescript, React.js, General understanding of Compliers and Decompliers\n\n### \ud83d\udc0b You'll know those things after summer\n\nCardano Smart Contracts, Plutus Core, Aiken\n\n### \ud83c\udfcb\ufe0f Difficulty\n\nIntermediate\n\n### \ud83d\udc55 Size\n\n175 hours\n\n### \ud83c\udf93 Possible Mentors\n\nFabian Bormann, Satya Ranjan\n\n## \ud83d\udc49 Cardano Peer Connect (CIP-0045) Improvements\n\n### \ud83d\udea3 Your Mission\n\n[CIP-0045](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0045) introduces a method for setting up a peer-to-peer communication between two browser windows on different devices, eliminating the need for a central signaling server to exchange their IP addresses. This technique allows for the injection of an API (CIP-0030) from one browser (a wallet) to another (a DApp), enabling seamless and lightweight mobile support. To resolve their deep IPs behind different NATs, this approach uses a list of public WebTorrent trackers for peer discovery. However, in many scenarios, when the user is on a mobile device and aims to connect a wallet to a DApp in a browser on the same device, or in another situation where the user is on the same local network and wants to link the wallet on a phone to a DApp on the PC, the use of a torrent tracker becomes unnecessary due to the absence of NAT involvement. Furthermore, there's currently a bit of a hassle in switching between a browser-based wallet and a website, for instance, to sign a message. \n\n#### \ud83d\udce6 Expected Outcomes\n\nThe mission of this project would be to investigate both topics: situation-dependent peer discovery and enhanced usability. You can explore a demo setup in the open-source repository [available here](https://github.com/fabianbormann/cip-0045-demo-implementation). At the end of this project you should have implemented the new (local) peer discover method and the enhanced usabulity features (intents, nofitfications, ...) into [this repository](https://github.com/fabianbormann/cardano-peer-connect).\n\n### \ud83c\udfc4 Skills required\n\nTypescript, React.js, Ionic, Node.js\n\n### \ud83d\udc0b You'll know those things after summer\n\nWebTorrent, CIP-0030 (Cardano dApp-Wallet Web Bridge), Firebase Cloud Messaging SDK\n\n### \ud83c\udfcb\ufe0f Difficulty\n\nHard\n\n### \ud83d\udc55 Size\n\n175 hours\n\n### \ud83c\udf93 Possible Mentors\n\nFabian Bormann, Jaime Caso\n\n## \ud83d\udc49 Smart Contract Classificator\n\n### \ud83d\udea3 Your Mission\n\nAt the moment, figuring out the purpose of a smart contract on Cardano only based on hashes and binary data is quite challenging. However, there are always identifiable patterns. Have you ever wondered how many smart contracts are actually being utilized for financial purposes? Is Cardano positioning itself as the go-to blockchain for gaming? What about smart contracts in supply chain scenarios, voting mechanisms, or even for distributing art and music? The truth is, no one really knows... yet.\n\nThis mission involves developing a smart contract classifier using a combination of machine learning, statistics, and various conditions. From Convolutional Networks to Gradient Boosting Decision Trees, and even manual feature engineering \u2013 everything is on the table. The goal is to design an algorithm capable of taking a smart contract transaction and providing probabilities for different use-case labels.\n\nWhether it's addresses, reference scripts, or reference datums, we are confident that you'll create a tool that can answer the questions mentioned above. To support you in this venture, we'll assign you a mentor with previous experience as a machine learning engineer. This mentor will provide you with ground truth data, guide you on how to find it, and offer deeper insights into the world of Cardano. Towards the end of this journey, our plan is to apply your algorithm to all the on-chain contracts to create a meaningful report.\n\n### \ud83c\udfc4 Skills required\n\nPython, Scala, Statstics, Machine Learning (basics), Smart Contracts under Cardano (beginner level)\n\n### \ud83d\udc0b You'll know those things after summer\n\nClassification algorithms, Data Science, Cardano Smart Contracts, deep insights in how Cardano actually works\n\n### \ud83c\udfcb\ufe0f Difficulty\n\nHard \n\n### \ud83d\udc55 Size\n\n350 hours\n\n### \ud83c\udf93 Possible Mentors\n\nSatya Ranjan, Thomas Kammerlocher, Giovanni Gargiulo\n\n## \ud83d\udc49 Enhanced Cardano Asset API Service\n\n### \ud83d\udea3 Your Mission\n\nYour challenge is to elevate the utility of the Cardano testnet by developing a versatile API service. This service will automate the minting and distribution of a diverse range of Cardano blockchain assets, including NFTs and native tokens, to specified payment addresses. This project is a significant step beyond the current capabilities of the [**Cardano faucet**](https://docs.cardano.org/cardano-testnet/tools/faucet/), which is limited to dispensing Ada. By integrating various asset types defined in the Cardano Improvement Proposals (CIPs), such as [CIP-25](https://cips.cardano.org/cip/CIP-0025) (Media Token Metadata Standard) and [CIP-54](https://cips.cardano.org/cip/CIP-0054) (Cardano Smart NFTs), you will be creating a tool that is indispensable for developers. This API will serve as a critical resource, providing them with a variety of test assets to enhance the development, testing, and optimization of wallets, blockchain explorers, and other applications/dApps. Your work will play a pivotal role in simulating real-world asset handling, crucial for the rigorous testing and preparation of applications before their deployment in production environments.\n\n#### \ud83d\udce6 Expected Outcomes\n\nThe project's output will be a fully functional API service capable of handling multiple asset types, requiring significant coding and testing.\n\n### \ud83c\udfc4 Skills Required\n\n- Proficiency in Javascript(recommended) or Java, for minting assets.\n- Experience with RESTful API development.\n- Familiarity with blockchain technology, specifically Cardano's ecosystem. \n- Understanding of Cardano's native tokens and NFTs as per CIPs (like CIP-25, CIP-54, CIP-27, CIP-60, CIP-68).\n\n### \ud83d\udc0b You'll Know Those Things After Summer\n\nIn-depth knowledge of Cardano's blockchain and asset standards\nExperience in developing and deploying scalable blockchain APIs\nExpertise in integrating diverse blockchain assets into applications\n\n### \ud83c\udfcb\ufe0f Difficulty\n\nIntermediate \u2013 This project involves not only the technical aspects of API development and blockchain integration but also requires a deep understanding of the Cardano blockchain's native asset standards.\n\n### \ud83d\udc55 Size\n\n350 hours\n\n### \ud83c\udf93 Possible Mentors\n\nJaime Caso\n\n### \ud83c\udf0d Importance of Testnets in Blockchain Development\n\nThe importance of testnets in blockchain development cannot be overstated. Testnets provide a sandbox environment where developers can experiment and test their applications without risking real funds or impacting the main blockchain. They are crucial for:\n\n- Ensuring the security and stability of new features before they are deployed on the mainnet.\n- Allowing developers to test the integration of different asset types and ensure compatibility with various wallet and explorer applications.\n- Facilitating the development and testing of smart contracts under real-world conditions without the associated risks.\n  \nThis challenge, therefore, not only enhances the capabilities of the Cardano testnet environment but also significantly contributes to the broader development ecosystem, enabling developers to build more robust, diverse, and secure applications on the Cardano blockchain.\n\n## \ud83d\udc49 DApp End-2-End Testing Framework\n\n### \ud83d\udea3 Your Mission\n\nA decentralized App (dApp) mainly consists of a frontend application that has the feature to connect itself to a wallet, but at the same time, it interacts with the blockchain. Although many Cardano dApps can utilize frameworks like Playwright or Cypress to test their click flow or business logic using mock data, testing end-to-end functionality is currently not as straightforward. The use of a public testnet in a continuous integration (CI) pipeline necessitates the dApp to maintain a test wallet with sufficient tADA or native test tokens, ensuring consistent preconditions for each run. Testing edge cases would not be that easy, as they often involve a complex set of requirements that developers must create and maintain on the public testnet.\n\n#### \ud83d\udce6 Expected Outcomes\n\nWith yaci-devkit, we have a local testnet that developers can easily set up on a local machine or in a CI pipeline. Given our close collaboration with wallet providers in the ecosystem, your primary objective for this project will be to create and implement an architecture that seamlessly integrates a local testnet (devnet) into wallets, providing a developer-friendly experience for wallet providers and developers. Ideally, this should involve a test container with a pre-configured wallet plugin on a headless Chromium browser, along with Yaci-devkit, which expects a configuration file for managing top-ups and \"genesis\" amounts in wallets. A library that automates the click-flow for signing, transaction submission, etc., would be a game-changer for Cardano developers worldwide looking to test transactions, minting operations, or even smart contracts within their dApp in their CI pipeline.\n\n### \ud83c\udfc4 Skills Required\n\nTypeScript, Docker, Bash, Cypress or Playwright, GitHub Actions, CICD, Cardano (beginner level)\n\n### \ud83d\udc0b You'll Know Those Things After Summer\n\nCardano fundamentals, such as eUTXO and dApp & Wallet communication, How to provide a test automation framework for an extensive ecosystem\n\n### \ud83c\udfcb\ufe0f Difficulty\n\nHard\n\n### \ud83d\udc55 Size\n\n175 hours\n\n### \ud83c\udf93 Possible Mentors\n\nSatya Ranjan, Thomas Kammerlocher, Giovanni Gargiulo, Fabian Bormann\n\n## \ud83d\udc49 Create a graph-native query layer for Cardano\n\n### \ud83d\udea3 Your Mission\n\nCardano DLT is based on the [eUTxO (Extended Unspent Transaction Output) model][eutxo-model], which in practice, generates an heterogeneous (decentralized) data lake of [un]structured data that is inherently more similar to a graph than to just a transactional ledger of balances, and doing (semantic) searches for relationships between different entities across the huge amounts of data the blockchain users produce, should be much cheaper in terms of computational resources and therefore, usually quicker, [using a graph-native database than a non-native (such as relational ones)][neo4j-native-vs-non-native]; also while crafting the queries to analyse data.\n\nWhile there are currently multiple alternatives to feed Cardano events into relational databases such as `postgres`, message queues such `kafka` or virtually any data store using webhooks, and although some PoCs (using [oura][oura-dgraph-poc] and [yaci][yaci-fluree-poc]) exist to store Cardano events into [dGraph][dgraph] or [Fluree][fluree] graph-native solutions, there is no ready-to-consume API nor queries that makes use of a graph-native database as storage engine. \n\n#### \ud83d\udce6 Expected Outcomes\n\nThe proposed mission would be to come up with an integrated solution that makes possible to query meaningful data for consumers like for example wallets or financial tools. *E.g.*:\n\n* Balances (per address, per stake account, per contract...)\n* Metadata events ([N]FT mints, messages, CIP events...)\n* dApp interations (smart contracts executions, dApp events...)\n* Financial analysis (token distributions, transactions volume...)\n\nGraphs is where [web3][web3], maybe, meets [web3.0][web30]; as both are about linked data.\n\n[eutxo-model]: https://en.wikipedia.org/wiki/Unspent_transaction_output#The_Extended_UTXO_(EUTXO)_Model\n[oura-dgraph-poc]: https://github.com/txpipe/oura/tree/main/testdrive/cardano2dgraph\n[yaci-fluree-poc]: https://github.com/cardano-foundation/cf-ledger-sync/blob/chore/test-streaming-events-to-fluree/streamer-app/README.fluree.md\n[fluree]: https://flur.ee/\n[dgraph]: https://dgraph.io/\n[neo4j]: https://neo4j.com/developer/graph-database/#neo4j-overview\n[neo4j-native-vs-non-native]: https://neo4j.com/blog/native-vs-non-native-graph-technology/\n[web3]: https://en.wikipedia.org/wiki/Web3\n[web30]: https://en.wikipedia.org/wiki/Web_3.0\n\n### \ud83c\udfc4 Skills required\n\n- Proficiency in at least one programming language and scripting language (bash)\n- Experience with RESTful API development\n- General understanding of a graph database (such as [neo4j][neo4j])\n- OCI-compliant containers management\n\n### \ud83d\udc0b You'll know those things after summer\n\nGraph databases fundamentals, at least one graph query language (graphql, sparql, dql...), Cardano entities/events, ETL\n\n### \ud83c\udfcb\ufe0f Difficulty\n\nHard\n\n### \ud83d\udc55 Size\n\n350 hours\n\n### \ud83c\udf93 Possible Mentors\n\nRoberto C. Morano\n", "release_dates": []}, {"name": "cf-identity-wallet", "description": "Identity Wallet is an open source mobile application developed by the Cardano Foundation. It provides a digital solution for users to securely store, manage, and share their identifiers and verifiable credentials.", "language": "TypeScript", "license": {"key": "mpl-2.0", "name": "Mozilla Public License 2.0", "spdx_id": "MPL-2.0", "url": "https://api.github.com/licenses/mpl-2.0", "node_id": "MDc6TGljZW5zZTE0"}, "readme": "<div align=\"center\">\n  <img src=\"src/assets/icon-only.png\" alt=\"Cardano Foundation | Identity Wallet\" height=\"150\" />\n  <hr />\n    <h1 align=\"center\" style=\"border-bottom: none\">Cardano Foundation | Identity Wallet</h1>\n\n![GitHub](https://img.shields.io/github/license/cardano-foundation/cf-identity-wallet)\n![Discord](https://img.shields.io/discord/1022471509173882950)\n\n  <hr/>\n</div> \n\n# Disclaimer\n\n<div align=\"justify\"> \n<b> Please be aware that your access to and use of the Open-Source Identity Wallet, including any content you may encounter, is subject to your own discretion and risk. Currently, the identity wallet is under-development and security audits have yet to be conducted. It is essential to understand, this version of the identity wallet does not currently feature encryption-at-rest, nor does it offer robust recovery or backup solutions. Furthermore, any seed phrase generated during the onboarding process is currently not being utilised. We are in the process of reviewing the ideal key management and social recovery methodologies for development in 2024. </b>\n</div>\n<br>\n<div align=\"center\">   \n <b>   :heavy_exclamation_mark:  The Open-Source Identity Wallet is provided to you on an \"as is\" and \"as available\" basis.  </b>\n</div>\n<br>\n<div align=\"justify\">    \n<b> While we strive for high functionality and user satisfaction and endeavour to maintain reliability and accuracy, unforeseen issues may arise due to the experimental nature of this product. For detailed information on the terms and conditions that govern your use of the Open-Source Identity Wallet, we encourage you to read our Terms of Use. </b>\n</div>\n\n<br>\n\n# Overview\n\n<div align=\"justify\"> \n<b> The Identity Wallet is an open source application developed by the Cardano Foundation.  This project is the result of ongoing research and development pertaining to the principles of Self-Sovereign Identity (SSI), Decentralized Identifiers (DIDs), Self-Certifying Identifiers (SCIs), Verifiable Credentials, Verifiable Data Registries (VDRs) and the standards, frameworks and implementations available within the Cardano ecosystem and externally.  The first release of Identity Wallet provides an open source reference implementation demonstrating W3C Decentralized Identifiers, Verifiable Credentials, and Key Event Receipt Infrastructure (KERI) on Cardano. </b>\n</div>\n\n<br>\n<p align=\"center\">\n  <kbd>\n    <a href=\"https://www.youtube.com/watch?v=YmEJHQksFyE\">\n    <img src=\"docs/images/readme/Introduction-Video-Thumbnail.jpg\" alt=\"Identity Wallet Introduction Video Thumbnail\">\n    </a>\n  </kbd>\n</p>\n\n<div align=\"center\">   \n <b>  Click the image to watch the overview video </b>\n</div>\n\n# Features\n\n| **User Interface**    |  **Secure Storage**  |**Interoperability**   |  **Standards & Protocols** | **Connections & Credential Issuance**  |     **SSI Agents**   |           \n|----------------|---------------|---------------|----------------|---------------|----------------|\n|  Intuitive User Experience |  Hardware Security Module (HSM) or Secure Enclave (SE) securely stores private key material |  [Aries RFCs](https://github.com/hyperledger/aries-rfcs) |  [Verifiable Credentials](https://www.w3.org/TR/vc-data-model/) |  Holder-to-Holder |  [Open Wallet Foundation](https://github.com/openwallet-foundation/agent-framework-javascript)| \n|  Android and iOS support |  Hierarchical Deterministic (HD) Identity Wallet | [W3C](https://www.w3.org/) | [Autonomic Identifier](https://weboftrust.github.io/WOT-terms/docs/glossary/autonomic-identifier) (AID)  |  Issuer-to-Holder |  [KERIA](https://github.com/cardano-foundation/keria) | \n|  | | [DIDComm](https://github.com/decentralized-identity/didcomm-messaging) |  [ACDC](https://wiki.trustoverip.org/display/HOME/ACDC+%28Authentic+Chained+Data+Container%29+Task+Force) |  [Credential Issuance Testing Tool](https://identity-wallet-credential-issuance-web-interface.vercel.app/)  |  [Signify-TS](https://github.com/cardano-foundation/signify-ts) | \n|  | | [KERI on Cardano](https://github.com/cardano-foundation/cardano-backer) | |  | |\n\n# Potential Future Developments\n\n|**App Features**            |  **Identity Recovery**               |     **Identifiers**           |     **Verifiable Credentials**  |    **Communications** |   **Peer-to-Peer (P2P)** |  \n|----------------|---------------|---------------|----------------|----------------|----------------|\n| Bluetooth |  [Shamir Secret Sharing](https://en.wikipedia.org/wiki/Shamir%27s_secret_sharing)|  [did:webs](https://labs.hyperledger.org/labs/didwebs.html#:~:text=did%3Awebs%20extends%20the%20web,%2C%20X509%2C%20and%20certificate%20authorities.) |  [OID4vc](https://openid.net/sg/openid4vc/specifications/)| Messaging | [CIP-45](https://github.com/cardano-foundation/CIPs/pull/395) Support  | \n| Biometrics | On-chain Recovery | [did:keri](https://identity.foundation/keri/did_methods/)  | On-Chain Schemas | Social Recovery |  App Integration |\n| NFC|  Local Encrypted|  | [AnonCreds](https://www.hyperledger.org/projects/anoncreds) | [DIDComm v2](https://identity.foundation/didcomm-messaging/spec/) | | \n|Aries Askar | Cloud-based |  | [Cheqd](https://cheqd.io/) | |  |\n\n\n# Preview in your Browser\n\n**Disclaimer: This preview version is <ins>not intended</ins> to be used for any purposes other than previewing the application.**\n\nTo experience the mobile application within the browser, please select one of the following links below, depending on whether you are accessing the preview version on your desktop or mobile device.\n<br>\n<div align=\"center\"> \n<p><u>\ud83d\udd17  Preview the latest version of the Identity Wallet on your browser \ud83d\udd17 </u></p>\n<br>\n<p><a href=\"https://cf-identity-wallet.vercel.app/?browserPreview\">* On a desktop computer</a></p>\n<br>\n<p><a href=\"https://cf-identity-wallet.vercel.app\">* On a mobile phone</a></p>\n</div>\n\n# Architecture\n<div align=\"center\"> \n  <p>\n    <a href=\"https://raw.githubusercontent.com/cardano-foundation/cf-identity-wallet/main/docs/images/readme/Architecture-Diagram.svg\">\n    <img src=\"docs/images/readme/Architecture-Diagram.svg\" alt=\"Identity Wallet Architecture\">\n    </a>  \n  </p>     \n</div>\n<br>\n\n\n\n# User Flows\nIn this section, you'll find detailed PDF documents outlining the various user flows within our application. These user flows serve as comprehensive guides, illustrating the application's user journeys step-by-step. Please feel free to explore and gain insight into the following user flows:\n\n<div align=\"center\"> \n      <table border=\"0\">\n       <tr>\n          <td><b style=\"font-size:30px\" ><a href=\"https://drive.google.com/file/d/1L7ZdQytjQq_BOXP1AZzHM0OhLxt1xbNA/view?usp=sharing\">Introduction</a></b></td>\n          <td><b style=\"font-size:30px\"><a href=\"https://drive.google.com/file/d/1vB9NoWJG2ok9HB89wlbS0fLbPjLavudl/view?usp=sharing\">Onboarding</a></b></td>\n          <td><b style=\"font-size:30px\"><a href=\"https://drive.google.com/file/d/1NCexApVn-njVFmN6wBPiDN1oX0DzcvSn/view?usp=sharing\">Login</a></b></td>\n          <td><b style=\"font-size:30px\"><a href=\"https://drive.google.com/file/d/1RxkB5zM-xXbh7WcSWu9u1xbBMRDg3q9i/view?usp=sharing\">Identity</a></b></td>\n          <td><b style=\"font-size:30px\"><a href=\"https://drive.google.com/file/d/1bVZPUgKmfPuIOraqDUyMMj_Dz3GGmLG2/view?usp=sharing\">Connections</a></b></td>\n          <td><b style=\"font-size:30px\"><a href=\"https://drive.google.com/file/d/18TfwGaLXSLxuaHjJlbAmkRnFF-2ktrFT/view?usp=sharing\">Credentials</a></b></td>\n          <td><b style=\"font-size:30px\"><a href=\"https://drive.google.com/file/d/1akOEf1GRGvVd4vNcWFNF4KOox5iuXOnv/view?usp=sharing\">Verify Options</a></b></td>\n          <td><b style=\"font-size:30px\"><a href=\"https://drive.google.com/file/d/1BDr2l8ptnsAdL2lAWf8x2-KwN48lqXVz/view?usp=sharing\">Scan</a></b></td>\n       </tr>\n      </table>\n</div>\n\n<p align=\"center\">\n  <kbd> \n      <img src=\"docs/images/readme/User-Flow-Preview.jpg\" alt=\"User Flow Preview\" width=\"720\"/>\n  </kbd>\n</p>\n\n\n# Getting Started\n\n## Requirements\n- Node.js: Version 18.16.0.\n- npm: Compatible with the Node.js version.\n- Xcode: For iOS emulation (latest version recommended).\n- Android Studio: For Android emulation (latest version recommended).\n- Capacitor: Version 4.8.1 (refer to package.json). For detailed environment setup, refer to the [Capacitor Environment Setup Guide](https://capacitorjs.com/docs/getting-started/environment-setup).\n- Mobile Device: iOS or Android for running the app on physical devices.\n- Docker (only required if running the credential server in Docker).\n\nEnsure that your system meets these requirements to successfully use and develop the Identity Wallet application.\n\n### Cloning the Repository\n\n```bash\ngit clone https://github.com/cardano-foundation/cf-identity-wallet.git\ncd cf-identity-wallet\n```\n\n## Preparing the App\nThis project uses a specific node version (check the requirements section above). You can optionally use [nvm](https://github.com/nvm-sh/nvm) to manage and switch between different Node.js versions on your computer.\n\nBefore running the App, ensure that all dependencies are installed and the app is built properly. \nIn the project root directory, run the following commands:\n```bash\nnpm install\n```\n## Running in the Browser\n```bash\nnpm run dev\n```\nThis command starts the development server and allows you to preview the application on your browser by opening this localhost address:\n\n[http://localhost:3003/](http://localhost:3003/)\n\n## Running in an Emulator\nYou can discover how to run the application in an emulator by following this [link](docs/Running-in-an-Emulator.md).\n\n## End-to-End (E2E) Testing\nYou can gain additional insights into end-to-end testing by visiting the provided [link](docs/Testing.md).\n\n# Contributing\n\nAll contributions are welcome! Please feel free to open a new thread on the issue tracker or submit a new pull request.\n\n\nPlease read [Contributing](CONTRIBUTING.md) in advance.  Thank you for contributing!\n\n## Additional Documents\n- [Code of Conduct](CODE_OF_CONDUCT.md)\n- [Security](SECURITY.md)\n- [Changelog](CHANGELOG.md)\n\n\n# Troubleshooting\n<div align=\"justify\"> \nPlease be aware that from time-to-time the hosted pre-production KERI services require restarting.  When this occurs it causes a white-screen when launching the application.  If you experience the white-screen issue please wait for the services to restart and the application will load as expected.   If you have any questions, there is also a Discord Channel available for the Identity Wallet.   \n</div>\n\n<br>\n\n<div align=\"center\"> \n      <a href=\"https://discord.gg/Wh25yBqwpz\">\ud83d\udc68\u200d\ud83d\udcbb Join our Discord! \ud83d\udc69\u200d\ud83d\udcbb\n</div>\n\n\n# Resources\n\n## W3C\n- [DID Core Specification](https://www.w3.org/TR/did-core/)\n- [DID Methods Registry](https://www.w3.org/TR/did-spec-registries/)\n- [Verifiable Credentials Data Model](https://www.w3.org/TR/vc-data-model/)\n- [Verifiable Credential V2](https://www.w3.org/TR/vc-data-model-2.0/)\n\n## KERI\n- [Key Event Receipt Infrastructure](https://keri.one/)\n- [Resources](https://keri.one/keri-resources/)\n- [KERIA](https://github.com/cardano-foundation/keria)\n- [Signify-TS](https://github.com/cardano-foundation/signify-ts)\n- [Cardano Backer](https://github.com/cardano-foundation/cardano-backer)\n\n## Standards, Frameworks and Governance\n- [Aries Framework JavaScript](https://github.com/openwallet-foundation/agent-framework-javascript)\n- [Veramo](https://veramo.io/)\n- [SSI Frameworks Overview](https://europeanblockchainassociation.org/ssi-frameworks-sdks-overview/)\n- [Global Legal Entity Identifier Foundation (GLIEF)](https://www.gleif.org/en)\n- [Decentralized Identity Foundation](https://identity.foundation/)\n- [eIDAS Regulation](https://digital-strategy.ec.europa.eu/en/policies/eidas-regulation)\n- [European Blockchain Services Infrastructure (EBSI)](https://ec.europa.eu/digital-building-blocks/wikis/display/EBSI/Home)\n", "release_dates": []}, {"name": "cf-java-rewards-calculation", "description": "This java project is used to calculate the rewards of the Cardano network. It aims to be both an edge case documentation and formula implementation.", "language": "Java", "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "readme": "# Cardano Rewards Calculation \ud83e\uddee\n\n<p align=\"left\">\n<img alt=\"Tests\" src=\"https://github.com/cardano-foundation/cf-java-rewards-calculation/actions/workflows/tests.yaml/badge.svg?branch=main\" />\n<img alt=\"Coverage\" src=\"https://github.com/cardano-foundation/cf-java-rewards-calculation/blob/gh-pages/badges/jacoco.svg?raw=true\" />\n<img alt=\"Release\" src=\"https://github.com/cardano-foundation/cf-java-rewards-calculation/actions/workflows/release.yaml/badge.svg?branch=main\" />\n<a href=\"https://conventionalcommits.org\"><img alt=\"conventionalcommits\" src=\"https://img.shields.io/badge/Conventional%20Commits-1.0.0-%23FE5196?logo=conventionalcommits\" /></a>\n<a href=\"https://opensource.org/licenses/MIT\"><img alt=\"License\" src=\"https://img.shields.io/badge/License-MIT-green.svg\" /></a>\n</p>\n\nThis project is aims to target *multiple goals*. First of all, it tries to *re-implement the cardano ledger rules* for calculating \nthe [ADA pots](https://cexplorer.io/pot) (Treasury, Reserves, Rewards, Deposits, Utxo, Fees), as well as the rewards for stake pool operators and delegators. \nThe second goal is to use this implementation to *[validate the rewards calculation](https://cardano-foundation.github.io/cf-java-rewards-calculation/report-latest/treasury_calculation.html)* of the Cardano blockchain by providing a *different implementation of the [ledger specification](https://github.com/IntersectMBO/cardano-ledger?tab=readme-ov-file#cardano-ledger)*.\nThe third goal is to *provide a library* that can be used in other project (such as [yaci-store](https://github.com/bloxbean/yaci-store)) to serve the rewards data *independently of [DB Sync](https://github.com/IntersectMBO/cardano-db-sync)*. \nLast but not least, this project could also be used to *understand the influence of protocol parameters* and the flow of ADA through an interactive report.\n\n\ud83d\udea7\ufe0f The calculation is currently correct until the beginning of the Babbage era. \ud83d\udea7\ufe0f\n\n## \ud83e\uddea Test Reports\n\nTo ensure the stability and reliability of this project, unit tests have been implemented. By clicking on the link below, you can access the detailed test report.\nWe also generate for each version of this project calculation reports. These reports are generated by the unit tests and contain the calculation results compared to the actual values.\n\n\ud83d\udcc8 [Treasury Calculation Report](https://cardano-foundation.github.io/cf-java-rewards-calculation/report-latest/treasury_calculation.html)\n\ud83d\udcca [Coverage Report](https://cardano-foundation.github.io/cf-java-rewards-calculation/coverage-report/)\n\n```mermaid\nflowchart\n    A[Total Transaction Fees <br />at Epoch n] --> B[Total Reward Pot <br />at Epoch n]\n    B --> | treasuryGrowthRate | C[Treasury]\n    B --> | 1 - treasuryGrowthRate | D[Stake Pool Rewards Pot <br />at Epoch n]\n        subgraph ADA_POTS[\" \"]\n        D --> | Unclaimed Rewards | E[\"ADA Reserves<br /> (monetary expansion) <br /> Started at ~14B ADA\"]\n        E --> | monetaryExpandRate * Performance of all Stake Pools | B\n        C --> F[Payouts e.g. for <br />Project Catalyst]\n        D --> | Rewards Equation<br /> for Pool 1 | G[Stake Pool 1]\n        D --> | ewards Equation<br /> for Pool 2 | H[Stake Pool 2]\n        D --> I[...]\n        D --> | Rewards Equation<br /> for Pool n | J[Stake Pool n]\n        J --> | margin & minPoolCost | K[Operators]\n        J --> | rewards | L[Delegators]\n        D --> | Rewards going to<br /> de-registered<br /> stake addresses | C\n        L <--> | Stake Key Registrations + <br /> Deregistrations | M[Deposits]\n        K <--> | Stake Pool Registrations + <br /> Deregistrations | M\n        M --> | Unclaimed Refunds for Retired Pools | C\n        end\n\n    style A fill:#5C8DFF,stroke:#5C8DFF\n    style B fill:#5C8DFF,stroke:#5C8DFF\n    style C fill:#1EC198,stroke:#1EC198\n    style D fill:#5C8DFF,stroke:#5C8DFF\n    style E fill:#1EC198,stroke:#1EC198\n\n    style F fill:#F6C667,stroke:#F6C667\n    style G fill:#F6C667,stroke:#F6C667\n    style H fill:#F6C667,stroke:#F6C667\n    style I fill:#F6C667,stroke:#F6C667\n    style J fill:#F6C667,stroke:#F6C667\n\n    style ADA_POTS fill:#f6f9ff,stroke:#f6f9ff\n```\n\n## \ud83e\udd13 Interesting Findings\n\nWhile the flowchart above shows the calculation of the Ada pots in general, there are some more aspects that need to be considered:\n\n- The point in time \ud83d\udd51. The reward calculation starts at slot `(4 * 2160) / 0.05) = 172800` (48h) each epoch. Before the Babbage era, \n  accounts that were de-registered **before** this point in time were not considered for the rewards calculation.  \n  This means that the rewards for the de-registered stake addresses are not considered in the rewards calculation. \n  Those rewards were not distributed and went therefore back to the **reserves**. Accounts that deregistered **after** \n  this point in time, but before the end of the epoch, were considered for the rewards calculation. But as it is not \n  possible to send rewards to a de-registered stake address, the rewards went back to the **treasury**.\n- At the Allegra hard fork, the (pre-Shelley) bootstrap addresses were removed from the UTxO and the Ada contained in them was returned to the reserves.\n- There was a different behavior (pre-Allegra): If a pool reward address had been used for multiple pools,\n  the stake account only received the reward for one of those pools and did also not get any member rewards.\n  This **behavior has changed in mainnet epoch 236** with the Allegra hard fork. Now, the stake account receives the rewards for all pools (including member rewards).\n- Transaction fees and a part of the reserve is used to build the total reward pot. It is often mentioned that\n  the monetary expansion rate (protocol parameter) is used to calculate the part coming from the reserves.\n  While this is true, the actual calculation is a multiplication of the monetary expansion rate and the performance of all stake pools `eta`.\n  `Eta` is the ratio of the blocks produced **by pools** in an epoch and the expected blocks `(432000 slots per epoch / 20 sec per block = 21600)`.\n  With beginning of Shelly the blocks were produced by OBFT nodes and not by pools. Therefore, the performance of all stake pools would be 0.\n  The decentralization parameter `d` has been introduced to slightly increase the amount of **expected blocks produced by pools**.\n  In the time when `d` was above 0.8 `eta` was set to 1.0. `d` decreased over time from 1.0 to 0.0 and disappeared completely with the Vasil hard fork.\n- The pool deposit is currently 500 Ada. This deposit will be returned (on the next epoch boundary) to the pool reward address when the pool is retired.\n  However, if the deposit could not be returned (e.g. because the pool reward address is de-registered), the **deposit will be added to the treasury** instead.\n- Pool updates override pool deregistrations. This means that if a pool is updated before the end of the epoch, the pool will not be retired and the deposit will not be returned.\n\n## \ud83d\ude80 Getting Started\n\nMake sure to have Java 17 installed and run the following commands:\n\n```\ngit clone https://github.com/cardano-foundation/cf-java-rewards-calculation.git\ncd cf-java-rewards-calculation\n./mvnw clean test\n```\n\n## \ud83d\udce6 Usage\n\nIn the near future you can use the calculation part of this repository as a library in your own project as it will be accessible \nthrough maven central.\n\nFor now the structure of the repository is divided in two parts:\n \n- calculation package\n  - [EpochCalculation](calculation/src/main/java/org/cardanofoundation/rewards/calculation/EpochCalculation.java)\n  - [DepositsCalculation](calculation/src/main/java/org/cardanofoundation/rewards/calculation/DepositsCalculation.java)\n  - [PoolRewardsCalculation](calculation/src/main/java/org/cardanofoundation/rewards/calculation/PoolRewardsCalculation.java)\n  - [TreasuryCalculation](calculation/src/main/java/org/cardanofoundation/rewards/calculation/TreasuryCalculation.java)\n\n- validation package\n  - [EpochValidation](validation/src/main/java/org/cardanofoundation/rewards/validation/EpochValidation.java)\n  - [DepositsValidation](validation/src/main/java/org/cardanofoundation/rewards/validation/DepositsValidation.java)\n  - [PoolRewardValidation](validation/src/main/java/org/cardanofoundation/rewards/validation/PoolRewardValidation.java)\n  - [TreasuryValidation](validation/src/main/java/org/cardanofoundation/rewards/validation/TreasuryValidation.java)\n  - ...\n\nWhile the calculation package is used as a pure re-implementation of the ledger specification,\nthe validation package is used to get the needed data (e.g. registration/deregistration certificates, epoch stakes, etc.) \nfrom the data provider and execute the calculation. Furthermore, the validation package is used to compare the calculated\nvalues with the actual values using DB Sync as ground truth.\n\n#### Data Provider\n\nThe pool rewards calculation and also the treasury calculation requires a data provider to perform the calculation.\nThis repository offers different data providers and also an interface if you want to add your own provider. The following data providers are available:\n\n - [Koios Data Provider](validation/src/main/java/org/cardanofoundation/rewards/validation/data/provider/KoiosDataProvider.java)\n - [JSON Data Provider](validation/src/main/java/org/cardanofoundation/rewards/validation/data/provider/JsonDataProvider.java)\n - [DbSync Data Provider](validation/src/main/java/org/cardanofoundation/rewards/validation/data/provider/DbSyncDataProvider.java)\n\n#### Data Fetcher\n\nThe data fetcher is used to fetch the data from the data provider and put it into local json files.\nThese files can be used to perform the calculation using the JSON Data Provider. The following data fetchers are available:\n\n - [Koios Data Fetcher](validation/src/main/java/org/cardanofoundation/rewards/validation/data/fetcher/KoiosDataFetcher.java)\n - [DbSync Data Fetcher](validation/src/main/java/org/cardanofoundation/rewards/validation/data/fetcher/DbSyncDataFetcher.java)\n\nTo make the application fetching the data, create an `.env` file with the following content in the [validation resources folder](validation/src/main/resources/.env):\n\n```\nSPRING_PROFILES_ACTIVE=db-sync\n\nRUN_MODE=fetch\nOVERWRITE_EXISTING_DATA=false\nDATA_FETCHER_START_EPOCH=<start-epoch>\nDATA_FETCHER_END_EPOCH=<end-epoch>\nDATA_FETCHER_SKIP_VALIDATION_DATA=<true|false>\n\nPOSTGRES_USER=<username>\nPOSTGRES_PASSWORD=<password>\nPOSTGRES_DB=cexplorer\n\nJSON_DATA_SOURCE_FOLDER=/path/to/your/rewards-calculation-test-data\n```\n`\u26a0\ufe0f The actual rewards data will also be fetched when setting DATA_FETCHER_SKIP_VALIDATION_DATA=false, but it is only used from the validator and not within the calculation itself.`\n  \n#### Data Plotter\n\nThe data plotter is used to generate the report. The following data plotters are available:\n\n - [Koios Data Plotter](./validation/src/main/java/org/cardanofoundation/rewards/validation/data/plotter/JsonDataPlotter.java)\n\nTo use the application to make the report, create an `.env` file with the following content in the [validation resources folder](validation/src/main/resources/.env):\n\n```\nSPRING_PROFILES_ACTIVE=json\nRUN_MODE=plot\nJSON_DATA_SOURCE_FOLDER=/path/to/your/rewards-calculation-test-data\n```\n\n## \ud83e\udee1 Roadmap\n - [ ] Provide a library through maven central to use the calculation in other projects\n - [ ] Enhance reporting and add values for the other pots as well. Display the flow of Ada within an epoch\n - [ ] Find out the root cause of the difference between the actual rewards and the calculated rewards beginning with epoch 350\n - [ ] Add a `/docs` folder containing parsable Markdown files to explain MIR certificates and edge cases\n - [X] Include MIR certificates\n - [X] Calculate member and operator rewards\n - [X] Add deposits and utxo pot\n - [X] Calculate unclaimed rewards that need to go back to the reserves\n - [X] Put rewards to unregistered stake addresses into the treasury\n\n## \ud83d\udcd6 Sources\n - [Shelley Cardano Delegation Specification](https://github.com/input-output-hk/cardano-ledger/releases/download/cardano-ledger-spec-2023-04-03/shelley-ledger.pdf)\n - [Shelley Cardano Ledger Specification](https://github.com/input-output-hk/cardano-ledger/releases/download/cardano-ledger-spec-2023-04-03/shelley-ledger.pdf)\n - [Protocol Parameters - CIP-0009](https://cips.cardano.org/cips/cip9/#updatableprotocolparameters)\n - Beavr Cardano Stake Pool: [How is the Rewards Pot (R) Calculated](https://archive.ph/HQfoV/fb8166e31d2bf61d3d6ca769e7785f2a96530f8e.webp)\n - [History of Protocol Parameters](https://beta.explorer.cardano.org/en/protocol-parameters/)\n", "release_dates": ["2024-03-02T22:57:20Z", "2024-03-02T19:12:13Z", "2024-01-29T21:08:55Z", "2024-01-27T18:01:14Z", "2024-01-21T20:35:47Z", "2024-01-21T12:40:17Z", "2023-09-25T10:02:54Z", "2023-08-31T18:01:18Z"]}, {"name": "cf-ledger-sync", "description": "An open-source Java application designed to facilitate access to indexed Cardano blockchain data", "language": "Java", "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "readme": "[![Clean, Build](https://github.com/cardano-foundation/cf-ledger-sync/actions/workflows/build.yml/badge.svg)](https://github.com/cardano-foundation/cf-ledger-sync/actions/workflows/build.yml)\n\nThis repository contains the following applications:\n\n1. **Ledger Sync:** This is the main indexer application that reads data from the Cardano blockchain and writes to a PostgreSQL database.\n\n2. **Ledger Sync - Scheduler App:** This is an optional application for scheduling jobs in Ledger Sync. By default, specific Ledger Sync schedule jobs are executed as part of the main Ledger Sync application, but you can also run them independently with this application. \n\n3. **Ledger Sync - Streaming App:** This app reads data from a Cardano node and publishes blockchain data to messaging middleware like Kafka or RabbitMQ. It publishes blockchain data in the form of events. There are various types of events that can be published by the streaming app, but you can configure which events you want to publish. This is useful when you want to listen to blockchain events but build your own storage layer.\n\nFor more details about Streaming App, please check [here](https://github.com/cardano-foundation/cf-ledger-sync/tree/main/streamer-app)\n\n# Ledger Sync\n\n## Pre-requisites\n- Java 21\n- Cardano Node or connect to a remote Cardano node\n- PostgreSQL DB\n\n## Build Jar\n\n```bash\n./gradlew clean build -x test\n```\n\n## Update databse details\n\n1. Edit ``config/application.properties`` to add datasource url, username & password.\n\n```\nspring.datasource.url=jdbc:postgresql://localhost:5432/<db>\n\nspring.datasource.username=user\n\nspring.datasource.password=\n\nSCHEMA=<schema>\n```\n\n2. Run\n\n```bash\njava -jar application/build/libs/ledger-sync-application-<version>-SNAPSHOT.jar\n```\n\n## Docker Build & Run\n\nBuild the jar file first\n\n```bash\n./gradlew clean build -x test\n```\n\nBuild docker image\n\n\n```shell\ndocker build -t cardanofoundation/ledger-sync:<version> .\n```\n\n### Docker Run\n\nCopy env.example to env\n\nEdit ``env`` file with database and network details\n\n```shell\ndocker run -p 8080:8080 --env-file env cardanofoundation/ledger-sync:<version>\n```\n\n## Contributing to Ledger Sync\n\nWe love your input! We want to make contributing to this project as easy and transparent as possible, whether it's:\n\n- Reporting a bug \n- Discussing the current state of the code \n- Submitting a fix \n- Proposing new features\n\nPlease check details [here](CONTRIBUTING.md)\n", "release_dates": []}, {"name": "cf-summit-evoting-status", "description": "\ud83d\udcc8 Uptime monitor and status page for the Cardano Ballot app for Cardano Summit, powered by @upptime", "language": "Markdown", "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "readme": "This repository contains the open-source uptime monitor and status page for [Cardano Foundation](https://cardanofoundation.org), powered by [Upptime](https://github.com/upptime/upptime).\n\n[![Uptime CI](https://github.com/cardano-foundation/cf-summit-evoting-status/workflows/Uptime%20CI/badge.svg)](https://github.com/cardano-foundation/cf-summit-evoting-status/actions?query=workflow%3A%22Uptime+CI%22)\n[![Response Time CI](https://github.com/cardano-foundation/cf-summit-evoting-status/workflows/Response%20Time%20CI/badge.svg)](https://github.com/cardano-foundation/cf-summit-evoting-status/actions?query=workflow%3A%22Response+Time+CI%22)\n[![Graphs CI](https://github.com/cardano-foundation/cf-summit-evoting-status/workflows/Graphs%20CI/badge.svg)](https://github.com/cardano-foundation/cf-summit-evoting-status/actions?query=workflow%3A%22Graphs+CI%22)\n[![Static Site CI](https://github.com/cardano-foundation/cf-summit-evoting-status/workflows/Static%20Site%20CI/badge.svg)](https://github.com/cardano-foundation/cf-summit-evoting-status/actions?query=workflow%3A%22Static+Site+CI%22)\n[![Summary CI](https://github.com/cardano-foundation/cf-summit-evoting-status/workflows/Summary%20CI/badge.svg)](https://github.com/cardano-foundation/cf-summit-evoting-status/actions?query=workflow%3A%22Summary+CI%22)\n\nWith [Upptime](https://upptime.js.org), you can get your own unlimited and free uptime monitor and status page, powered entirely by a GitHub repository. We use [Issues](https://github.com/cardano-foundation/cf-summit-evoting-status/issues) as incident reports, [Actions](https://github.com/cardano-foundation/cf-summit-evoting-status/actions) as uptime monitors, and [Pages](https://status.voting.summit.cardano.org) for the status page.\n\n# [\ud83d\udcc8 Live Status](https://status.voting.summit.cardano.org): <!--live status--> **\ud83d\udfe5 Complete outage**\n\n<!--start: status pages-->\n<!-- This summary is generated by Upptime (https://github.com/upptime/upptime) -->\n<!-- Do not edit this manually, your changes will be overwritten -->\n<!-- prettier-ignore -->\n| URL | Status | History | Response Time | Uptime |\n| --- | ------ | ------- | ------------- | ------ |\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/voting.summit.cardano.org.ico\" height=\"13\"> [voting.summit.cardano.org](https://voting.summit.cardano.org/) | \ud83d\udfe5 Down | [voting-summit-cardano-org.yml](https://github.com/cardano-foundation/cf-summit-evoting-status/commits/HEAD/history/voting-summit-cardano-org.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/voting-summit-cardano-org/response-time-week.png\" height=\"20\"> 253ms</summary><br><a href=\"https://status2023.voting.summit.cardano.org/history/voting-summit-cardano-org\"><img alt=\"Response time 415\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fvoting-summit-cardano-org%2Fresponse-time.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/voting-summit-cardano-org\"><img alt=\"24-hour response time 215\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fvoting-summit-cardano-org%2Fresponse-time-day.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/voting-summit-cardano-org\"><img alt=\"7-day response time 253\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fvoting-summit-cardano-org%2Fresponse-time-week.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/voting-summit-cardano-org\"><img alt=\"30-day response time 359\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fvoting-summit-cardano-org%2Fresponse-time-month.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/voting-summit-cardano-org\"><img alt=\"1-year response time 369\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fvoting-summit-cardano-org%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status2023.voting.summit.cardano.org/history/voting-summit-cardano-org\">100.00%</a></summary><a href=\"https://status2023.voting.summit.cardano.org/history/voting-summit-cardano-org\"><img alt=\"All-time uptime 84.76%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fvoting-summit-cardano-org%2Fuptime.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/voting-summit-cardano-org\"><img alt=\"24-hour uptime 99.99%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fvoting-summit-cardano-org%2Fuptime-day.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/voting-summit-cardano-org\"><img alt=\"7-day uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fvoting-summit-cardano-org%2Fuptime-week.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/voting-summit-cardano-org\"><img alt=\"30-day uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fvoting-summit-cardano-org%2Fuptime-month.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/voting-summit-cardano-org\"><img alt=\"1-year uptime 99.84%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fvoting-summit-cardano-org%2Fuptime-year.json\"></a></details>\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/follower-api.voting.summit.cardano.org.ico\" height=\"13\"> [event-api](https://follower-api.voting.summit.cardano.org/api/reference/event/CARDANO_SUMMIT_AWARDS_2023) | \ud83d\udfe5 Down | [event-api.yml](https://github.com/cardano-foundation/cf-summit-evoting-status/commits/HEAD/history/event-api.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/event-api/response-time-week.png\" height=\"20\"> 620ms</summary><br><a href=\"https://status2023.voting.summit.cardano.org/history/event-api\"><img alt=\"Response time 538\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fevent-api%2Fresponse-time.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/event-api\"><img alt=\"24-hour response time 526\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fevent-api%2Fresponse-time-day.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/event-api\"><img alt=\"7-day response time 620\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fevent-api%2Fresponse-time-week.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/event-api\"><img alt=\"30-day response time 549\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fevent-api%2Fresponse-time-month.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/event-api\"><img alt=\"1-year response time 538\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fevent-api%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status2023.voting.summit.cardano.org/history/event-api\">99.96%</a></summary><a href=\"https://status2023.voting.summit.cardano.org/history/event-api\"><img alt=\"All-time uptime 99.98%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fevent-api%2Fuptime.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/event-api\"><img alt=\"24-hour uptime 99.75%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fevent-api%2Fuptime-day.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/event-api\"><img alt=\"7-day uptime 99.96%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fevent-api%2Fuptime-week.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/event-api\"><img alt=\"30-day uptime 99.96%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fevent-api%2Fuptime-month.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/event-api\"><img alt=\"1-year uptime 99.98%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fevent-api%2Fuptime-year.json\"></a></details>\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/user-verification.voting.summit.cardano.org.ico\" height=\"13\"> [user-verification-api](https://user-verification.voting.summit.cardano.org/api/sms/user-verification/start-verification) | \ud83d\udfe5 Down | [user-verification-api.yml](https://github.com/cardano-foundation/cf-summit-evoting-status/commits/HEAD/history/user-verification-api.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/user-verification-api/response-time-week.png\" height=\"20\"> 493ms</summary><br><a href=\"https://status2023.voting.summit.cardano.org/history/user-verification-api\"><img alt=\"Response time 464\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fuser-verification-api%2Fresponse-time.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/user-verification-api\"><img alt=\"24-hour response time 490\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fuser-verification-api%2Fresponse-time-day.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/user-verification-api\"><img alt=\"7-day response time 493\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fuser-verification-api%2Fresponse-time-week.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/user-verification-api\"><img alt=\"30-day response time 464\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fuser-verification-api%2Fresponse-time-month.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/user-verification-api\"><img alt=\"1-year response time 464\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fuser-verification-api%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status2023.voting.summit.cardano.org/history/user-verification-api\">99.96%</a></summary><a href=\"https://status2023.voting.summit.cardano.org/history/user-verification-api\"><img alt=\"All-time uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fuser-verification-api%2Fuptime.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/user-verification-api\"><img alt=\"24-hour uptime 99.75%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fuser-verification-api%2Fuptime-day.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/user-verification-api\"><img alt=\"7-day uptime 99.96%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fuser-verification-api%2Fuptime-week.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/user-verification-api\"><img alt=\"30-day uptime 99.99%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fuser-verification-api%2Fuptime-month.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/user-verification-api\"><img alt=\"1-year uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fuser-verification-api%2Fuptime-year.json\"></a></details>\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/follower-api.voting.summit.cardano.org.ico\" height=\"13\"> [blockchain-follower-api](https://follower-api.voting.summit.cardano.org/api/blockchain/tip) | \ud83d\udfe5 Down | [blockchain-follower-api.yml](https://github.com/cardano-foundation/cf-summit-evoting-status/commits/HEAD/history/blockchain-follower-api.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/blockchain-follower-api/response-time-week.png\" height=\"20\"> 341ms</summary><br><a href=\"https://status2023.voting.summit.cardano.org/history/blockchain-follower-api\"><img alt=\"Response time 344\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fblockchain-follower-api%2Fresponse-time.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/blockchain-follower-api\"><img alt=\"24-hour response time 222\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fblockchain-follower-api%2Fresponse-time-day.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/blockchain-follower-api\"><img alt=\"7-day response time 341\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fblockchain-follower-api%2Fresponse-time-week.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/blockchain-follower-api\"><img alt=\"30-day response time 359\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fblockchain-follower-api%2Fresponse-time-month.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/blockchain-follower-api\"><img alt=\"1-year response time 344\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fblockchain-follower-api%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status2023.voting.summit.cardano.org/history/blockchain-follower-api\">100.00%</a></summary><a href=\"https://status2023.voting.summit.cardano.org/history/blockchain-follower-api\"><img alt=\"All-time uptime 99.99%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fblockchain-follower-api%2Fuptime.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/blockchain-follower-api\"><img alt=\"24-hour uptime 99.99%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fblockchain-follower-api%2Fuptime-day.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/blockchain-follower-api\"><img alt=\"7-day uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fblockchain-follower-api%2Fuptime-week.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/blockchain-follower-api\"><img alt=\"30-day uptime 99.97%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fblockchain-follower-api%2Fuptime-month.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/blockchain-follower-api\"><img alt=\"1-year uptime 99.99%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fblockchain-follower-api%2Fuptime-year.json\"></a></details>\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/api.voting.summit.cardano.org.ico\" height=\"13\"> [login-api](http://api.voting.summit.cardano.org/api/auth/login) | \ud83d\udfe5 Down | [login-api.yml](https://github.com/cardano-foundation/cf-summit-evoting-status/commits/HEAD/history/login-api.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/login-api/response-time-week.png\" height=\"20\"> 421ms</summary><br><a href=\"https://status2023.voting.summit.cardano.org/history/login-api\"><img alt=\"Response time 452\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Flogin-api%2Fresponse-time.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/login-api\"><img alt=\"24-hour response time 419\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Flogin-api%2Fresponse-time-day.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/login-api\"><img alt=\"7-day response time 421\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Flogin-api%2Fresponse-time-week.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/login-api\"><img alt=\"30-day response time 441\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Flogin-api%2Fresponse-time-month.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/login-api\"><img alt=\"1-year response time 452\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Flogin-api%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status2023.voting.summit.cardano.org/history/login-api\">99.96%</a></summary><a href=\"https://status2023.voting.summit.cardano.org/history/login-api\"><img alt=\"All-time uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Flogin-api%2Fuptime.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/login-api\"><img alt=\"24-hour uptime 99.75%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Flogin-api%2Fuptime-day.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/login-api\"><img alt=\"7-day uptime 99.96%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Flogin-api%2Fuptime-week.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/login-api\"><img alt=\"30-day uptime 99.99%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Flogin-api%2Fuptime-month.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/login-api\"><img alt=\"1-year uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Flogin-api%2Fuptime-year.json\"></a></details>\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/api.voting.summit.cardano.org.ico\" height=\"13\"> [cast-vote-api](http://api.voting.summit.cardano.org/api/vote/cast) | \ud83d\udfe5 Down | [cast-vote-api.yml](https://github.com/cardano-foundation/cf-summit-evoting-status/commits/HEAD/history/cast-vote-api.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/cast-vote-api/response-time-week.png\" height=\"20\"> 236ms</summary><br><a href=\"https://status2023.voting.summit.cardano.org/history/cast-vote-api\"><img alt=\"Response time 298\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fcast-vote-api%2Fresponse-time.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/cast-vote-api\"><img alt=\"24-hour response time 218\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fcast-vote-api%2Fresponse-time-day.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/cast-vote-api\"><img alt=\"7-day response time 236\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fcast-vote-api%2Fresponse-time-week.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/cast-vote-api\"><img alt=\"30-day response time 310\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fcast-vote-api%2Fresponse-time-month.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/cast-vote-api\"><img alt=\"1-year response time 298\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fcast-vote-api%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status2023.voting.summit.cardano.org/history/cast-vote-api\">99.96%</a></summary><a href=\"https://status2023.voting.summit.cardano.org/history/cast-vote-api\"><img alt=\"All-time uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fcast-vote-api%2Fuptime.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/cast-vote-api\"><img alt=\"24-hour uptime 99.75%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fcast-vote-api%2Fuptime-day.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/cast-vote-api\"><img alt=\"7-day uptime 99.96%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fcast-vote-api%2Fuptime-week.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/cast-vote-api\"><img alt=\"30-day uptime 99.99%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fcast-vote-api%2Fuptime-month.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/cast-vote-api\"><img alt=\"1-year uptime 100.00%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fcast-vote-api%2Fuptime-year.json\"></a></details>\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/api.voting.summit.cardano.org.ico\" height=\"13\"> [get-votes-api](http://api.voting.summit.cardano.org/api/vote/votes/CARDANO_SUMMIT_AWARDS_2023) | \ud83d\udfe5 Down | [get-votes-api.yml](https://github.com/cardano-foundation/cf-summit-evoting-status/commits/HEAD/history/get-votes-api.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/get-votes-api/response-time-week.png\" height=\"20\"> 287ms</summary><br><a href=\"https://status2023.voting.summit.cardano.org/history/get-votes-api\"><img alt=\"Response time 269\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fget-votes-api%2Fresponse-time.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/get-votes-api\"><img alt=\"24-hour response time 282\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fget-votes-api%2Fresponse-time-day.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/get-votes-api\"><img alt=\"7-day response time 287\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fget-votes-api%2Fresponse-time-week.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/get-votes-api\"><img alt=\"30-day response time 255\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fget-votes-api%2Fresponse-time-month.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/get-votes-api\"><img alt=\"1-year response time 269\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fget-votes-api%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status2023.voting.summit.cardano.org/history/get-votes-api\">99.96%</a></summary><a href=\"https://status2023.voting.summit.cardano.org/history/get-votes-api\"><img alt=\"All-time uptime 99.99%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fget-votes-api%2Fuptime.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/get-votes-api\"><img alt=\"24-hour uptime 99.75%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fget-votes-api%2Fuptime-day.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/get-votes-api\"><img alt=\"7-day uptime 99.96%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fget-votes-api%2Fuptime-week.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/get-votes-api\"><img alt=\"30-day uptime 99.99%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fget-votes-api%2Fuptime-month.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/get-votes-api\"><img alt=\"1-year uptime 99.99%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fget-votes-api%2Fuptime-year.json\"></a></details>\n| <img alt=\"\" src=\"https://icons.duckduckgo.com/ip3/api.voting.summit.cardano.org.ico\" height=\"13\"> [get-vote-receipt-api](http://api.voting.summit.cardano.org/api/vote/receipt/CARDANO_SUMMIT_AWARDS_2023/AMBASSADOR) | \ud83d\udfe5 Down | [get-vote-receipt-api.yml](https://github.com/cardano-foundation/cf-summit-evoting-status/commits/HEAD/history/get-vote-receipt-api.yml) | <details><summary><img alt=\"Response time graph\" src=\"./graphs/get-vote-receipt-api/response-time-week.png\" height=\"20\"> 232ms</summary><br><a href=\"https://status2023.voting.summit.cardano.org/history/get-vote-receipt-api\"><img alt=\"Response time 241\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fget-vote-receipt-api%2Fresponse-time.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/get-vote-receipt-api\"><img alt=\"24-hour response time 302\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fget-vote-receipt-api%2Fresponse-time-day.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/get-vote-receipt-api\"><img alt=\"7-day response time 232\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fget-vote-receipt-api%2Fresponse-time-week.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/get-vote-receipt-api\"><img alt=\"30-day response time 238\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fget-vote-receipt-api%2Fresponse-time-month.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/get-vote-receipt-api\"><img alt=\"1-year response time 241\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fget-vote-receipt-api%2Fresponse-time-year.json\"></a></details> | <details><summary><a href=\"https://status2023.voting.summit.cardano.org/history/get-vote-receipt-api\">99.97%</a></summary><a href=\"https://status2023.voting.summit.cardano.org/history/get-vote-receipt-api\"><img alt=\"All-time uptime 99.99%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fget-vote-receipt-api%2Fuptime.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/get-vote-receipt-api\"><img alt=\"24-hour uptime 99.76%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fget-vote-receipt-api%2Fuptime-day.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/get-vote-receipt-api\"><img alt=\"7-day uptime 99.97%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fget-vote-receipt-api%2Fuptime-week.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/get-vote-receipt-api\"><img alt=\"30-day uptime 99.99%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fget-vote-receipt-api%2Fuptime-month.json\"></a><br><a href=\"https://status2023.voting.summit.cardano.org/history/get-vote-receipt-api\"><img alt=\"1-year uptime 99.99%\" src=\"https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fcardano-foundation%2Fcf-summit-evoting-status%2FHEAD%2Fapi%2Fget-vote-receipt-api%2Fuptime-year.json\"></a></details>\n\n<!--end: status pages-->\n\n[**Visit our status website \u2192**](https://status.voting.summit.cardano.org)\n\n## \ud83d\udcc4 License\n\n- Powered by: [Upptime](https://github.com/upptime/upptime)\n- Code: [MIT](./LICENSE) \u00a9 [Cardano Foundation](https://cardanofoundation.org)\n- Data in the `./history` directory: [Open Database License](https://opendatacommons.org/licenses/odbl/1-0/)\n", "release_dates": []}, {"name": "CIP-0094-polls", "description": null, "language": "JavaScript", "license": null, "readme": "# CIP-0094 polls\n\nThis repository contains instructions and data for participating in SPO polls as proposed and defined in [CIP-0094](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0094) and announced in this [forum post](https://forum.cardano.org/t/entering-voltaire-on-chain-poll-for-spos/117330).\n\n> **Note**\n>\n> We will add to and improve this guidance and information in the first half of\n> May as part of the PreProd test run.\n\n## Existing polls\n\n| Date     | Network | Poll |\n| ---      | ---     | ---  |\n| May 2023 | PreProd | [d8c1b1d871a27d74fbddfa16d28ce38288411a75c5d3561bb74066bcd54689e2](networks/preprod/d8c1b1d871a27d74fbddfa16d28ce38288411a75c5d3561bb74066bcd54689e2/) |\n| May 2023 | Mainnet | [fae7bda85acb99c513aeab5f86986047b6f6cbd33a8e11f11c5005513a054dc8](networks/mainnet/fae7bda85acb99c513aeab5f86986047b6f6cbd33a8e11f11c5005513a054dc8/) |\n\nThere are CIP-0094 dashboards to keep track of the previous votes cast by the pools.\n\n- Adastat.net [[PreProd](https://preprod.adastat.net/polls)]   [[Mainnet](https://adastat.net/polls)]\n- Cardanoscan.io  [[PreProd](https://preprod.cardanoscan.io/spo-polls/)]   [[Mainnet](https://cardanoscan.io/spo-polls/)]\n\n## How to participate?\n\n### Pre-requisites\n\nTo run the poll governance subcommands, a version of cardano-cli with governance poll subcommand support is required. There are few options available to you:\n\n1. Checkout and build [input-output-hk/cardano-node@8.0.0-untested](INSTALL_CCLI8.md)\n\n2. Checkout and build [CardanoSolutions/cardano-node@release/1.35+cip-0094](INSTALL_CCLI1357.md)\n\n3. Download [pre-built binaries from CardanoSolutions/cardano-node@release/1.35+cip-0094](https://github.com/CardanoSolutions/cardano-node/releases/tag/1.35.7%2Bcip-0094), for a standard Linux system\n\n### Steps\n\n#### 1. Find an available poll\n\nAvailable polls are [listed in the table above](#existing-polls). Alternatively, you can use the [getPoll.sh](scripts/getPoll.sh) script to look for specific polls submitted on-chain.\n\n#### 2. Create a poll answer\n\nUse the `cardano-cli governance answer-poll` command to create an answer.\n\n#### 3. Build a transaction with metadata\n\nBuild a transaction using the poll answer as metadata. You'll also need to indicate your pool id as an extra required signatory.\n\n#### 4. Sign the transaction\n\nThe transaction must be signed using your cold key.\n\n#### 5. Submit the transaction\n\nFinally, submit the transaction to the network.\n\n### Tutorial\n\nThe steps above are explained in more detail in [TUTORIAL.md](TUTORIAL.md).\n", "release_dates": []}, {"name": "cip30-data-signature-parser", "description": "Java implementation of CIP-30 DataSignature parsing and validation", "language": "Java", "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "readme": "# Java CIP-30 Data Signature Parser and Validator\n\n\n[![Build](https://github.com/cardano-foundation/cip30-data-signature-parser/actions/workflows/maven-build.yml/badge.svg)](https://github.com/cardano-foundation/cip30-data-signature-parser/actions/workflows/maven-build.yml)\n[![CodeQL](https://github.com/cardano-foundation/cip30-data-signature-parser/actions/workflows/codeql.yml/badge.svg)](https://github.com/cardano-foundation/cip30-data-signature-parser/actions/workflows/codeql.yml)\n![Maven Central](https://img.shields.io/maven-central/v/org.cardanofoundation/cip30-data-signature-parser)\n[![License](https://img.shields.io:/github/license/cardano-foundation/cip30-data-signature-parser?label=license)](https://github.com/cardano-foundation/cip30-data-signature-parser/blob/master/LICENSE)\n![GitHub tag (latest by date)](https://img.shields.io/github/v/tag/cardano-foundation/cip30-data-signature-parser)\n[![javadoc](https://javadoc.io/badge2/org.cardanofoundation/cip30-data-signature-parser/javadoc.svg)](https://javadoc.io/doc/org.cardanofoundation/cip30-data-signature-parser)\n![Discord](https://img.shields.io/discord/1022471509173882950)\n\n## Introduction\nImplementation in Java of CIP-30 Data Signature Parser and Validator (https://github.com/cardano-foundation/CIPs/tree/master/CIP-0030).\nThis library is useful in situation where your project is JVM based and you need to parse / validate CIP-30 data signature and extract information encoded in it.\n\n## Features\nIn particular this library allows you to get / validate:\n- validate CIP-30 data signed envelop (DataSignature) using either embedded public key or explicitly supplied key (CIP-30 data signature should contain public key)\n- get message from the data signature envelope\n- get stored Cardano address\n- get ED 25519 public key and ED 25519 signature encoded in it\n- get COSE payload (COSE wrapped message directly signed by the algorithm)\n- library makes it easy to extract (ED 25519 public key and ED 25519 signature as well as COSE payload) \n\n## Additional Docs\n- [CODE_OF_CONDUCT.md](CODE_OF_CONDUCT.md)\n- [SECURITY.md](SECURITY.md)\n- [CONTRIBUTING.md](CONTRIBUTING.md)\n- [CHANGELOG.md](CHANGELOG.md)\n- [GLOSSARY.md](GLOSSARY.md)\n\n## Requirements\nJava 17 LTS or greater\n\n## Building\n```\ngit clone https://github.com/cardano-foundation/cip30-data-signature-parser\ncd cip30-data-signature-parser\nmvn clean package\n```\n\n## Dependency\n```xml\n<dependency>\n    <groupId>org.cardanofoundation</groupId>\n    <artifactId>cip30-data-signature-parser</artifactId>\n    <version>0.0.11</version>\n</dependency>\n```\n\n## Example Usage\n```java\nvar sig = \"84582aa201276761646472657373581de1b83abf370a14870fdfd6ccb35f8b3e62a68e465ed1e096c5a6f5b9d6a166686173686564f4565468697320697320612074657374206d657373616765584042e2bfc4e1929769a0501b884f66794ae3485860f42c01b70fac37f75e40af074c6b2a61b04c6cf8a493c0dced1455b4f1129dbf653ad9801c52ce49ff6d5a0e\";\nvar key = \"a40101032720062158202f1867873147cf53c442435723c17e83beeb8e2153851cd73ccfb1b5e68994a4\";\n\nvar verifier = new CIP30Verifier(sig, key);\n\nvar verificationResult = verifier.verify();\n\nSystem.out.println(\"is valid?: \" + verificationResult.isValid());\n\nSystem.out.println(\"Optional address(bech32): \" + verificationResult.getAddress(AddressFormat.TEXT).orElseThrow());\n\nSystem.out.println(\"Message: \" + result.getMessage(TEXT));\n```\nproduces\n```\nis valid?: true\nOptional address(bech32): stake1uxur40ehpg2gwr7l6mxtxhut8e32drjxtmg7p9k95m6mn4s0tdy6k\nMessage: This is a test message\n```\n\n# Caveats / Notes\n- parser is strict, meaning it won't be possible to extract / get various fields if a CIP-30 signature is invalid, alternatively one can develop one with lenient parsing.\n\n", "release_dates": ["2023-10-01T12:15:16Z", "2023-08-18T11:08:21Z", "2023-08-17T14:46:55Z", "2023-08-17T12:31:21Z", "2023-05-19T14:23:04Z", "2022-11-25T15:19:43Z"]}, {"name": "CIPs", "description": null, "language": "JavaScript", "license": {"key": "cc-by-4.0", "name": "Creative Commons Attribution 4.0 International", "spdx_id": "CC-BY-4.0", "url": "https://api.github.com/licenses/cc-by-4.0", "node_id": "MDc6TGljZW5zZTI1"}, "readme": "## Cardano Improvement Proposals (CIPs)\n\nA [Cardano Improvement Proposal (CIP)](./CIP-0001) is a formalised design document for the Cardano community and the name of the process by which such documents are produced and listed. A CIP  provides information or describes a change to the Cardano ecosystem, processes, or environment concisely and in sufficient technical detail. In this CIP, we explain what a CIP is; how the CIP process functions; the role of the CIP Editors; and how users should go about proposing, discussing and structuring a CIP.\n\nThe Cardano Foundation intends CIPs to be the primary mechanisms for proposing new features, collecting community input on an issue, and documenting design decisions that have gone into Cardano. Plus, because CIPs are text files in a versioned repository, their revision history is the historical record of significant changes affecting Cardano.\n\n> **Note** For new CIP, a reference template is available in [.github/CIP-TEMPLATE.md](.github/CIP-TEMPLATE.md)\n\n## Cardano Problem Statements (CPS)\n\nA [Cardano Problem Statement (CPS)](./CIP-9999) is a formalised document for the Cardano ecosystem and the name of the process by which such documents are produced and listed. CPSs are meant to complement CIPs and live side-by-side in the CIP repository as first-class citizens.\n\n> **Note** For new CPS, a reference template is available in [.github/CPS-TEMPLATE.md](.github/CPS-TEMPLATE.md)\n\n## Communication Channels\n\nExtend or discuss \u2018ideas\u2019 in the [Developer Forums](https://forum.cardano.org/c/developers/cips/122), Cardano\u2019s Official [Developer Telegram Group](https://t.me/CardanoDevelopersOfficial) or in `#developers` in Cardano Ambassadors Slack.\n\nCIP editors will review discussions and progress in bi-weekly meetings held [on Discord](https://discord.gg/Jy9YM69Ezf), then transcribe and summarise them [in the BikweeklyMeetings folder](https://github.com/cardano-foundation/CIPs/tree/master/BiweeklyMeetings).\n\nCIP Editors meetings are public, recorded, and [published on Youtube](https://www.youtube.com/playlist?list=PL831pmH4tfw1YkMK4FhBzoHyuSaadjdxn): do join and participate in discussions/PRs of significance to you.\n\n> **Note** To facilitate browsing and information sharing for non-Github users, an auto-generated site is also provided at [cips.cardano.org](https://cips.cardano.org/).\n\n## Cardano Improvement Proposals (CIP)\n\n| #    | Title | Status |\n| ---- | --- | --- |\n| 0001 | [CIP process](./CIP-0001/) | Active |\n| 0002 | [Coin Selection Algorithms for Cardano](./CIP-0002/) | Active |\n| 0003 | [Wallet key generation](./CIP-0003/) | Active |\n| 0004 | [Wallet Checksums](./CIP-0004/) | Proposed |\n| 0005 | [Common Bech32 Prefixes](./CIP-0005/) | Active |\n| 0006 | [Stake Pool Extended Metadata](./CIP-0006/) | Draft |\n| 0007 | [Curve Pledge Benefit](./CIP-0007/) | Proposed |\n| 0008 | [Message Signing](./CIP-0008/) | Draft |\n| 0009 | [Protocol Parameters (Shelley Era)](./CIP-0009/) | Active |\n| 0010 | [Transaction Metadata Label Registry](./CIP-0010/) | Active |\n| 0011 | [Staking key chain for HD wallets](./CIP-0011/) | Active |\n| 0012 | [On-chain stake pool operator to delegates communication](./CIP-0012/) | Draft |\n| 0013 | [Cardano URI Scheme](./CIP-0013/) | Proposed |\n| 0014 | [User-Facing Asset Fingerprint](./CIP-0014/) | Active |\n| 0015 | [Catalyst Registration Transaction Metadata Format](./CIP-0015/) | Active |\n| 0016 | [Cryptographic Key Serialisation Formats](./CIP-0016/) | Active |\n| 0017 | [Cardano Delegation Portfolio](./CIP-0017/) | Active |\n| 0018 | [Multi-Stake-Keys Wallets](./CIP-0018/) | Draft |\n| 0019 | [Cardano Addresses](./CIP-0019/) | Active |\n| 0020 | [Transaction message/comment metadata](./CIP-0020/) | Active |\n| 0021 | [Transaction requirements for interoperability with hardware wallets](./CIP-0021/) | Draft |\n| 0022 | [Pool operator verification](./CIP-0022/) | Active |\n| 0023 | [Fair Min Fees](./CIP-0023/) | Proposed |\n| 0024 | [Non-Centralizing Rankings](./CIP-0024/) | Proposed |\n| 0025 | [Media Token Metadata Standard](./CIP-0025/) | Active |\n| 0026 | [Cardano Off-Chain Metadata](./CIP-0026/) | Draft |\n| 0027 | [CNFT Community Royalties Standard](./CIP-0027/) | Draft |\n| 0028 | [Protocol Parameters (Alonzo Era)](./CIP-0028/) | Active |\n| 0029 | [Phase-1 Monetary Scripts Serialization Formats](./CIP-0029/) | Active |\n| 0030 | [Cardano dApp-Wallet Web Bridge](./CIP-0030/) | Active |\n| 0031 | [Reference Inputs](./CIP-0031/) | Active |\n| 0032 | [Inline Datums](./CIP-0032/) | Active |\n| 0033 | [Reference Scripts](./CIP-0033/) | Active |\n| 0034 | [Chain ID Registry](./CIP-0034/) | Draft |\n| 0035 | [Plutus Core Evolution](./CIP-0035) | Active |\n| 0036 | [Catalyst Registration Transaction Metadata Format](./CIP-0036) | Proposed |\n| 0037 | [Dynamic Saturation Based on Pledge](./CIP-0037) | Proposed |\n| 0040 | [Collateral Output](./CIP-0040) | Active |\n| 0042 | [New Plutus Builtin: serialiseBuiltinData](./CIP-0042) | Active |\n| 0045 | [Decentralized WebRTC dApp-Wallet Communication](./CIP-0045) | Active |\n| 0049 | [ECDSA and Schnorr signatures in Plutus Core](./CIP-0049) | Proposed |\n| 0050 | [Pledge Leverage-Based Staking Rewards](./CIP-0050) | Proposed |\n| 0052 | [Cardano Audit Best Practice Guidelines](./CIP-0052) | Proposed |\n| 0054 | [Cardano Smart NFTs](./CIP-0054) | Draft |\n| 0055 | [Protocol Parameters (Babbage Era)](./CIP-0055) | Active |\n| 0057 | [Plutus Smart-Contract Blueprint](./CIP-0057) | Active |\n| 0058 | [Plutus Bitwise Primitives](./CIP-0058) | Proposed |\n| 0059 | [Terminology Surrounding Core Features](./CIP-0059) | Active |\n| 0060 | [Music Token Metadata](./CIP-0060) | Active |\n| 0067 | [Asset Name Label Registry](./CIP-0067) | Proposed |\n| 0068 | [Datum Metadata Standard](./CIP-0068) | Proposed |\n| 0069 | [Plutus Script Type Uniformization](./CIP-0069) | Proposed |\n| 0071 | [Non-Fungible Token (NFT) Proxy Voting Standard](./CIP-0071) | Proposed |\n| 0072 | [DApp Registration](./CIP-0072) | Proposed |\n| 0074 | [Set min-pool-cost to 0](./CIP-0074) | Proposed |\n| 0075 | [Fair Stake Pool Rewards](./CIP-0075) | Proposed |\n| 0080 | [Transaction Serialization Deprecation Cycle](./CIP-0080) | Active |\n| 0082 | [Improved Rewards Scheme Parameters](./CIP-0082) | Proposed |\n| 0083 | [Encrypted Transaction message/comment metadata (Addendum to CIP-0020)](./CIP-0083) | Active |\n| 0084 | [Cardano Ledger Evolution](./CIP-0084) | Active |\n| 0085 | [Sums-of-products in Plutus Core](./CIP-0085) | Proposed |\n| 0086 | [NFT Metadata Update Oracles](./CIP-0086) | Proposed |\n| 0088 | [Token Policy Registration](./CIP-0088) | Proposed |\n| 0093 | [Authenticated Web3 HTTP requests](./CIP-0093) | Proposed |\n| 0094 | [SPO On-chain Polls](./CIP-0094) | Active |\n| 0095 | [Web-Wallet Bridge - Conway ledger era](./CIP-0095) | Active |\n| 0099 | [Proof of Onboarding](./CIP-0099) | Active |\n| 0100 | [Governance Metadata](./CIP-0100) | Proposed |\n| 0101 | [Integration of keccak256 into Plutus](./CIP-0101) | Proposed |\n| 0102 | [Royalty Datum Metadata](./CIP-0102) | Proposed |\n| 0105 | [Conway Era Key Chains for HD Wallets](./CIP-0105) | Proposed |\n| 0109 | [Modular Exponentiation Built-in for Plutus Core](./CIP-0109) | Proposed |\n| 0110 | [Plutus v1 compatible script references](./CIP-0110) | Proposed |\n| 0381 | [Plutus Support for Pairings Over BLS12-381](./CIP-0381) | Proposed |\n| 1694 | [A proposal for entering the Voltaire phase](./CIP-1694) | Proposed |\n| 1852 | [HD (Hierarchy for Deterministic) Wallets for Cardano](./CIP-1852/) | Active |\n| 1853 | [HD (Hierarchy for Deterministic) Stake Pool Cold Keys for Cardano](./CIP-1853/) | Active |\n| 1854 | [Multi-signatures HD Wallets](./CIP-1854/) | Draft |\n| 1855 | [Forging policy keys for HD Wallets](./CIP-1855/) | Active |\n| 9999 | [Cardano Problem Statements](./CIP-9999/) | Active |\n\n<p align=\"right\"><i>Last updated on 2024-02-08</i></p>\n\n> \ud83d\udca1\u2003For more details about CIP statuses, refer to [CIP-0001](./CIP-0001).\n\n### Proposals Under Review (CIP)\n\nBelow are listed tentative CIPs still under discussion with the community. They are listed below for easing navigation and tentatively allocating numbers to avoid later clashes.\n\n| #     | Title |\n| ----- | --- |\n| 0038? | [Arbitrary Script as Native Script Spending Conditions](https://github.com/cardano-foundation/CIPs/pull/309)\n| 0039? | [Language Annotated Address](https://github.com/cardano-foundation/CIPs/pull/310) |\n| 0056? | [Treasury Donation](https://github.com/cardano-foundation/CIPs/pull/269) |\n| 0062? | [Governance API for dApp Connectors](https://github.com/cardano-foundation/CIPs/pull/296) |\n| 0073? | [Oracle Datum Standard](https://github.com/cardano-foundation/CIPs/pull/357) |\n| 0076? | [Hash-Checked Data](https://github.com/cardano-foundation/CIPs/pull/363) |\n| 0077? | [Verified Stake Pool Identity](https://github.com/cardano-foundation/CIPs/pull/361) |\n| 0079? | [Implement Ouroboros Leios to increase Cardano throughput](https://github.com/cardano-foundation/CIPs/pull/379) |\n| 0087? | [Maybe Datum](https://github.com/cardano-foundation/CIPs/pull/440) |\n| 0089? | [Beacon Tokens & Distributed Dapps](https://github.com/cardano-foundation/CIPs/pull/466) |\n| 0090? | [Extendable dApp-Wallet Web Bridge](https://github.com/cardano-foundation/CIPs/pull/462/) |\n| 0091? | [Don't force Built-In functions](https://github.com/cardano-foundation/CIPs/pull/459) |\n| 0092? | [First-class errors in Plutus](https://github.com/cardano-foundation/CIPs/pull/469) |\n| 0096? | [On-chain dApp Certification Metadata](https://github.com/cardano-foundation/CIPs/pull/499) |\n| 0097? | [Representing the Script Context as a SOP term](https://github.com/cardano-foundation/CIPs/pull/507) |\n| 0103? | [Web-Wallet Bridge - Bulk transaction signing](https://github.com/cardano-foundation/CIPs/pull/587) |\n| 0104? | [Web-Wallet Bridge - Account public key](https://github.com/cardano-foundation/CIPs/pull/588) |\n| 0106? | [Web-Wallet Bridge - Mutlisig wallets](https://github.com/cardano-foundation/CIPs/pull/617) |\n| 0107? | [URI Scheme - Block and transaction objects](https://github.com/cardano-foundation/CIPs/pull/635) |\n| 0108? | [Governance Metadata - Governance Actions](https://github.com/cardano-foundation/CIPs/pull/632) |\n| 0111? | [Web-Wallet Bridge - Wallet Transaction Caching](https://github.com/cardano-foundation/CIPs/pull/733) |\n| 0112? | [Observe script type](https://github.com/cardano-foundation/CIPs/pull/749) |\n| 0113? | [Programmable token-like assets](https://github.com/cardano-foundation/CIPs/pull/444) |\n| 0114? | [CBOR Tags Registry](https://github.com/cardano-foundation/CIPs/pull/752) |\n| 0115? | [CBOR tag definition - ED25519-BIP32 Keys](https://github.com/cardano-foundation/CIPs/pull/753) |\n\n\n<p align=\"right\"><i>Last updated on 2024-02-08</i></p>\n\n## Cardano Problem Statements (CPS)\n\n| #    | Title | Status |\n| ---- | --- | --- |\n| 0005 | [Plutus Script Usability](./CPS-0005) | Open |\n| 0007 | [Voltaire era Governance](./CPS-0007) | Open |\n| 0010 | [Wallet Connectors](./CPS-0007) | Open |\n| 0011 | [Universal JSON Encoding for Domain Types](./CPS-0011) | Open |\n| 0013 | [Better builtin data structures in Plutus](./CPS-0013) | Open |\n\n<p align=\"right\"><i>Last updated on 2024-03-01</i></p>\n\n> \ud83d\udca1\u2003For more details about CPS statuses, refer to [CIP-9999](./CIP-9999).\n\n### Proposals Under Review (CPS)\n\nBelow are listed tentative CPSs still under discussion with the community. They are listed below for easing navigation and also tentatively allocating numbers to avoid clashes later on.\n\n| #     | Title |\n| ----- | --- |\n| 0001? | [Metadata Discoverability and Trust](https://github.com/cardano-foundation/CIPs/pull/371) |\n| 0004? | [Spending Script Redundant Execution](https://github.com/cardano-foundation/CIPs/pull/418/) |\n| 0006? | [Governance Security](https://github.com/cardano-foundation/CIPs/pull/491) |\n| 0008? | [Domain Name Resolution](https://github.com/cardano-foundation/CIPs/pull/605) |\n| 0009? | [Coin Selection Including Native Tokens](https://github.com/cardano-foundation/CIPs/pull/611) |\n| 0012? | [Query Layer Standardization](https://github.com/cardano-foundation/CIPs/pull/625) |\n| 0014? | [Register of CBOR Tags](https://github.com/cardano-foundation/CIPs/pull/751) |\n\n<p align=\"right\"><i>Last updated on 2024-03-01</i></p>\n\n## Stalled / Waiting For Authors\n\nThe following list contains proposals that have been under review and for which actions are now awaiting updates from their original authors. Proposals stalled for several months without any updates from their authors and will eventually be closed. However, authors are invited to re-open pull requests or open new ones should they want to bring the discussion back to life.\n\n- [UPLC Serialization Optimizations](https://github.com/cardano-foundation/CIPs/pull/314)\n- [Address Resolution Through DNS](https://github.com/cardano-foundation/CIPs/pull/319)\n- [Transferring Stake Pool Ownership](https://github.com/cardano-foundation/CIPs/pull/276)\n- [Extended Local Chain Sync Protocol](https://github.com/cardano-foundation/CIPs/pull/375)\n- [Tiered Pricing Protocol](https://github.com/cardano-foundation/CIPs/pull/381)\n- [Properly burning NFTs/tokens](https://github.com/cardano-foundation/CIPs/pull/392)\n- [On-chain Transaction Chaining](https://github.com/cardano-foundation/CIPs/pull/508)\n- [Merklised Plutus Scripts](https://github.com/cardano-foundation/CIPs/pull/385)\n- [Rejected Ideas w.r.t Spending Policies](https://github.com/cardano-foundation/CIPs/pull/336)\n\n<p align=\"right\"><i>Last updated on 2023-06-09</i></p>\n\n## Editors\n\n| Matthias Benkort <br/> [@KtorZ][] | Sebastien Guillemot <br/> [@SebastienGllmt][] | Robert Phair <br/> [@rphair][] | Ryan Williams <br/> [@Ryun1][] | Adam Dean <br/> [@Crypto2099][] |\n| ---                               | ---                                           | ---                            | ---                            | ---                             |\n\n[@KtorZ]: https://github.com/KtorZ\n[@SebastienGllmt]: https://github.com/SebastienGllmt\n[@rphair]: https://github.com/rphair\n[@Ryun1]: https://github.com/Ryun1\n[@Crypto2099]: https://github.com/Crypto2099\n\n", "release_dates": []}, {"name": "dab", "description": "Decentralized applicaton backend for Cardano.", "language": "Haskell", "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "readme": "# dab\n\n[![GitHub Actions](https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2Fcardano-foundation%2Fdab%2Fbadge&style=flat-square)](https://github.com/cardano-foundation/dab/actions/workflows/ci.yaml)\n\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/f/ff/ADA_Cardano_Logo.png\" width=\"76\" align=\"right\" height=\"70\">\n\n\n<br/>\n\n<p align=\"center\">Decentralized application backend for Cardano.</p>\n<p align=\"center\">\n  <a href=\"#about\">About</a> \u2022\n  <a href=\"#installation\">Installation</a> \u2022\n  <a href=\"#usage\">Usage</a> \u2022\n  <a href=\"#contributing\">Contributing</a>\n</p>\n\n<br/>\n\n# About\n\nDecentralized application backend (dab) is a toolset that help developers interact with the Cardano blockchain and its smart validators.\n\nAt its core, the component called `chain-watcher` is following the chain looking for specific events expected by the application backend. It supports different providers to access the Cardano network.\n\n# Community\n\nDecentralized application backend (dab) is a community project. We are releasing this minimal viable product in a modular form (at the moment it supports <a href=\"https://blockfrost.io/\">Blockfrost</a> as a provider), we hope that it will gather developer community momentum and we will see many more different providers such as Oura, Koios or Ogmios emerge from the development community.\n\nWe strongly encourage community members to apply for Project Catalyst funding to make this project their own and better.\n\n# Installation\n\n## Building with Nix\n\nNix is the prefered way to build the chain-watcher and its components.\n\n```command\nnix-build -A chain-watcher.components.exes.chain-watcher-blockfrost\n```\n\n## Building with Docker\n\nPlease see <a href=\"docs/Docker.md\">docs/Docker.md</a>.\n\n# Usage\n\n## Running the application backend demo\n\nTo run the application backend demo :zap:, do the following:\n\n```command\nnix-shell\nexport BLOCKFROST_TOKEN_PATH=~/.blockfrost.testnet.token\ncabal run chain-watcher-blockfrost\n```\nView the demo on http://localhost:8282/demo/index.html\n\n## Demo of demo\n\n<img src=\".github/workflows/demo.gif\">\n\n## Client API\n\n### Register new client\n\nTo register a new client on the chain-watcher.\n\n```command\ncid=\"$( curl -q -X POST -v localhost:8282/clients/new | jq -r)\"\n```\n\n### Remove client\n\nTo remove an exising client on the chain-watcher.\n\n```command\ncurl -X POST -v localhost:8282/clients/remove/${cid}\n```\n\n### Subscribe to event\n\nTo subscribe your client to a specific event on the chain-watcher.\n\n```command\ncurl \\\n  -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -v localhost:8282/clients/request/${cid} \\\n  --data '{\"contents\":\"1075a1c98dbdf3486ec8f5050c84da30a057cb79ae0ce6d03d157c719c559332\",\"tag\":\"TransactionStatusRequest\"}'\n```\n\n### Recurring request\n\nTo subscribe your client to a reoccuring specific event on the chain-watcher.\n\n```command\ncurl -X POST --data '{\"contents\":{\"tag\":\"Ping\"},\"tag\":\"Recurring\"}' -H \"Content-Type: application/json\" -v localhost:8282/clients/request/${cid}\n```\n\n### Address change request\n\nTo change your address event watching.\n\n```command\ncurl -X POST --data '{\"contents\":\"addr_test1wpzjtlyp6v4qx6gzjm4zc7lsdufw597507y060qhk84vpjsjd625n\",\"tag\":\"AddressFundsRequest\"}' -H \"Content-Type: application/json\" -v localhost:8282/clients/request/${cid}\n```\n\n### Follow server-sent event stream\n\nTo follow on the even stream from the chain-watcher.\n\n```command\ncurl -v -N --http2 -H \"Accept:text/event-stream\" localhost:8282/sse/${cid}\n```\n\n# Contributing\n\nWe are looking forward to your contributions!\n\n:bulb: See <a href=\"CONTRIBUTING.md\">Contributing</a> and <a href=\"CODE_OF_CONDUCT.md\">Code of conduct</a> for more information about how to contribute your code.\n", "release_dates": ["2022-03-24T11:20:03Z"]}, {"name": "developer-portal", "description": "The Cardano Developer Portal", "language": "JavaScript", "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "readme": "[![Netlify Status](https://api.netlify.com/api/v1/badges/8d3fae14-1136-4a30-8224-f5602a5a2360/deploy-status)](https://app.netlify.com/sites/staging-dev-portal/deploys)\n\n# Cardano Developer Portal\n\nWe wanted to build a developer portal as open and inclusive as Cardano. A portal that is in the hands of the Cardano community and can be constantly evolved by it.\n\nFor this to be successful, the portal relies on your contributions, and the fact that you are reading this text probably means that you have something to contribute, even if you are not a Developer.\n\nPlease find a detailed installation guide on [developers.cardano.org/docs/portal-contribute/](https://developers.cardano.org/docs/portal-contribute#installation). \n\n\n## Requirements:  \n\n[Node.js](https://nodejs.org/en/download/) version >= 16.14\n[Yarn](https://yarnpkg.com/en/) version >= 1.5  \nOn macOS you also need Xcode and Command Line Tools.\n\n\n## Clone the repo\n\n```console\ngit clone https://github.com/cardano-foundation/developer-portal.git\n```\n\n## Navigate into the folder\n\n```console\ncd developer-portal\n```\n\n## Install all dependencies\n\n```console\nyarn install\n```\n\n## Production build \n\nCreate at least once a production build (as this pulls missing files)\n\n```console\nyarn build\n```\n\n## Local development\n\n```console\nyarn start\n```\n\nThis command starts a local development server and open up a browser window. Most changes are reflected live without having to restart the server.\n\n## Project structure \n\nPlease find the project structure and more detailed information on [developers.cardano.org/docs/portal-contribute/](https://developers.cardano.org/docs/portal-contribute/#project-structure).\n", "release_dates": ["2021-07-13T12:16:49Z"]}, {"name": "docs-cardano-org", "description": "Documentation for Cardano", "language": "CSS", "license": null, "readme": null, "release_dates": []}, {"name": "fine-types", "description": "FineTypes is an interface description language (IDL) focussing on types", "language": "Haskell", "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "readme": "# FineTypes\n\n\ud83d\udea7 WORK IN PROGRESS \ud83d\udea7\n\n## Overview\n\nFineTypes is an interface description language (IDL) focussing on types. You can use it to specify data types that are interoperable between different programming languages.\n\nExample:\n\n```\nTxOut = Addr \u00d7 Value \u00d7 (Datum \u228e DataHash)? \u00d7 Script?;\n```\n\nFineTypes allows you to\n\n* Define data types concisely using mathematical notation.\n* Map between data types using algebraic transformations, such as `(A + B) \u00d7 C = (A \u00d7 C) + (B \u00d7 C)`.\n* Export type definitions to different programming languages, currently:\n    * Haskell\n* Export type definitions to different data schemas, currently\n    * OpenAPI: Schema Objects\n\nFineTypes was originally conceived to be able to specify all types in the [Cardano ledger specification][cardano-ledger] in a way that is both machine readable and visually matches the PDF document.\n\n## Contents\n\nThis repository contains\n\n* The `fine-types` Haskell package and executable.\n* The `cardano-ledger-types` package containing a reference specification of the types from the [Cardano ledger specification][cardano-ledger] in different eras (Shelley, \u2026, Babbage).\n\n  [cardano-ledger]: https://github.com/input-output-hk/cardano-ledger/releases/latest/\n\n", "release_dates": []}, {"name": "hydra-java", "description": "Incubation project for Java client for Hydra L2 solution.", "language": "Java", "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "readme": "# hydra-java\n\n[![Build](https://github.com/cardano-foundation/hydra-java/actions/workflows/maven-build.yml/badge.svg)](https://github.com/cardano-foundation/hydra-java/actions/workflows/maven-build.yml)\n[![License](https://img.shields.io:/github/license/cardano-foundation/hydra-java?label=license)](https://github.com/cardano-foundation/hydra-java/blob/master/LICENSE)\n[![Discord](https://img.shields.io/discord/1022471509173882950)](https://discord.gg/4WVNHgQ7bP)\n\nThis is an **incubator project**, which simplifies working with Hydra from java applications. Hydra is an isomorphic state machine L2 network, which works seamlessly with Cardano.\n\n## Hydra\nYou can access documentation regarding Hydra here: https://hydra.family/head-protocol/. We recommend especially to follow QuickStart on devnet network (https://hydra.family/head-protocol/docs/getting-started/quickstart) and (https://hydra.family/head-protocol/docs/getting-started/demo/with-docker) as well as reading (https://hydra.family/head-protocol/docs/tutorial/using_hydra/using-hydra-part-3)\n\nHydra API specs: https://hydra.family/head-protocol/api-reference\n\nHydra State Machine Diagram: https://hydra.family/head-protocol/core-concepts/behavior\n\n## Requirements\n- JDK17\n- maven3\n\n## Building\n```\ngit clone https://github.com/cardano-foundation/hydra-java\ncd hydra-java\nmvn clean install\n```\n\n## Running integration tests\n```shell\nmvn clean verify -P with-integration-tests\n```\n\n## Version Compatibility Matrix\n\n| Hydra Version | Library Version | Cardano Client Library Version | JDK VERSION |\n|---------------|-----------------|--------------------------------|-------------|\n| 0.10.x        | 0.0.6           | 0.4.x                          | JDK 11      |\n| 0.10.x        | 0.0.7           | 0.5.x                          | JDK 11      |\n| 0.10.x        | 0.0.8           | 0.5.x                          | JDK 11      |\n| 0.13.x        | 0.0.9           | 0.5.x                          | JDK 17      |\n| 0.13.x        | 0.0.10          | 0.5.x                          | JDK 17      |\n\n## Dependency\n```xml\n<dependencies>\n    <dependency>\n        <groupId>org.cardanofoundation</groupId>\n        <artifactId>hydra-java-core</artifactId>\n        <version>0.0.10</version>\n    </dependency>\n    <dependency>\n        <groupId>org.cardanofoundation</groupId>\n        <artifactId>hydra-java-client</artifactId>\n        <version>0.0.10</version>\n    </dependency>\n    <dependency>\n        <groupId>org.cardanofoundation</groupId>\n        <artifactId>hydra-java-cardano-client-lib-adapter</artifactId>\n        <version>0.0.10</version>\n    </dependency>\n    <dependency>\n        <groupId>org.cardanofoundation</groupId>\n        <artifactId>hydra-java-reactive-reactor-client</artifactId>\n        <version>0.0.10</version>\n    </dependency>\n</dependencies>\n```\n\n## Project Missing features / functionality\nThe current version may not contain exactly what you need. If there is a missing feature / functionality, we happily accept pull requests. Ideally please discuss with us the idea first, file an issue and let's agree on design of it. Should pull request not be possible we are open to do the work for you provided the github issue is raised and documented well enough to understand it. \n\n## Additional Docs\n- [CODE_OF_CONDUCT.md](CODE_OF_CONDUCT.md)\n- [SECURITY.md](SECURITY.md)\n- [CONTRIBUTING.md](CONTRIBUTING.md)\n- [CHANGELOG.md](CHANGELOG.md)\n\n## Modules\n\n| Submodule                  | Goal / Description                                                         |\n|----------------------------|----------------------------------------------------------------------------|\n| hydra-java-core            | main classes  / code                                                       |\n| hydra-java-client          | low level web socket client                                                |\n| reactive-reactor-client    | experimental request / response high level reactive client (using reactor) |\n| cardano-client-lib-adapter | bindings to BloxBean's cardano-client lib                                  |\n| test-containers-support    | utilities to assist in testing via test containers project                 |\n\n## Example usage (client)\n\nFor examples please refer to integration tests in hydra-java-client and hydra-java-reactive-reactor-client projects.\n", "release_dates": ["2023-11-06T12:09:27Z", "2023-10-19T10:16:51Z", "2023-10-16T09:19:28Z", "2023-10-13T10:44:48Z", "2023-09-28T13:29:14Z", "2023-08-18T09:58:41Z", "2023-08-18T09:35:17Z", "2023-08-18T09:21:21Z", "2023-04-18T07:33:15Z"]}, {"name": "hydra-voting-poc", "description": "Hydra Voting PoC with Catalyst", "language": "Java", "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "readme": "# Hydra for Voting Proof-of-Concept\n\nCheck [Project Charter](./docs/project-charter.md) for details about this project\n\n![image](https://user-images.githubusercontent.com/335933/219307601-7c5fc745-c19e-489b-a63e-586fd8ee8e8d.png)\n![Discord](https://img.shields.io/discord/1022471509173882950)\n\n### Problem statement\nCurrently IOG is the only party doing tallying of the votes (meaning checking result of the votes). We would like to see how Hydra could be used to decentralise this process and allow more members (ideally from Cardano community) to tally / count Catalyst votes independently while reaching the same final verdict.\n\n### Idea\nUsing Hydra experiment with a distributed Catalyst tally process such that more parties can attest and verify validity of Catalyst Fund results.\n\n### Slides\n- Hydra Voting PoC Kick-Off: https://docs.google.com/presentation/d/1oVB_J3eBKbhWc_yAr5w8cFz2TpL2Zngv8pZjK6Gtruk/edit#slide=id.g124655d21b1_2_509\n- Rough Plan and focusing on M1 first: https://docs.google.com/presentation/d/16wnWy9Br0ewTJMZefeGBkNEj3jDyfjif/edit#slide=id.p1\n- 2023 M1 Status Updates: https://docs.google.com/presentation/d/1ee7vQLIUcoDfHeU6ln_-_YlKvXM-5WvM/edit#slide=id.g213a58a9c58_1_24\n\n### Milestones\n- M1 - Tally ca 1 mln Catalyst votes (as in compatible with Catalyst domain model) with min 3 and max 10 Hydra Head operators, perform distributed tally process and obtain only one result\n    - \ud83d\udfe2 Port Merkle Tree from Hydra to Aiken (https://github.com/input-output-hk/hydra/blame/master/plutus-merkle-tree/src/Plutus/MerkleTree.hs) -> https://github.com/aiken-lang/trees/pull/1/files\n    - \ud83d\udfe2 Write simple on chain contract that counts votes (https://github.com/cardano-foundation/hydra-voting-poc/blob/master/on-chain/validators/voting.ak) \n    - \ud83d\udfe2 Write fake votes generator compatible with Catalyst domain model\n    - \ud83d\udfe2 Write and run on chain contract counting unencrypted Catalyst votes with off-chain code (java) without merkle trees on L1\n    - \ud83d\udfe2 Use one of Open Source Merkle Trees implementation in offchain infra or port our Merkle Tree to (Java / Scala / Kotlin) on L1\n    - \ud83d\udfe2 Spin up and run local dev Hydra Head network (devnet)\n    - \ud83d\udfe2 Develop PoC version of Hydra-Java-Client which allows us to easily access Hydra from java code: https://github.com/cardano-foundation/hydra-java-client\n    - \ud83d\udfe2 Port and run on chain contract counting unencrypted Catalyst votes with off-chain code on Hydra Dev network\n    - \ud83d\udfe2 Integrate merkle trees and vote batch creation and reduction contract on dev Hydra L2 network\n\nDemos:\n - M1 \n   - KW9 status update: https://drive.google.com/file/d/1NTKVCsRI7Teh1lRDTME6qQ5HhTlJuO95/view?usp=sharing\n   - KW12 status update: https://drive.google.com/file/d/16W3FB18pDWTqKtoaIzMzN7eL5Gn-wdO0/view?usp=sharing\n   - KW15 status update: https://drive.google.com/file/d/1aUwn9lbn0F9SF36XtOXogfYixj5I8Nl2/view?usp=sharing\n      \n![image](https://user-images.githubusercontent.com/335933/219307471-2b9a367c-2586-4fe5-92a7-97e582f35c12.png)\n\n- M2 - Since Catalyst votes are encrypted on jormungandr sidechain, we will be using Partial Homomorphic Encryption tally the votes in such a way that each Hydra Head Operator cannot tally alone but all operators only can tally together\n- M3 - Authentication for Hydra Head Operators via NFTs\n\n### Deployment\nWhile overall goal is that anybody could tally but intially we expect that IOG / Emurgo / CF will tally the votes using Hydra Heads. The idea is that we want to avoid in initial versions having to pay and lock up people funds for slashing (in case cheating by the group was detected).\n\nGeneral Statements:\n- M1: Since votes are handled in batches - they only way system can work is that votes are not duplicated, this means that votes votes coming from vote domain / (currently jormungandr sidechain) are already unique and deduplicated (since we won't have one big Merkle Tree but a lot of small ones).\n- Security assumptions: the current design of the system has currently security equal to 1 honest Hydra Head operator, meaning only if all Hydra Head Operators form a group and agree to .e.g. drop certain votes system could be compromised. There is an idea to explore in the future to use so called Mithril Committe on L1 that could also verify operation of Hydra Head Operators. Effectively this committee could independently tally the votes and publish their tally result on L1. This could increase security of the system with additional complexity of additional technology (Mithril) and Committe doing the work.\n- One of the problematic things mentioned in Problems / Questions section where we rely on one operator performing importing of votes, by extending Hydra and doing atomic transactions we can make sure that all Hydra Operator verify that 1 operator that performed importing of votes imported all votes. This can be enabled thanks to: atomic transactions (meaning that multiple transactions either all happen or all fail) and Hydra extension (to be developed) which allows to sign off and validate transaction by Hydra Head Opererator if and only iff the transactions are containing what they should contain. Note that for this to work fine we require that all Hydra Head operators have access to original Catalyst votes (which should not be a problem at all).\n\n## General Open Problems / Questions\n- Election: we would like to anybody could potentially run Hydra Head nodes but we do know that number of these people cannot exceed certain amount, e.g. 10\n- M1: if we separate voting from tallying not only from the business domain (which it is separated anyway) but also from technical point of view then votes in an encrypted form need to be imported by one Hydra Head Operator into a new network. Here we want to prevent votes to be ommitted or imported twice.\n- General: if jormungandr continues to be run in a private network for now, how will Hydra Head operators obtain access to individual votes (especially if they are outside of 3 founding entities)?\n\n- M2: How split the key in such a way that each operator only gets a part of the key\n- M2: How to count the votes together, in Hydra one operator needs to sign a transaction and all need to simply validate (full consensus)\n- If we ever submit votes directly to Hydra - how to assure that one operator being temporary offline won't disturb the whole voting session, one idea, hydra can deliver n x m signing, meaning we can configure Hydra such that only ca 80% of operators need to sign. Unless voters directly interact with Hydra network - this is not really a needed feature.\n- M2: Since Partial Homomorphic Encryption is CPU intensive, how can we actually run it in smart contract. Regardless of the fact that these are very resource intensitve tasks, right now there are no implementations for this available neither in Aiken nor in PlutusTx (to our knowledge)\n- General: Once we open up the tallying to all people, how can we in a decentralised way select Hydra Head Operators doing the tally process? One idea is that we conduct voting on L1 and Hydra Head operators + backup operators receive ca 1 to 2 years licence, such a license such cover operation for a few Catalyst rounds but question is whether people will want to participate in selection of Hydra Head Operators doing the tallying.\n- General: Currently Hydra does not support external transaction validation, meaning just like in Cardano transaction is automatically validated. External transaction validation could be useful in scenarios where a Hydra Head operator would also check validity of transaction against their off chain infrastructure.\n- Since so far in designs only one operator is doing initial voting import from one operator here are the ways to protect against double votes or omitting votes:\nSince so far in designs only one operator is doing initial voting import from one operator here are the ways to protect against double votes or omitting votes:\n  a) Use getUTxO request against Hydra node and EACH operator imports votes to smart contract if and only if other operator didn\u2019t import votes yet (risk: can getUTxO return inline datum info so we can connect this to an existing vote, another risk: race condition, diff between getUTxO answer and two operators import the same vote at the same time, let\u2019s not forget that getUTxO response is async)\n  b) Allow only one operator to import and then after the whole voting is done - each operator in the offchain can process all results and check if all votes have been included (check votes). If they find something which is not correct, they can call off results. They can submit fraud proof such hat a certain vote was not included into account\n  c) validate a vote that is being imported by a hydra operator only if and if it has not been imported before (hydra code could be checking this via external validation)\n  d) smart contract on Hydra could have a redeemer step that they \u201cApproved it\u201d meaning we kind of develop full consensus in the application layer (edited) \n", "release_dates": []}, {"name": "incentivized-testnet-stakepool-registry", "description": null, "language": "Standard ML", "license": null, "readme": "# Incentivized Testnet Stake Pool Meta Data Registry\n\n##  Background\nThis repository provides a means to register public stake pool meta data for the Incentivized Testnet. Successful registrations will result in the listing of a stake pool as a delegation option in all of the supported testnet wallets (Daedalus & Yoroi).\n\nAdding your stake pool to this registry is only one of several steps required to get your stake pool up and running. Please refer to the [testnet site](https://testnet.iohkdev.io/en/cardano/shelley/about/testnet-introduction/) for a description of the entire process.\n\nUse of this registry is subject to the following [usage policy](USAGE_POLICY.md)\n\n## Process\n\n#### New stake pool registration\n\nStake pool registrants will provide signed submissions in the form of Github pull requests into this testnet pool registry. Here they will be subject to automated checking for well-formedness and human vetting before being merged to master.\n\n#### Stake pool de-registration\n\nThis action does not require any changes to the registry -- the inactive pools are simply ignored.\n\n#### Updating existing entries\n\nStake pool registrants will provide signed submissions in the form of Github pull requests into this testnet pool registry. Here they will be subject to automated checking for well-formedness and human vetting before being merged to master.\n\n## Semantic content of registry entries\n\nEach entry contains the following information:\n\nname             | necessity | description\n---              | ---       | ---\n`owner`          | required  | subject identifier public key \n`name`           | required  | stake pool name\n`description`    | optional  | stake pool description\n`ticker`         | required  | stake pool ticker\n`homepage`       | required  | URL of the stake pool's web page\n`pledge_address` | required  | a pledge address\n\\-               | required  | signature (verifiable by the public key)\n\n:warning: The `owner` public key mentioned here **must match** your owner public key used for registering your stake pool on chain!\n\nPrecise entry validity rules are described in the following section.\n\n## Submission well-formedness rules\n\n1. Submissions shall consist of a single commit, directly off the master branch of the **incentivized-testnet-stakepool-registry** repository.\n\n2. Submissions are identified by the subject's Bech32-encoded Ed25519 public key (all lowercase).\n\n3. Submissions shall either add a new entry or modify one.\n\n4. Submissions shall involve (addition or modification) of exactly two files, under the **registry** subdirectory of the repository:\n   - the JSON submission entry file, with the `.json` extension (lowercase),\n   - the external signature of the file, with the `.sig` extension (lowercase).\n\n5. The file name part of both files must match the aforementioned encoded owner public key, up to character case (all lowercase).\n\n6. The external signature file must be a ed25519 signature of the content of the metadata JSON file.\n\n7. The `ticker` and `owner` must be unique in the registry.\n\n8. Contents of the JSON file:\n   1. Must be a JSON object, reasonably (non-offensively) formatted,\n   2. Must satisfy the following [JSON-schema](https://json-schema.org/):\n\n   ```json\n   {\n     \"title\": \"Stake-pool Metadata\",\n   \n     \"type\": \"object\",\n   \n     \"additionalProperties\": false,\n   \n     \"required\": [\n       \"owner\",\n       \"name\",\n       \"ticker\",\n       \"homepage\",\n       \"pledge_address\"\n     ],\n    \n     \"properties\": {\n       \"owner\": {\n         \"type\": \"string\",\n         \"format\": \"bech32\",\n         \"pattern\": \"^ed25519_pk1[qpzry9x8gf2tvdw0s3jn54khce6mua7l]+$\",\n         \"maxLength\": 70\n       },\n\n       \"name\": {\n         \"type\": \"string\",\n         \"minLength\": 1,\n         \"maxLength\": 50\n       },\n\n       \"description\": {\n         \"type\": \"string\",\n         \"minLength\": 1,\n         \"maxLength\": 255\n       },\n    \n       \"ticker\": {\n         \"type\": \"string\",\n         \"minLength\": 3,\n         \"maxLength\": 5,\n         \"pattern\": \"^[A-Z0-9]{3,5}$\"\n       },\n    \n       \"homepage\": {\n         \"type\": \"string\",\n         \"format\": \"uri\",\n         \"pattern\": \"^https://\"\n       },\n    \n       \"pledge_address\": {\n         \"type\": \"string\",\n         \"format\": \"bech32\",\n         \"pattern\": \"^addr1[qpzry9x8gf2tvdw0s3jn54khce6mua7l]+$\",\n         \"maxLength\": 64\n       }\n     }\n   }\n   ```\n\n## Step-by-Step Guides\n\nSee [Wiki](https://github.com/cardano-foundation/incentivized-testnet-stakepool-registry/wiki).\n", "release_dates": []}, {"name": "keria", "description": "KERI Agent in the cloud", "language": "Python", "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "readme": "# KERIA\n[![GitHub Actions](https://github.com/webOfTrust/keria/actions/workflows/python-app-ci.yml/badge.svg)](https://github.com/WebOfTrust/keria/actions)\n[![codecov](https://codecov.io/gh/WebOfTrust/keria/branch/main/graph/badge.svg?token=FR5CB2TPYG)](https://codecov.io/gh/WebOfTrust/keria)\n[![Documentation Status](https://readthedocs.org/projects/keria/badge/?version=latest)](https://keria.readthedocs.io/en/latest/?badge=latest)\n\nKERI Agent in the cloud\n\nSplit from KERI Core\n\n## KERIA Service Architecture\nHere we detail the components of a single KERIA instance. This architecture protects the host and the holder private keys. All client tasks/calls are signed 'at the edge', not in the hosted KERIA instance. Therefore, KERIA relies on the Signify protocol for all calls. The Architecture provides three endpoints for Signify clients to create their KERIA agents. The Agency (boot) endpoint establishes an agent. The API Handler and Message Router endpoints would be exposed to the internet for creating identifiers, receiving credentials, etc.\n![KERIA](https://github.com/WebOfTrust/keria/assets/681493/a64212ef-e343-428d-954f-1aa81222ae63)\n\n### Message Router\nThe Message Router receives external KERI protocol messages. These are KERI protocol messages for instance coordinating multi-sig, revoking credentials, etc. It routes these messages to the appropriate Agent(s). For instance a multisig message requires asynchronous waiting (for signature responses from other participants) and the message router would route those incoming KERI protocol responses to the appropriate agents.\nFrom Signify client calls, this service endpoint corresponds to the *http port* (default is 3902).\nThis enpoint allows all KERI clients (not just Signify) to interact in a seamless way.\n\n### The Agency\nThe Agency receives API requests (/boot requests) to provision agents. It is the central repository for initializing agents. \nThe Agency database persists all of the information to track the existing agents, allowing recovery on restart.\nFrom Signify clients calls, this service endpoint corresponds to the *boot port* (default is 3903).\nA common entry in the agency is the mapping between a managed AID and the agency that handles that managed AID.\n\n### API Handler\nThe API Handler receives agent API requests (/agent requests) including for Signify clients to create identifiers, receiving credentials, etc. All API calls are signed by the Signify client headers so that all calls are secure. \nThis API interacts with agents and those interactions are stored in the agent databases.\nFrom Signify clients calls, this service endpoint corresponds to the *admin port* (default is 3901).\n\n### Agents\nAgents act on behalf of their Signify clients. They don't have the secrets of the client. Instead, they handle all actions for the clients, other than secret/encryption/signing. However, Agents do have their own keys and do sign all of their messages BACK to the Signify client, so the client can verify that all messages received are from their agent.\nAgents use KERI HIO to handle all of the different asynchronous actions that are occuring. HIO is an efficient and scalable orchestration/processing mechanism that leverages queues, handlers, coroutines, etc.\nAll Agent db access is through the associated Agent.\n\n## Development\n\n### Setup\n\n* Ensure [Python](https://www.python.org/downloads/) `version 3.12.14+` is installed\n* Install [Keripy dependency](https://github.com/WebOfTrust/keripy#dependencies) (`libsodium 1.0.18+`)\n\n\n#### Build from source\n\n* Setup virtual environment:\n    ```bash\n    python3 -m venv venv\n    ```\n* Activate virtual environment:\n    ```bash\n    source venv/bin/activate\n    ```\n* Install dependencies:\n    ```bash\n    pip install -r requirements.txt\n    ```\n* Run agent:\n    ```bash\n    keria start --config-dir scripts --config-file demo-witness-oobis\n    ```\n\n#### Build with docker\n\n* Build KERIA docker image:\n    ```bash\n    make build-keria\n    ```\n\n\n### Running Tests\n\n* Install `pytest`:\n    ```bash\n      pip install pytest\n    ```\n\n* Run the test suites:\n    ```bash\n      pytest tests/\n    ```\n\n", "release_dates": []}, {"name": "keripy", "description": "Key Event Receipt Infrastructure - the spec and implementation of the KERI protocol", "language": "Python", "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "readme": "# Python Implementation of the KERI Core Libraries\n\nProject Name:  keripy\n\n[![PyPi](https://img.shields.io/pypi/v/keri.svg)](https://pypi.org/project/keri/)\n[![GitHub Actions](https://github.com/webOfTrust/keripy/actions/workflows/python-app-ci.yml/badge.svg)](https://github.com/WebOfTrust/keripy/actions)\n[![codecov](https://codecov.io/gh/WebOfTrust/keripy/branch/main/graph/badge.svg?token=FR5CB2TPYG)](https://codecov.io/gh/WebOfTrust/keripy)\n[![https://pypi.org/project/keri/](https://img.shields.io/pypi/pyversions/keri.svg)](https://pypi.org/project/keri/)\n[![Documentation Status](https://readthedocs.org/projects/keripy/badge/?version=latest)](https://keripy.readthedocs.io/en/latest/?badge=latest)\n\n## Installation\n\n### Local installation - build from source\nOnce all dependencies are installed and working then run:\n\n`$ python3 -m pip install -e ./`\n\nThen you can run \n\n`$ kli version` \n\nto get a version string similar to the following: \n\n`1.0.0`\n\n### Local installation - Docker build\nRun `make build-keri` to build your docker image.\n\nThen run `docker run -it gleif/keri /bin/bash` and you can run `kli version` from within the running container to play with KERIpy.\n\n### Dependencies\n#### Binaries\n\npython 3.10.4+\nlibsodium 1.0.18+\n\n\n#### python packages\nlmdb 0.98+\npysodium 0.7.5+\nblake3 0.1.5+\nmsgpack 1.0.0+\nsimplejson 3.17.0+\ncbor2 5.1.0+\n\n\n```shell\n$ pip3 install -U lmdb pysodium blake3 msgpack simplejson cbor2\n```\n\nor separately\n\n```shell\n$ pip3 install -U lmdb\n$ pip3 install -U pysodium\n$ pip3 install -U blake3\n$ pip3 install -U msgpack\n$ pip3 install -U simplejson\n$ pip3 install -U cbor2\n```\n\n\n## Development\n\n### Setup\n* Ensure Python 3.10.4 is present along with venv and dev header files;\n* Setup virtual environment: `python3 -m venv keripy`\n* Activate virtual environment: `source keripy/bin/activate`\n* Setup dependencies: `pip install -r requirements.txt`\n\n### Testing\n* Install pytest: `pip install pytest`\n\n* Run the test suites:\n\n```shell\npytest tests/ --ignore tests/demo/\npytest tests/demo/\n```\n\n## Building Documentation in `/docs`\n* Install sphinx: \n  * `$ pip install sphinx`\n  * `$ pip install myst-parser`\n* Build with Sphinx in `/docs`: \n  * `$ make html`\n\n", "release_dates": []}, {"name": "ledger-app-cardano", "description": "Cardano Ledger App for Ledger Nano S", "language": "C", "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "readme": "# Cardano Ledger App\n\nCardano Ledger App for Ledger Nano S\n\n\n## Building\n\n### Loading the app\n\n`make load`\n\nBuilds and loads the application into connected device. Just make sure to close the Ledger app on the device before running the command.\n\n\n### Debug version\n\nUncomment `#DEFINE+=DEVEL` and `#DEFINE+=HEADLESS` in Makefile. Then `make clean load`\n\n### Setup\n\nMake sure your:\n- SDK >= 1.5.2\n- MCU >= 1.6\n\nEnvironment setup and developer documentation is sufficiently provided in Ledger\u2019s [Read the Docs](http://ledger.readthedocs.io/en/latest/). \n\n### Setting udev rules\n\nIn some Linux distros (e.g. Ubuntu), you might need to setup udev rules before your device can communicate with the system.\n\nOn Ubuntu, create a file under `/etc/udev/rules.d` called `01-ledger.rules` and paste this content inside: \n\n```\nSUBSYSTEMS==\"usb\", ATTRS{idVendor}==\"2c97\", ATTRS{idProduct}==\"0000\", MODE=\"0660\", TAG+=\"uaccess\", TAG+=\"udev-acl\" OWNER=\"__user__\"\nSUBSYSTEMS==\"usb\", ATTRS{idVendor}==\"2c97\", ATTRS{idProduct}==\"0001\", MODE=\"0660\", TAG+=\"uaccess\", TAG+=\"udev-acl\" OWNER=\"__user__\"\n```\n\nreplacing `__user__` with your system's user name.\n\nRun `udevadm control --reload` in system's shell to load the changes.\n\n## Development\n\nTo learn more about development process and individual commands, [check the desing doc](doc/design_doc.md).\n\n## Deploying\n\nThe build process is managed with [Make](https://www.gnu.org/software/make/).\n\n### Make Commands\n\n* `clean`: Clean the build and output directories\n* `delete`: Remove the application from the device\n* `load`: Load signed app onto the Ledger device\n* `build`: Build obj and bin api artefacts without loading\n* `sign`: Sign current app.hex with CA private key\n* `deploy`: Load the current app.hex onto the Ledger device\n\nSee `Makefile` for list of included functions.\n", "release_dates": []}, {"name": "ledgerjs-hw-app-cardano", "description": "Cardano bindings for Ledger Nano  S JavaScript APIs for Node.js and browsers", "language": "TypeScript", "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "readme": "![image](https://user-images.githubusercontent.com/837681/53001830-d7c8a600-342b-11e9-9038-e745cc91e543.png)\n\n### @cardano-foundation/ledgerjs-hw-app-cardano\n\nJS Library for communication with Ledger Hardware Wallets.\nThis library is compatible with the [Cardano ADA Ledger Application](https://github.com/cardano-foundation/ledger-app-cardano).\n\nNote: this project comes with both [Typescript](https://www.typescriptlang.org/) and [Flow](https://flow.org/) type definitions, but only the Typescript ones are checked for correctness.\n\n### Example code\n\nExample code interacting with `hw-app-cardano` is provided in `example-node` directory.\nYou can execute it with the `yarn run-example` command.\n\n### Tests\n\nAutomated tests are provided. There are two types of tests\n\n1. `yarn test-integration`. Tests JS API and integration with the physical Ledger device.\n    * `yarn test-speculos`. Runs the `test-integration` test against the Speculos emulator.\n\n2. `yarn device-self-test`. Runs tests defined in the application code of the Ledger application, requires development build of the application.\n    * `yarn device-self-test-speculos`. Runs `yarn device-self-test` on Speculos (useful because the full app in debug mode with self-tests does not fit on Nano S).\n\nNote that for these tests it is advisable to install the developer build of the Cardano app with _headless_ mode enabled unless you want to verify the UI flows, otherwise you will need a significant amount of time to manually confirm all prompts on the device.\n\n#### Speculos\n\nTo run the Speculos emulator, you first need to install it. The [Speculos documentation](https://speculos.ledger.com/installation/build.html) should take you through the installation process.\nAfter installing you can start the emulator with the correct seed:\n``\nspeculos /path/to/your/ledger-app-cardano-shelley/bin/app.elf --seed \"abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about\" --display headless\n``\n*Note: replace `/path/to/your/ledger-app-cardano-shelley/bin/app.elf` with a path to the `app.elf` file of the Cardano ledger app.*\nThis will start the emulator with a TCP server listening on port 9999 for APDU messages and a web interface running on port 5000 (http://localhost:5000) which can be used to interact with the app.\nThe `--display headless` option just hides any window UI.\n\n### Documentation\n\n- you can build the docs by running `yarn gen-docs` and then navigate to docs_generated/index.html\n- generated docs can also be found at (https://vacuumlabs.github.io/ledgerjs-cardano-shelley)\n- [CHANGELOG](CHANGELOG.md)\n", "release_dates": ["2024-01-17T13:38:47Z", "2023-02-20T13:08:11Z", "2022-03-31T10:31:33Z", "2021-10-27T11:30:36Z", "2021-06-09T12:12:22Z", "2021-05-24T09:21:27Z", "2021-05-11T16:53:16Z", "2021-04-13T16:09:06Z", "2021-02-18T16:52:51Z", "2021-02-08T18:33:11Z", "2020-12-14T18:34:13Z"]}, {"name": "merkle-tree-java", "description": "Merkle Tree implementation in Java and Aiken including proof generation and verification.", "language": "Java", "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "readme": "# Merkle Tree implementation in Java / Aiken\n\nThis is project that implements Merkle Tree in Java and compatible contract equivalent written in Aiken (https://aiken-lang.org/).\n\n[![Build](https://github.com/cardano-foundation/merkle-tree-java/actions/workflows/build.yml/badge.svg)](https://github.com/cardano-foundation/merkle-tree-java/actions/workflows/build.yml)\n[![License](https://img.shields.io:/github/license/cardano-foundation/merkle-tree-java?label=license)](https://github.com/cardano-foundation/merkle-tree-java/blob/master/LICENSE)\n[![Discord](https://img.shields.io/discord/1022471509173882950)](https://discord.gg/4WVNHgQ7bP)\n\n## Motivation\nMerkle Trees are a cryptographic commitment scheme based on hashes. This particular implementation uses sha2_256 algorithm.\nMerkle Trees are useful when we need to attest validity of something based on having only a small proof as well as cases\nwhere we need to check whether dataset has not been tampered with (via root merkle hash verification).\n\nIn this project, offchain part of the Merkle Tree is written in Java and on-chain part is written in Aiken (https://aiken-lang.org).\nIf you are looking for Plutus / Haskell implementation of Merkle Tree we recommend to look at: Hydra's implementation,\nwhich can be accessed at: https://github.com/input-output-hk/hydra/blame/master/plutus-merkle-tree/src/Plutus/MerkleTree.hs\n\nPlease note that various Merkle Tree implementations can produce differently looking trees which can have\ndifferent merkle node and root hashes, this implementation's goal is to have on-chain contract and off-chain part\nin exact synchrony. Needless to say, insertion order of elements into the tree plays\na role in the final merkle root hash as well as intermediate elements (nodes).\n\n## Requirements\n- JDK (>= 17)\n- maven (>= 3)\n- Aiken (>= 1.0.5-alpha)\n\n## Cloning\ngit clone https://github.com/cardano-foundation/merkle-tree-java\n\n## Java Building\nJava MerkleTree is located in `src/main/java`\n```\ncd merkle-tree-java\nmvn clean install\n```\n\n## Maven / Gradle\nMaven:\n```xml\n<dependency>\n    <groupId>org.cardanofoundation</groupId>\n    <artifactId>merkle-tree-java</artifactId>\n    <version>0.0.7</version>\n</dependency>\n```\nGradle:\n```\nimplementation(\"org.cardanofoundation:merkle-tree-java:0.0.7\")\n```\n\n## Contracts Building\nCardano's Aiken on chain contracts are located in `contracts` directory.\n\n```\ncd aiken\naiken check\n```\n\nAiken check should invoke all tests. Since Aiken doesn't support libraries which depend on std lib, typically for now\nyou have to copy and paste Aiken code into your smart contract / Cardano validator project.\n\nNotice that trying to invoke:\n```\naiken build\n```\ncommand will give a warning with the following message:\n```\n\u26a0 You do not have any validators to build!\n```\n\nbecause there are no on-chain validators in this contract. Even though plutus.json will be generated, it will not have\ncompiled onchain code and endpoint definitions.\n\n## Additional Docs\n- [CODE_OF_CONDUCT.md](CODE_OF_CONDUCT.md)\n- [SECURITY.md](SECURITY.md)\n- [CONTRIBUTING.md](CONTRIBUTING.md)\n- [CHANGELOG.md](CHANGELOG.md)\n\n## Example\n```\n  MerkleElement<String> mt = MerkleTree.fromList(List.of(\"dog\", \"cat\", \"mouse\", \"horse\"), fromStringFun());\n  byte[] rootHash = mt.itemHash();\n  System.out.println(\"Root Hash:\" + HexFormat.of().formatHex(rootHash));\n\n\n  String item = \"horse\";\n\n  Optional<List<ProofItem>> proof = MerkleTree.getProof(mt, item, fromStringFun());\n\n  System.out.println(\"Proof:\" + proof);\n\n  boolean isValid = MerkleTree.verifyProof(rootHash, item, proof.orElseThrow(), fromStringFun());\n\n  System.out.println(\"IsValidProof:\" + isValid);\n```\nprints:\n```\nRoot Hash: bd80e6bec9c2ef6158cf6a74f7f87531e94e0a824b9ba6db28c9a00ba418d452\nProof: Optional[List(Left{hash=0x47c5c28cae2574cdf5a194fe7717de68f8276f4bf83e653830925056aeb32a48}, Left{hash=0xd08508c86526cfde6c822b1b841f6d2615af61c94e910b0aeb0aa81d193f4ab5})]\nIsValidProof: true\n```\n", "release_dates": ["2023-09-04T08:16:02Z", "2023-08-17T14:55:15Z", "2023-05-19T14:05:41Z"]}, {"name": "signify-ts", "description": "Typescript prototype of Simple KERI for Web Apps", "language": "TypeScript", "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "readme": "# TypeScript implementation of Signify\n\nProject Name: signify-ts\n\n[![TypeScript](https://badges.frapsoft.com/typescript/code/typescript.png?v=101)](https://github.com/ellerbrock/typescript-badges/)\n[![Tests](https://github.com/WebOfTrust/signify-ts/actions/workflows/main.yml/badge.svg?branch=main)](https://github.com/WebOfTrust/signify-ts/actions/workflows/main.yml)\n[![codecov](https://codecov.io/gh/WebOfTrust/signify-ts/branch/main/graph/badge.svg?token=K3GK7MCYVW)](https://codecov.io/gh/WebOfTrust/signify-ts)\n[![Documentation](https://img.shields.io/badge/documentation-grey?)](https://weboftrust.github.io/signify-ts/)\n\n## Signify - KERI Signing at the Edge\n\nOf the five functions in a KERI agent, \n\n1. Key generation\n2. Encrypted key storage\n3. Event generation\n4. Event signing\n5. Event Validation\n\nSignify-TS splits off two, key generation and event signing into a TypeScript library to provide \"signing at the edge\".\nIt accomplishes this by using [libsodium](https://doc.libsodium.org/) to generate ed25519 key pairs for signing and x25519 key pairs for encrypting the\nprivate keys, next public keys and salts used to generate the private keys.  The encrypted private key and salts are then stored on a\nremote cloud agent that never has access to the decryption keys.  New key pair sets (current and next) will be generated \nfor inception and rotation events with only the public keys and blake3 hash of the next keys made available to the agent.\n\nThe communication protocol between a Signify client and [KERI](https://github.com/WebOfTrust/keri) agent will encode all cryptographic primitives as CESR base64\nencoded strings for the initial implementation.  Support for binary CESR can be added in the future.\n\n\n### Environment Setup\n\nThe code is built using Typescript and running code locally requires a Mac or Linux OS.\n\n-   Install [Node.js](https://nodejs.org)    \n\n\n-   Install dependencies:\n    ```bash\n    npm install\n    ```\n\nTypescript source files needs to be transpiled before running scripts or integration tests\n\n-   Build:\n    ```bash\n    npm run build\n    ```\n\n### Unit testing\n\nTo run unit tests\n\n```bash\nnpm test\n```\n\n### Integration testing\n\nThe integration tests depends on a local instance of KERIA, vLEI-Server and Witness Demo. These are specified in the [Docker Compose](./docker-compose.yaml) file. To start the dependencies, use docker compose:\n\n```bash\ndocker compose up deps\n```\n\nIf successful, it should print someting like this:\n\n```bash\n$ docker compose up deps\n[+] Running 5/4\n \u2714 Network signify-ts_default           Created                                           0.0s\n \u2714 Container signify-ts-vlei-server-1   Created                                           0.1s\n \u2714 Container signify-ts-keria-1         Created                                           0.1s\n \u2714 Container signify-ts-witness-demo-1  Created                                           0.1s\n \u2714 Container signify-ts-deps-1          Created                                           0.0s\nAttaching to signify-ts-deps-1\nsignify-ts-deps-1  | Dependencies running\nsignify-ts-deps-1 exited with code 0\n```\n\n**Important!** The integration tests runs on the build output in `dist/` directory. Make sure to run build before running the integration tests.\n\n```bash\nnpm run build\n```\n\nUse the npm script \"test:integration\" to run all integration tests in sequence:\n\n```bash\nnpm run test:integration\n```\n\nOr, use execute `jest` directly to run a specific integration test, for example:\n\n```bash\nnpx jest examples/integration-scripts/credentials.test.ts\n```\n\nIt is also possible to run the tests using local instances of vLEI, Keria, and witness network. Set the environment variable `TEST_ENVIRONMENT` to `local`, e.g:\n\n```\nTEST_ENVIRONMENT=local npx jest examples/integration-scripts/credentials.test.ts\n```\n\nThis changes the discovery urls to use `localhost` instead of the hostnames inside the docker network.\n\n### Old integration scripts\n\nTo run any of the old integration scripts that has not yet been converted to an integration test. Use `ts-node-esm`\n\n```bash\nnpx ts-node-esm examples/integration-scripts/challenge.ts\n```\n\n# Diagrams\n\nAccount Creation Workflow\n\n![Account Creation](/diagrams/account-creation-workflow.png)\n\n\n![Account Creation Webpage](/diagrams/account-creation-webpage-workflow.png)\n", "release_dates": []}, {"name": "state-of-the-developer-ecosystem", "description": "https://cardano-foundation.github.io/state-of-the-developer-ecosystem/2022/", "language": "JavaScript", "license": null, "readme": "<p align=\"center\"><img src=\".github/icon.svg\" alt=\"Cardano [Logo]\" /></p>\n\n# State Of The Cardano Developer Ecosystem\n\nThis repository holds data submitted as part of previous _State of the Cardano Developer Ecosystem_ surveys, as well as the supporting code which allows to visualize the results. For more details, have a look at the introductory article ['State of the Cardano Developer Ecosystem: a Survey to Equip the Community'](https://cardanofoundation.org/en/news/state-of-the-cardano-developer-ecosystem-a-survey-to-equip-the-community/).\n\n## Contributing\n\nSee [CONTRIBUTING.md](./CONTRIBUTING.md)\n\n## Past Editions\n\n<table> <tr> <td>\n<strong>DISCLAIMER</strong>\n<hr/>\nThe answers expressed in these surveys by the community are not intended to reflect the opinions or views of the Cardano Foundation or its members. The designations employed in these surveys do not imply the expression of any opinion whatsoever on the part of the Cardano Foundation regarding the questions and answers presented herein.\n</td></tr></table>\n\n| Year | Report                      | Source           |\n| ---  | ---                         | ---              |\n| 2022 | [HTML report][results-2022] | [source](./2022) |\n| 2023 | [HTML report][results-2023] | [source](./2023) |\n\n[results-2022]: https://cardano-foundation.github.io/state-of-the-developer-ecosystem/2022\n[results-2023]: https://cardano-foundation.github.io/state-of-the-developer-ecosystem/2023\n", "release_dates": []}, {"name": "terragrunt-aws-eks", "description": null, "language": "HCL", "license": null, "readme": "# How to deploy new environments\n\n* Set the environment to use:\n```\nexport ENVIRONMENT_NAME=production # must match any folder in ./environments\nexport AWS_PROFILE=xxx             # must match a profile in ~/.aws/config\n```\n* Copy the template environment (or any other) `./environments/dev-example-com` to `./environments/${ENVIRONMENT_NAME}`:\n```\ncp -a environments/dev-example-com environments/${ENVIRONMENT_NAME}\n```\n* Customize the variables in `./environments/${ENVIRONMENT_NAME}/config.yaml`. By the moment, the only available doc for it is in the form of comments within this file.\n* Login to the AWS account if needed:\n```\naws sso login --profile $AWS_PROFILE\n```\n* Run `terragrunt` from the corresponding environment folder. It will create the tfstate backend services out the box (s3/dynamodb):\n```\ncd environments/${ENVIRONMENT_NAME}\n\nterragrunt run-all plan \\\n  --terragrunt-include-external-dependencies \\\n  --terragrunt-non-interactive\n```\n* Eventually, apply the plan:\n```\nterragrunt run-all apply \\\n  --terragrunt-include-external-dependencies\n```\n\n# Switching between environments\n\nEverything you need to do is to run a terraform reconfigure before being able to plan/apply a different environment:\n```\ncd environments/${ENVIRONMENT_NAME}\nterragrunt run-all init -reconfigure \\\n  --terragrunt-include-external-dependencies\n```\n\n# Applying only specific modules\n\nThis terragrunt projects maintains separate, smaller, tfstates for each module that makes targeting resources quicker. Imagine you'd only want to plan/apply changes of an specific module like `route53`, for that you'd just set the `$ENVIRONMENT_NAME` you want to target and you'd go into the module directory and execute the plan, ie:\n\n```\nexport ENVIRONMENT_NAME=whatever\ncd tg-modules/route53\nterragrunt init -reconfigure # This is important if you've used any other environment before\nterragrunt plan\n```\n\nOptionally you can also target specific resources for the module just like you'd do with plain terraform by adding `-target=resource_type.resource_name`.\n\n# Destroying everything\n\nGiven that our `tg-modules` generate JSON outputs that are passed as inputs to other modules, it can be tricky to destroy all the resources if there is some problem while destroying the modules altogether. For example, it might be the case that the `eks-alb` module failed to deregister some target group and when you retry to destroy it, the `eks` module itself is already destroyed so there is no input JSON to pass to `eks-alb` anymore.\n\nSince at this point where we want to destroy everything we don't care about inconsistencies on the plan, we can workaround the problem described below by saving the JSON I/Os with `terragrunt` and providing them so the destroy command won't complain. This can be accomplished by following the next steps:\n\n* Executing a `terragrunt run-all plan` like this:\n```\nterragrunt run-all plan \\\n  --terragrunt-include-external-dependencies \\\n  --terragrunt-non-interactive \\\n  --terragrunt-debug\n```\n* Copying the most complete (the one including more input jsons, which is the `eks-alb` one) vars file to every `tg-module` so it's picked as an input tfvars file:\n```\nfor tgm in tg-modules/*\ndo\n    jq 'with_entries(.value |= tostring )' tg-modules/eks-alb/terragrunt-debug.tfvars.json > $tgm/terraform.tfvars.json\ndone\n```\n* Executing the destroy-all command from the `environment/$ENV` dir or executing them from each tg-module dir independently (recommended):\n  * run-all:\n```\nterragrunt run-all destroy \\\n  --terragrunt-include-external-dependencies \\\n  --terragrunt-non-interactive\n```\n  * run for each:\n```\nfor tgm in tg-modules/*; do cd $tgm; terragrunt destroy   --terragrunt-non-interactive -auto-approve; cd -; done\n```\n* And last but not least, cleaning up the folders with: \n```\nrm -f tg-modules/*/terraform.tfvars.json tg-modules/*/terragrunt-debug.tfvars.json\n```\n\n# Misc ops\n\n## Get kubeconfig for specific cluster\n\n```\nexport AWS_REGION=eu-west-1\naws eks list-clusters --region ${AWS_REGION}\n# set cluster name from list above\nexport CLUSTER_NAME=dev-example-com-cluster\naws eks update-kubeconfig \\\n  --region ${AWS_REGION} \\\n  --name ${CLUSTER_NAME} \\\n  --kubeconfig ~/.kube/${CLUSTER_NAME}-${AWS_REGION}.yaml\n```\n", "release_dates": []}, {"name": "testnets-cardano-org", "description": "Official Cardano Testnets website repository", "language": "JavaScript", "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "readme": "# Cardano Testnets\n\n* [testnets.cardano.org](https://testnets.cardano.org/)\n\n## Contributing\n\nContributions are welcome via pull requests, likewise reported issues will be monitored. For more see [contributing](docs/contributing.md) and [code of conduct](docs/code_of_conduct.md).\n", "release_dates": []}]